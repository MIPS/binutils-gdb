// nanomips-reloc.def -- Nanomips relocation and instruction definitions.

// Copyright (C) 2017 Free Software Foundation, Inc.
// Written by Vladimir Radosavljevic <vladimir.radosavljevic@imgtec.com>

// This file is part of gold.

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
// MA 02110-1301, USA.
//
//
//
// Symbol reference type--------------------------------------------------------------+
// Mask for relaxations or expansions------------------------------+                  |
// Size of the bits to be relocated--------------------+           |                  |
// The size of the instruction--------------+          |           |                  |
// Type-----------------+                   |          |           |                  |
// Name                 |                   |          |           |                  |
//  |                   |                   |          |           |                  |
NRD(NONE,               STATIC,             0,         0,          0,                 0)
NRD(32,                 STATIC,             0,         32,         0,                 Symbol::ABSOLUTE_REF)
NRD(NEG,                STATIC,             0,         0,          0,                 0)
NRD(ASHIFTR_1,          STATIC,             0,         0,          0,                 0)
NRD(UNSIGNED_8,         STATIC,             0,         8,          0,                 0)
NRD(SIGNED_8,           STATIC,             0,         8,          0,                 0)
NRD(UNSIGNED_16,        STATIC,             0,         16,         0,                 0)
NRD(SIGNED_16,          STATIC,             0,         16,         0,                 0)
NRD(PC25_S1,            STATIC,             32,        26,         0xfe000000,        (Symbol::FUNCTION_CALL|Symbol::RELATIVE_REF))
NRD(PC21_S1,            STATIC,             32,        22,         0xfc000000,        (Symbol::FUNCTION_CALL|Symbol::RELATIVE_REF))
NRD(PC14_S1,            STATIC,             32,        15,         0xfc00c000,        (Symbol::FUNCTION_CALL|Symbol::RELATIVE_REF))
NRD(PC11_S1,            STATIC,             32,        12,         0xfc1c0000,        (Symbol::FUNCTION_CALL|Symbol::RELATIVE_REF))
NRD(PC10_S1,            STATIC,             16,        11,         0xfc00,            (Symbol::FUNCTION_CALL|Symbol::RELATIVE_REF))
NRD(PC7_S1,             STATIC,             16,        8,          0xfc00,            (Symbol::FUNCTION_CALL|Symbol::RELATIVE_REF))
NRD(PC4_S1,             STATIC,             16,        5,          0xfc00,            (Symbol::FUNCTION_CALL|Symbol::RELATIVE_REF))
NRD(GPREL19_S2,         STATIC,             32,        21,         0xfc000003,        Symbol::RELATIVE_REF)
NRD(GPREL18_S3,         STATIC,             32,        21,         0,                 Symbol::RELATIVE_REF)
NRD(GPREL18,            STATIC,             32,        18,         0xfc1c0000,        Symbol::RELATIVE_REF)
NRD(GPREL17_S1,         STATIC,             32,        18,         0xfc1c0001,        Symbol::RELATIVE_REF)
NRD(GPREL16_S2,         STATIC,             32,        18,         0,                 Symbol::RELATIVE_REF)
NRD(GPREL7_S2,          STATIC,             16,        9,          0xfc00,            Symbol::RELATIVE_REF)
NRD(GPREL_HI20,         STATIC,             32,        20,         0,                 Symbol::RELATIVE_REF)
NRD(PC_HI20,            STATIC,             32,        20,         0,                 Symbol::RELATIVE_REF)
NRD(HI20,               STATIC,             32,        20,         0,                 Symbol::ABSOLUTE_REF)
NRD(LO12,               STATIC,             32,        12,         0xfc00f000,        Symbol::ABSOLUTE_REF)
NRD(GPREL_I32,          STATIC,             48,        32,         0,                 Symbol::ABSOLUTE_REF)
NRD(PC_I32,             STATIC,             48,        32,         0,                 Symbol::ABSOLUTE_REF)
NRD(I32,                STATIC,             48,        32,         0,                 Symbol::ABSOLUTE_REF)
NRD(GOT_DISP,           STATIC,             32,        21,         0xfc000003,        Symbol::RELATIVE_REF)
NRD(GOTPC_I32,          STATIC,             48,        32,         0,                 Symbol::RELATIVE_REF)
NRD(GOTPC_HI20,         STATIC,             32,        20,         0,                 Symbol::RELATIVE_REF)
NRD(GOT_LO12,           STATIC,             32,        12,         0,                 Symbol::RELATIVE_REF)
NRD(GOT_CALL,           STATIC,             32,        21,         0xfc000003,        Symbol::RELATIVE_REF)
NRD(GOT_PAGE,           STATIC,             32,        21,         0xfc000003,        Symbol::RELATIVE_REF)
NRD(GOT_OFST,           STATIC,             32,        18,         0xfc00f000,        Symbol::RELATIVE_REF)
NRD(LO4_S2,             STATIC,             16,        6,          0xfc00,            Symbol::ABSOLUTE_REF)
NRD(GPREL_LO12,         STATIC,             32,        12,         0,                 Symbol::RELATIVE_REF)
NRD(ALIGN,              PLACEHOLDER,        0,         0,          0,                 0)
NRD(FILL,               PLACEHOLDER,        0,         0,          0,                 0)
NRD(MAX,                PLACEHOLDER,        0,         0,          0,                 0)
NRD(INSN32,             PLACEHOLDER,        0,         0,          0,                 0)
NRD(FIXED,              PLACEHOLDER,        0,         0,          0,                 0)
NRD(NORELAX,            PLACEHOLDER,        0,         0,          0,                 0)
NRD(RELAX,              PLACEHOLDER,        0,         0,          0,                 0)
NRD(INSN16,             PLACEHOLDER,        0,         0,          0,                 0)
NRD(JALR,               PLACEHOLDER,        0,         0,          0,                 0)

// NIE - Nanomips instruction expansion
// NIR - Nanomips instruction relaxation
//
// Type of the instruction------------------------------------------------------------------------------------------+
// Is store instruction-----------------------------------------------------------------------------------+         |
// The offset where to add/delete bytes---------------------------------------------------------+         |         |
// The number of bytes to add/delete--------------------------------------------------+         |         |         |
// Instruction name-------------------------------------------+                       |         |         |         |
// Opcode----------------------------------+                  |                       |         |         |         |
// Array name----------+                   |                  |                       |         |         |         |
// Reloc Name          |                   |                  |                       |         |         |         |
//  |                  |                   |                  |                       |         |         |         |
NIE(GOT_DISP,          ADDIUGPB32,         0x40000002,        "lw[gp]",               0,        0,        N,        BYTE_ADDRESS)
NIE(GOT_DISP,          ADDIUGPW32,         0x40000002,        "lw[gp]",               0,        0,        N,        WORD_ADDRESS)
NIE(GOT_DISP,          LAPC32,             0x40000002,        "lw[gp]",               0,        0,        N,        PCREL_ADDRESS)
NIE(GOT_DISP,          LAPC48,             0x40000002,        "lw[gp]",               2,        4,        N,        PCREL_ADDRESS_NMS)
NIE(GOT_DISP,          ADDIUGP48,          0x40000002,        "lw[gp]",               2,        4,        N,        GPREL_NMS)
NIE(GOT_DISP,          LWPC48_GOT,         0x40000002,        "lw[gp]",               2,        4,        N,        GOTPCREL_NMS)
NIE(GOT_DISP,          BALC_LONG,          0x40000002,        "lw[gp]",               4,        4,        N,        PCREL)
NIE(GOT_DISP,          PCREL_GOT,          0x40000002,        "lw[gp]",               4,        4,        N,        GOTPCREL)
NIE(GOT_DISP,          ADDIUGP_LONG,       0x40000002,        "lw[gp]",               8,        4,        N,        GPREL)
NIE(GOT_CALL,          LAPC48,             0x40000002,        "lw[gp]",               2,        4,        N,        PCREL_ADDRESS_NMS)
NIE(GOT_CALL,          BALC_LONG,          0x40000002,        "lw[gp]",               4,        4,        N,        PCREL)
NIE(GOT_CALL,          LWPC48_GOT,         0x40000002,        "lw[gp]",               2,        4,        N,        GOTPCREL_NMS)
NIE(GOT_CALL,          PCREL_GOT,          0x40000002,        "lw[gp]",               4,        4,        N,        GOTPCREL)
NIE(GOT_PAGE,          ALUIPC32,           0x40000002,        "lw[gp]",               0,        0,        N,        PCREL_ADDRESS)
NIE(GOT_PAGE,          ADDIUGP48,          0x40000002,        "lw[gp]",               2,        4,        N,        GPREL_NMS)
NIE(GOT_PAGE,          ADDIUGP_LONG,       0x40000002,        "lw[gp]",               4,        4,        N,        GPREL)
NIE(GOT_PAGE,          LWPC48_GOT,         0x40000002,        "lw[gp]",               2,        4,        N,        GOTPCREL_NMS)
NIE(GOT_PAGE,          PCREL_GOT,          0x40000002,        "lw[gp]",               4,        4,        N,        GOTPCREL)
NIE(PC25_S1,           BC_LONG,            0x28000000,        "bc",                   6,        4,        N,        PCREL)
NIE(PC25_S1,           BALC_LONG,          0x2a000000,        "balc",                 6,        4,        N,        PCREL)
NIE(PC21_S1,           MOVE_BALC,          0x08000000,        "move.balc",            2,        4,        N,        STANDARD)
NIE(PC11_S1,           BEQIC,              0xc8000000,        "beqic",                4,        4,        N,        STANDARD)
NIE(PC11_S1,           BGEIC,              0xc8080000,        "bgeic",                4,        4,        N,        STANDARD)
NIE(PC11_S1,           BGEIUC,             0xc80c0000,        "bgeiuc",               4,        4,        N,        STANDARD)
NIE(PC11_S1,           BLTIC,              0xc8180000,        "bltic",                4,        4,        N,        STANDARD)
NIE(PC11_S1,           BLTIUC,             0xc81c0000,        "bltiuc",               4,        4,        N,        STANDARD)
NIE(PC11_S1,           BNEIC,              0xc8100000,        "bneic",                4,        4,        N,        STANDARD)
NIE(GPREL19_S2,        LWGP_LONG,          0x40000002,        "lw[gp]",               8,        4,        N,        GPREL)
NIE(GPREL19_S2,        SWGP_LONG,          0x40000003,        "sw[gp]",               8,        4,        Y,        GPREL)
NIE(GPREL19_S2,        ADDIUGP_LONG,       0x40000000,        "addiu[gp.w]",          8,        4,        N,        GPREL)
NIE(GPREL18,           LBGP_LONG,          0x44000000,        "lb[gp]",               8,        4,        N,        GPREL)
NIE(GPREL18,           LBUGP_LONG,         0x44080000,        "lbu[gp]",              8,        4,        N,        GPREL)
NIE(GPREL18,           SBGP_LONG,          0x44040000,        "sb[gp]",               8,        4,        Y,        GPREL)
NIE(GPREL18,           ADDIUGP_LONG,       0x440c0000,        "addiu[gp.b]",          8,        4,        N,        GPREL)
NIE(GPREL17_S1,        LHGP_LONG,          0x44100000,        "lh[gp]",               8,        4,        N,        GPREL)
NIE(GPREL17_S1,        LHUGP_LONG,         0x44100001,        "lhu[gp]",              8,        4,        N,        GPREL)
NIE(GPREL17_S1,        SHGP_LONG,          0x44140000,        "sh[gp]",               8,        4,        Y,        GPREL)
NIE(PC10_S1,           BC32,               0x1800,            "bc[16]",               2,        2,        N,        STANDARD)
NIE(PC10_S1,           BALC32,             0x3800,            "balc[16]",             2,        2,        N,        STANDARD)
NIE(PC7_S1,            BEQC32,             0x9800,            "beqzc[16]",            2,        2,        N,        STANDARD)
NIE(PC7_S1,            BNEC32,             0xb800,            "bnezc[16]",            2,        2,        N,        STANDARD)
NIE(PC4_S1,            BEQC32,             0xd800,            "beqc[16]",             2,        2,        N,        BEQC16)
NIE(PC4_S1,            BNEC32,             0xd800,            "bnec[16]",             2,        2,        N,        BNEC16)
NIE(GPREL7_S2,         LWGP32,             0x5400,            "lw[gp16]",             2,        2,        N,        STANDARD)
NIE(GPREL7_S2,         SWGP32,             0xd400,            "sw[gp16]",             2,        2,        Y,        STANDARD)
NIE(LO4_S2,            LW32,               0x1400,            "lw[16]",               2,        2,        N,        STANDARD)
NIE(LO4_S2,            SW32,               0x9400,            "sw[16]",               2,        2,        Y,        STANDARD)
NIR(PC25_S1,           BC16,               0x28000000,        "bc",                  -2,        2,        N,        STANDARD)
NIR(PC25_S1,           BALC16,             0x2a000000,        "balc",                -2,        2,        N,        STANDARD)
NIR(PC14_S1,           BEQC16,             0x88000000,        "beqc",                -2,        2,        N,        STANDARD)
NIR(PC14_S1,           BNEC16,             0xa8000000,        "bnec",                -2,        2,        N,        STANDARD)
NIR(GPREL19_S2,        LWGP16,             0x40000002,        "lw[gp]",              -2,        2,        N,        STANDARD)
NIR(GPREL19_S2,        SWGP16,             0x40000003,        "sw[gp]",              -2,        2,        Y,        STANDARD)
NIR(LO12,              LW16,               0x84008000,        "lw",                  -2,        2,        N,        STANDARD)
NIR(LO12,              SW16,               0x84009000,        "sw",                  -2,        2,        Y,        STANDARD)
