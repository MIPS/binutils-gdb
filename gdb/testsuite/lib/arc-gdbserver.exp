# Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003 Free Software
# Foundation, Inc.
#
# This file is part of DejaGnu.
#
# DejaGnu is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# DejaGnu is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with DejaGnu; if not, write to the Free Software Foundation,
# Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# gdbserver running cross

#load the config file
load_generic_config "remote-gdbserver"


process_multilib_options ""

# The default compiler for this target.
set_board_info compiler  "$env(GDBTEST_CC)"
set_board_info cflags    "$env(GDBTEST_CFLAGS)"
set_board_info assembler "$env(GDBTEST_AS) $env(GDBTEST_ASFLAGS)"
set_board_info linker    "$env(GDBTEST_LD)" 
set_board_info ldflags   "$env(GDBTEST_LDFLAGS)"

# We will be using the standard GDB remote protocol
set_board_info gdb_protocol "remote"

set_board_info netport "$env(GDBTEST_GDBSERVER_HOST):$env(GDBTEST_GDBSERVER_PORT)"

# Path to the gdbserver executable, if required.
set_board_info gdb_server_prog $env(GDBTEST_GDBSERVER_PATH)
#    "../gdbserver/gdbserver"

# Name of the computer whose socket will be used, if required.
set_board_info sockethost "$env(GDBTEST_GDBSERVER_HOST):"

# Port ID to use for socket connection
set_board_info gdb,socketport $env(GDBTEST_GDBSERVER_PORT)

# Use techniques appropriate to a stub
set_board_info use_gdb_stub 1

# This gdbserver can only run a process once per session.
set_board_info gdb,do_reload_on_run 1

# There's no support for argument-passing (yet).
set_board_info noargs 1

# Can't do FILE IO in current gdbserver
set_board_info gdb,nofileio 1

# Can't do input (or output) in the current gdbserver.
set_board_info gdb,noinferiorio 1

# Can't do hardware watchpoints, in general
set_board_info gdb,no_hardware_watchpoints 1

# Copy the testcases using cp 
set_board_info rcp_prog "cp"


# Set nfs directory 
# On my machine this is how it is mounted. - ramana
# kanika:/home/opt/share on /mnt/nfsmounts type nfs (rw,addr=192.168.100.68)
set_board_info nfsdir $env(GDBTEST_NFSDIR)

# Set the test directory on the board. Where is this mounted 
# on the board. 
set_board_info tests_dir $env(GDBTEST_TESTS_DIR)

# run on target using rsh
set_board_info rsh_prog "rsh"

# Download directory
set_board_info download_dir $env(GDBTEST_DOWNLOAD_DIR)

# Hostname 
set_board_info hostname $env(GDBTEST_GDBSERVER_HOST)
set_board_info username "root"
set_board_info sockethost "$env(GDBTEST_GDBSERVER_HOST):"

#Shell prompt
set_board_info shell_prompt "\[arcLinux\]$"

#set_board_info board,connect "telnet"

# timeout
#set_board_info gdb,timeout 300
