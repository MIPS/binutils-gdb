# Copyright (C) 2016-2025 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test symbol lookup when there are multiple circular imports.

load_lib "d-support.exp"
load_lib "dwarf.exp"

require allow_d_tests dwarf2_support

standard_testfile circular.c circular-dw.S

# Make some DWARF for the test.
set asm_file [standard_output_file $srcfile2]
Dwarf::assemble $asm_file {
    cu {} {
	compile_unit {
	    DW_AT_language @DW_LANG_D
	} {
	    declare_labels circular1_label circular2_label circular3_label
	    declare_labels circular4_label circular5_label

	    circular1_label: module {
		DW_AT_name circular1
	    } {
		imported_module {
		    DW_AT_import :$circular2_label
		}
		imported_module {
		    DW_AT_import :$circular3_label
		}
		imported_module {
		    DW_AT_import :$circular4_label
		}
		imported_module {
		    DW_AT_import :$circular5_label
		}

		subprogram {
		    DW_AT_external 1 flag_present
		    MACRO_AT_func {found}
		}
	    }

	    circular2_label: module {
		DW_AT_name circular2
	    } {
		imported_module {
		    DW_AT_import :$circular1_label
		}
		imported_module {
		    DW_AT_import :$circular3_label
		}
		imported_module {
		    DW_AT_import :$circular4_label
		}
		imported_module {
		    DW_AT_import :$circular5_label
		}
	    }

	    circular3_label: module {
		DW_AT_name circular3
	    } {
		imported_module {
		    DW_AT_import :$circular1_label
		}
		imported_module {
		    DW_AT_import :$circular2_label
		}
		imported_module {
		    DW_AT_import :$circular4_label
		}
		imported_module {
		    DW_AT_import :$circular5_label
		}
	    }

	    circular4_label: module {
		DW_AT_name circular4
	    } {
		imported_module {
		    DW_AT_import :$circular1_label
		}
		imported_module {
		    DW_AT_import :$circular2_label
		}
		imported_module {
		    DW_AT_import :$circular3_label
		}
		imported_module {
		    DW_AT_import :$circular5_label
		}
	    }

	    circular5_label: module {
		DW_AT_name circular5
	    } {
		imported_module {
		    DW_AT_import :$circular1_label
		}
		imported_module {
		    DW_AT_import :$circular2_label
		}
		imported_module {
		    DW_AT_import :$circular3_label
		}
		imported_module {
		    DW_AT_import :$circular4_label
		}
	    }
	}
    }
}

if { [prepare_for_testing "failed to prepare" ${testfile} \
          [list $srcfile $asm_file] {nodebug}] } {
    return -1
}

gdb_test_no_output "set language d"

if {![runto "circular1.found"]} {
    return -1
}

# This last test shouldn't timeout.
gdb_test "print notfound" "No symbol \"notfound\" in current context."
