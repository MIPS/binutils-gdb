
			Known problems in GDB 6.0

		See also: http://www.gnu.org/software/gdb/bugs/

mips*-*-*
powerpc*-*-*
sparc*-*-*

GDB's SPARC, MIPS and PowerPC targets, in 6.0, have not been updated
to use the new frame mechanism.

People encountering problems with these targets should consult GDB's
web pages and mailing lists (http://www.gnu.org/software/gdb/) to see
if there is an update.

arm-*-*

GDB's ARM target, in 6.0, has not been updated to use the new frame
mechanism.

Fortunatly the ARM target, in the GDB's mainline sources, has been
updated so people encountering problems should consider downloading a
more current GDB (http://www.gnu.org/software/gdb/current).

gdb/1091: Constructor breakpoints ignored
gdb/1193: g++ 3.3 creates multiple constructors: gdb 5.3 can't set breakpoints

When gcc 3.x compiles a C++ constructor or C++ destructor, it generates
2 or 3 different versions of the object code.  These versions have
unique mangled names (they have to, in order for linking to work), but
they have identical source code names, which leads to a great deal of
confusion.  Specifically, if you set a breakpoint in a constructor or a
destructor, gdb will put a breakpoint in one of the versions, but your
program may execute the other version.  This makes it impossible to set
breakpoints reliably in constructors or destructors.

gcc 3.x generates these multiple object code functions in order to
implement virtual base classes.  gcc 2.x generated just one object code
function with a hidden parameter, but gcc 3.x conforms to a multi-vendor
ABI for C++ which requires multiple object code functions.
