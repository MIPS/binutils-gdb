2007-01-05  Joel Brobecker  <brobecker@adacore.com>

	* i386-tdep.c (i386_analyze_stack_align): Add comment.

2007-01-05  Joel Brobecker  <brobecker@adacore.com>

	* NEWS: Add entries for new catch commands.

2006-02-05  Joel Brobecker  <brobecker@adacore.com>

        * dwarf2read.c (partial_die_info): Add field has_byte_size.
        (add_partial_symbol): Correct identification of external references.
        (process_structure_scope): Likewise.
        (read_partial_die): Handle DW_AT_byte_size attribute.

2007-01-05  Daniel Jacobowitz  <dan@codesourcery.com>

	* xml-support.c (gdb_xml_end_element): Remove wrong backslashes.

2007-01-05  Nick Roberts  <nickrob@snap.net.nz>

	* varobj.c (get_type_deref): Fix variable objects for references to
	pointers.

2007-01-04  Daniel Jacobowitz  <dan@codesourcery.com>

	* symtab.c (find_pc_sect_psymtab): Add comments.  Handle psymtabs
	with no symbols.

2007-01-04  Daniel Jacobowitz  <dan@codesourcery.com>

	* memory-map.c (struct_memory_map_parsing_data): Remove most
	members.  Make property_name an array.
	(free_memory_map_parsing_data, memory_map_start_element)
	(memory_map_end_element, memory_map_character_data): Delete.
	(memory_map_start_memory, memory_map_end_memory)
	(memory_map_start_property, memory_map_end_property): New functions.
	(property_attributes, memory_children, memory_type_enum)
	(memory_attributes, memory_map_children, memory_map_elements): New.
	(parse_memory_map): Rewrite.
	* xml-support.c (debug_xml): New.
	(xml_get_required_attribute, xml_get_integer_attribute)
	(xml_get_enum_value, free_xml_parser, make_cleanup_free_xml_parser):
	Delete.
	(struct scope_level, struct gdb_xml_parser, gdb_xml_body_text)
	(gdb_xml_debug, gdb_xml_error, gdb_xml_values_cleanup)
	(gdb_xml_start_element, gdb_xml_start_element_wrapper)
	(gdb_xml_end_element, gdb_xml_end_element_wrapper, gdb_xml_cleanup)
	(gdb_xml_create_parser_and_cleanup, gdb_xml_parse)
	(gdb_xml_parse_ulongest, gdb_xml_parse_attr_ulongest)
	(gdb_xml_parse_attr_enum, show_debug_xml, _initialize_xml_support):
	New.
	* xml-support.h (struct gdb_xml_value, gdb_xml_attribute_handler)
	(enum gdb_xml_attribute_flag, struct gdb_xml_attribute)
	(enum gdb_xml_element_flag, struct gdb_xml_element)
	(gdb_xml_element_start_handler, gdb_xml_element_end_handler)
	(struct gdb_xml_enum): New.
	(gdb_xml_create_parser_and_cleanup, gdb_xml_parse, gdb_xml_debug)
	(gdb_xml_error, gdb_xml_parse_attr_ulongest)
	(gdb_xml_parse_attr_enum, gdb_xml_parse_ulongest): New prototypes.
	(xml_get_required_attribute, xml_get_integer_attribute)
	(xml_get_enum_value, make_cleanup_free_xml_parser): Delete prototypes.
	* Makefile.in (xml_support_h, xml-support.o): Update.

2007-01-04  Daniel Jacobowitz  <dan@codesourcery.com>

	* Makefile.in (eval.o): Update dependencies.
	* eval.c: Include "ui-out.h" and "exceptions.h".
	(evaluate_subexp_standard): Use TRY_CATCH around value_of_variable.
	Use value_zero if an error occurs when avoiding side effects.
	* varobj.c (c_value_of_root): Initialize new_val.

2007-01-04  Daniel Jacobowitz  <dan@codesourcery.com>

	* varobj.c (varobj_list_children): Stop if the number of children is
	unknown.
	(c_number_of_children):

2007-01-04  Mark Kettenis  <kettenis@gnu.org>

	* alpha-tdep.c (alpha_register_name): Use ARRAY_SIZE.
	(alpha_read_insn, alpha_skip_prologue, alpha_heuristic_proc_start)
	(alpha_heuristic_frame_unwind_cache, alpha_next_pc)
	(alpha_gdbarch_init): Use ALPHA_INSN_SIZE, ALPHA_REGISTER_SIZE and
	sizeof, instead of hardcoded constants.

2007-01-04  Daniel Jacobowitz  <dan@codesourcery.com>

	* CONTRIBUTE: Use sourceware.org.

2007-01-04  Daniel Jacobowitz  <dan@codesourcery.com>

	* buildsym.c (start_subfile): Handle producer.
	(record_producer): New function.
	* buildsym.h (struct subfile): Include producer.
	(record_producer): New prototype.
	* dwarf2-frame.c (struct dwarf2_cie): Add version and augmentation.
	(struct dwarf2_frame_state): Add armcc_cfa_offsets_sf and
	armcc_cfa_offsets_reversed.
	(execute_cfa_program): Handle armcc_cfa_offsets_sf.
	(dwarf2_frame_find_quirks): New function.
	(dwarf2_frame_cache): Call it.  Handle armcc_cfa_offsets_reversed.
	(decode_frame_entry_1): Record the CIE version.  Record the
	augmentation.  Skip armcc augmentations.
	* dwarf2read.c (read_file_scope): Save the producer.
	* symtab.h (struct symtab): Rename unused version member to
	producer.

2007-01-04  Daniel Jacobowitz  <dan@codesourcery.com>

	* configure.ac (build_warnings): Use -Wall and
	-Wdeclaration-after-statement.
	* configure: Regenerated.

2007-01-04  Vladimir Prus  <vladimir@codesourcery.com>

	Simplify access to variours properties of child
	variable objects in C.
	* varobj.c (value_struct_element_index): New function.
	(c_describe_child): New function.
	(c_name_of_child, c_value_of_child)
	(c_type_of_child): Rewrite to use c_describe_child.

2007-01-04  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* varobj.c: Include "vec.h". 
	(varobj_p): New typedef, declare vector of those.
	(struct varobj): Use vector for the 'children' member.
	(child_exists): Remove.
	(save_child_in_parent): Remove.
	(remove_child_from_parent): Remove.
	(struct varobj_child): Remove.
	(struct vstack): Remove.
	(vpush, vpop): Remove.
	(varobj_list_children): Adjust to work work vector.
	(varobj_update): Likewise. Use vectors for
	working stack and result.
	(delete_variable_1): Likewise.
	* Makefile.in (varobj.o): Update dependencies.

2007-01-04  Vladimir Prus  <vladimir@codesourcery.com>

	Port from Apple's version.
	gdb/
	* varobj.c (type_changeable): Rename to...
	(varobj_value_is_changeable_p): ...this. Adjust all callers.
	(is_root_p): New function. Use it everywhere.

2007-01-04  Vladimir Prus  <vladimir@codesourcery.com>

	Simplify usage of mi_continue_to.
	* lib/mi-support.exp (mi_runto_helper): Renamed
	from mi_runto, added new parameter 'run_or_continue'.
	(mi_runto): Use mi_runto_helper.
	(mi_continue_to): Accept just function name as parameter.
	Use mi_runto_helper.
	* gdb.mi/mi-var-cmd.exp: Adjust to changes.
	* gdb.mi/mi2-var-cmd.exp: Likewise.

2007-01-04  Jim Blandy  <jimb@codesourcery.com>

	* glibc-tdep.c (glibc_skip_solib_resolver): Look for '_dl_fixup',
	then plain 'fixup'.

2007-01-04  Joel Brobecker  <brobecker@adacore.com>

	* hpread.c (hpread_start_psymtab): Remove unnecessary extern.

2007-01-04  Joel Brobecker  <brobecker@adacore.com>

	* hpread.c (hpread_type_lookup): Fix compilation failure.

2007-01-04  Qinwei  <qinwei@sunnorth.com.cn>

	* NEWS: New port to S+core.
	* MAINTAINERS (Write After Approval, Responsible Maintainers):
	Add myself.

	* Makefile.in: Add dependencies for S+core files.
	* configure.tgt (score*, score-*-*): Add S+core target.
	* config/score/embed.mt: New file.
	* score-tdep.c: New file.
	* score-tdep.h: New file.

2007-01-04  Joel Brobecker  <brobecker@adacore.com>

	* ada-lang.c (ada_evaluate_subexp) [OP_TYPE]: Return a value with
	the appropriate type rather than a bogus void type.

2007-01-04  Joel Brobecker  <brobecker@adacore.com>

	* ada-lang.h (ada_find_printable_frame): Remove.
	(ada_exception_catchpoint_p, ada_decode_exception_location)
	(ada_decode_assert_location): Add declaration.
	* ada-lang.c: Add include of annotate.h and valprint.h.
	(exception_catchpoint_kind): New enum.
	(function_name_from_pc, is_known_support_routine)
	(ada_find_printable_frame, ada_unhandled_exception_name_addr)
	(ada_exception_name_addr_1, ada_exception_name_addr)
	(print_it_exception, print_one_exception, print_mention_exception)
	(print_it_catch_exception, print_one_catch_exception)
	(print_mention_catch_exception, catch_exception_breakpoint_ops)
	(print_it_catch_exception_unhandled)
	(print_one_catch_exception_unhandled)
	(print_mention_catch_exception_unhandled, print_it_catch_assert)
	(print_one_catch_assert, print_mention_catch_assert)
	(ada_exception_catchpoint_p, error_breakpoint_runtime_sym_not_found)
	(ada_get_next_arg, catch_ada_exception_command_split)
	(ada_exception_sym_name, ada_exception_sym_name)
	(ada_exception_breakption_ops, ada_exception_catchpoint_cond_string)
	(ada_parse_catchpoint_condition, ada_exception_sal)
	(ada_decode_exception_location)
	(ada_decode_assert_location): New function.
	(catch_exception_unhandled_breakpoint_ops): New global variable.
	(catch_assert_breakpoint_ops): New global variable.
	* breakpoint.c: Add include of ada-lang.h.
	(print_one_breakpoint): Do not print the condition for Ada
	exception catchpoints.
	(create_ada_exception_breakpoint): New function.
	(catch_ada_exception_command, catch_assert_command): New function.
	(catch_command_1): Add support for the new "catch exception" and
	"catch assert" commands.
	(_initialize_breakpoint): Add help description for the new catch
	commands.
	* Makefile.in (ada-lang.o): Add dependency on annotate.h and
	valprint.h.
	(breakpoint.o): Add dependency on ada-lang.h.

2007-01-03  Pedro Alves  <pedro_alves@portugalmail.pt>

	* coffread.c (cs_to_section): If bfd_section is found, always
	return its section index.
	(coff_symtab_read): Determine the minimal_symbol_type using the
	bfd_section flags.

2007-01-03  Jan Kratochvil  <jan.kratochvil@redhat.com>
	    Daniel Jacobowitz  <dan@codesourcery.com>

	* Makefile.in (top.o): Update.
	* top.c (gdb_readline_wrapper_done, gdb_readline_wrapper_result)
	(saved_after_char_processing_hook, gdb_readline_wrapper_line)
	(struct gdb_readline_wrapper_cleanup, gdb_readline_wrapper_cleanup):
	New.
	(gdb_readline_wrapper): Rewrite to use asynchronous readline.

2007-01-03  Mark Kettenis  <kettenis@gnu.org>

	* arm-linux-tdep.c (arm_linux_extract_return_value): Remove.
	(arm_linux_init_abi): Don't set deprecated_extract_return_value.

2007-01-03  Daniel Jacobowitz  <dan@codesourcery.com>

	* ada-lang.c (find_struct_field): Initialize *byte_offset_p.
	* breakpoint.c (do_enable_breakpoint): Ignore both mem_cnt and i.
	* c-typeprint.c (c_type_print_varspec_suffix): Don't test length
	greater than or equal to zero.
	* m2-typeprint.c (m2_array): Likewise.
	* p-typeprint.c (pascal_type_print_varspec_prefix): Likewise.
	* gdbtypes.c (copy_type_recursive): Correct == typo.
	* i386-tdep.c (i386_skip_prologue): Remove stray semicolon.
	* linux-nat.c (linux_nat_info_proc_cmd): Don't compare a pointer
	greater than zero.
	* macroscope.c (sal_macro_scope): Don't name a local variable "main".
	(default_macro_scope): Remove unused variable.
	* prologue-value.h (pv_area_find_reg): Don't name an argument
	"register".
	* remote-fileio.c (remote_fio_func_map): Add missing braces.
	* remote.c (sigint_remote_twice_token, sigint_remote_token): Change
	type.
	(cleanup_sigint_signal_handler): Remove casts.
	* valprint.c (val_print): Use a volatile local for the modified
	argument.
	* varobj.c (languages): Remove extra array dimension.
	(varobj_create): Correct access to languages array.
	* mi/mi-cmd-break.c (mi_cmd_break_insert, mi_cmd_break_watch): Add
	missing braces.
	* mi/mi-cmd-disas.c (mi_cmd_disassemble): Likewise.
	* mi/mi-cmd-env.c (mi_cmd_env_path, mi_cmd_env_dir): Likewise.
	* mi/mi-getopt.c (mi_valid_noargs): Likewise.
	* mi/mi-main.c (mi_cmd_data_read_memory): Likewise.
	(mi_cmd_data_write_memory): Likewise.
	* signals/signals.c (target_signal_to_string): Cast to int before
	comparing.
	* tui/tui-layout.c (init_and_make_win): Take and return a void *.
	Update all callers.

2007-01-03  Daniel Jacobowitz  <dan@codesourcery.com>

	* NEWS: Mention pointer to member improvements.
	* Makefile.in (gnu-v3-abi.o): Delete special rule.
	(eval.o, gnu-v3-abi.o, ia64-tdep.o): Update.
	* ada-valprint.c (ada_print_scalar): Update for new type codes.
	* c-typeprint.c (c_print_type): Update for new type codes.
	(c_type_print_varspec_prefix, c_type_print_varspec_suffix)
	(c_type_print_base): Likewise.
	(c_type_print_args): Rewrite.
	* c-valprint.c (c_val_print): Update for new type codes.  Remove
	support for references to members.  Treat methods like functions.
	* cp-abi.c (cplus_print_method_ptr, cplus_method_ptr_size)
	(cplus_make_method_ptr, cplus_method_ptr_to_value): New.
	* cp-abi.h (cplus_print_method_ptr, cplus_method_ptr_size)
	(cplus_make_method_ptr, cplus_method_ptr_to_value): New prototypes.
	(struct cp_abi_ops): Add corresponding members.
	* cp-valprint.c (cp_print_class_method): Delete.
	(cp_find_class_member): New function.
	(cp_print_class_member): Use it.  Simplify support for bogus
	member pointers.
	* dwarf2read.c (quirk_gcc_member_function_pointer): Use
	lookup_methodptr_type.
	(read_tag_ptr_to_member_type): Likewise, and lookup_memberptr_type.
	* eval.c (evaluate_subexp_standard): Implement EVAL_SKIP for
	OP_SCOPE.  Update call to value_aggregate_elt.  Rewrite member
	pointer support.
	(evaluate_subexp_for_address): Handle OP_SCOPE explicitly.  Handle
	references returned by user defined operators.
	* f-typeprint.c (f_print_type, f_type_print_varspec_prefix)
	(f_type_print_varspec_suffix): Remove support for member pointers.
	* gdbtypes.c (lookup_memberptr_type): Renamed from lookup_member_type
	and adjusted.
	(smash_to_memberptr_type): Likewise, from smash_to_member_type.
	(lookup_methodptr_type): New.
	(rank_one_type): Adjust for TYPE_CODE_MEMBERPTR.
	(recursive_dump_type): Update for new types.
	* gdbtypes.h (enum type_code): Replace TYPE_CODE_MEMBER with
	TYPE_CODE_MEMBERPTR and TYPE_CODE_METHODPTR.
	(lookup_memberptr_type, lookup_methodptr_type)
	(smash_to_memberptr_type): New prototypes.
	(smash_to_method_type): Formatting fix.
	(lookup_member_type, smash_to_member_type): Delete prototypes.
	* gnu-v3-abi.c (gnuv3_get_vtable, gnuv3_get_virtual_fn): New.
	Do not rely on debug information for the vptr or the method's
	enclosing type.  Handle function descriptors for IA64.
	(gnuv3_virtual_fn_field): Rewrite using the new functions.
	(gnuv3_find_method_in, gnuv3_print_method_ptr)
	(gnuv3_method_ptr_size, gnuv3_make_method_ptr)
	(gnuv3_method_ptr_to_value): New.
	(init_gnuv3_ops): Set new members of gnu_v3_abi_ops.
	* hpread.c (hpread_type_lookup): Update for new types.
	* infcall.c (value_arg_coerce): Likewise.
	* m2-typeprint.c (m2_print_type): Remove explicit support
	for member pointers.
	* m2-valprint.c (m2_val_print): Likewise.
	* p-typeprint.c (pascal_type_print_varspec_prefix)
	(pascal_type_print_varspec_suffix, pascal_type_print_base): Likewise.
	* p-valprint.c (pascal_val_print): Likewise.
	(pascal_object_print_class_method, pascal_object_print_class_member):
	Delete.
	* p-lang.h (pascal_object_print_class_method)
	(pascal_object_print_class_member): Delete prototypes.
	* stabsread.c (read_type): Update for new types.
	* typeprint.c (print_type_scalar): Likewise.
	* valops.c (value_struct_elt_for_reference, value_namespace_elt)
	(value_maybe_namespace_elt, value_aggregate_elt): Add want_address
	argument.  Construct a pointer to member if the address of a
	function or data member is requested.
	(value_cast_pointers): Don't modify the input value.
	(value_cast): Adjust pointer to member handling for new types.
	Allow null pointer to member constants.  Don't modify the input
	value.
	(value_ind): Remove pointer to member check.  Handle function
	descriptors for function pointers.
	(value_struct_elt, value_find_oload_method_list, check_field):
	Remove pointer to member checks.
	* value.c (unpack_long): Allow pointers to data members.
	(value_from_longest): Allow member pointers.
	* value.h (value_aggregate_elt): Add want_address.
	* varobj.c (c_variable_editable): Remove check for members.
	* gdbarch.sh: Add vtable_function_descriptors and vbit_in_delta.
	* ia64-tdep.c (ia64_convert_from_func_ptr_addr): Handle descriptors
	in virtual tables.
	(ia64_gdbarch_init): Call set_gdbarch_vtable_function_descriptors.
	* c-lang.h (cp_print_class_method): Delete prototype.
	* arm-tdep.c (arm_gdbarch_init): Call set_gdbarch_vbit_in_delta.
	* mips-tdep.c (mips_gdbarch_init): Likewise.
	* gdbarch.c, gdbarch.h: Regenerated.

2007-01-01  Mark Kettenis  <kettenis@gnu.org>

	* rs6000-tdep.c (rs6000_use_struct_convention)
	(rs6000_extract_return_value, rs6000_store_return_value)
	(rs6000_extract_struct_value_address): Remove.
	(rs6000_return_value): New function.
	(rs6000_gdbarch_init): Don't set deprecated_extract_return_value,
	store_return_value, deprecated_extract_struct_value_address and
	deprecated_use_struct_convention.  Use rs6000_return_value
	instead.

2007-01-02  Nick Roberts  <nickrob@snap.net.nz>

	* mi/mi-cmds.c (mi_cmds): Remove entries for -display-delete,
	-display-disable, -display-enable, -display-insert and
	-display-list.

2006-01-01  Joel Brobecker  <brobecker@adacore.com>

	* breakpoint.c (remove_breakpoint): Remove dead code.

2007-01-01  Nick Roberts  <nickrob@snap.net.nz>

	* varobj.c: Include block.h.
	(c_value_of_root): Check scope within nested statements.

2007-01-01  Mark Kettenis  <kettenis@gnu.org>

	* mi/mi-main.c (mi_cmd_data_write_register_values): Use
	regcache_cooked_write_signed instead of
	deprecated_write_register_bytes.

2007-01-01  Joel Brobecker  <brobecker@adacore.com>

	* config/djgpp/fnchange.lst: Add entry for ChangeLog-2006.

2007-01-01  Joel Brobecker  <brobecker@adacore.com>

	Followed the Start of New Year Procedure:
	* ChangeLog-2006: New file, containing all the entries for 2006.
	* ChangeLog: Removed all 2006 entries, and changed the reference
	to the previous ChangeLog to point to ChangeLog 2006.
	* top.c (print_gdb_version): Update copyright year.

2007-01-01  Mark Kettenis  <kettenis@gnu.org>

	* Makefile.in (remote-sds.o): Remove.
	* remote-sds.c: Delete.

For older changes see ChangeLog-2006.

Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
End:
