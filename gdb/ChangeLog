2007-02-02  Denis Pilat  <denis.pilat@st.com>

	* thread.c (make_cleanup_restore_current_thread): New function.
	(info_threads_command): Use of make_cleanup_restore_current_thread
	to restore the current thread and the selected frame.
	(restore_selected_frame): New function.
	(struct current_thread_cleanup): Add frame_id field.
	(do_restore_current_thread_cleanup): Add restoring of the selected
	frame.
	(make_cleanup_restore_current_thread): Likewise.
	(thread_apply_all_command): backup the selected frame while 
	entering the function and restore it at exit.
	(thread_apply_command): Likewise.

2007-02-02  Denis Pilat  <denis.pilat@st.com>

	* MAINTAINERS (Write After Approval): Add myself to the list.

2006-02-01  Kazuhiro Inaoka <inaoka.kazuhiro@renesas.com>

	* gdb/remote-m32r.sdi.c (m32r_fetch_register): Change PWD mask.
        (m32r_store_register): Ditto.

2006-01-30  Vladimir Prus  <vladimir@codesourcery.com>

	* ser-mingw.c (pipe_windows_open)
	(pipe_windows_read, pipe_windows_write): Declare
	variables at the top of the function.

2007-01-29  Daniel Jacobowitz  <dan@codesourcery.com>

	* doublest.c (floatformat_from_length): Use the right element from
	gdbarch floatformats.
	(floatformat_from_type, extract_typed_floating)
	(store_typed_floating): Likewise.
	* doublest.h: Remove declarations for undefined floatformat arrays.
	* gdbarch.sh (float_format, double_format, long_double_format): Change
	to pairs.
	(pformat): Update for pairs.
	* gdbarch.c, gdbarch.h: Regenerated.
	* gdbtypes.c (floatformats_ieee_single, floatformats_ieee_double)
	(floatformats_ieee_double_littlebyte_bigword)
	(floatformats_i387_ext, floatformats_m68881_ext, floatformats_arm_ext)
	(floatformats_ia64_spill, floatformats_ia64_quad, floatformats_vax_f)
	(floatformats_vax_d): New variables.
	(builtin_type_ieee_single, builtin_type_ieee_double)
	(builtin_type_arm_ext, builtin_type_ia64_spill)
	(builtin_type_ia64_quad): Replace arrays with individual types.
	(builtin_type_ieee_single_big, builtin_type_ieee_single_little)
	(builtin_type_ieee_double_big, builtin_type_ieee_double_little)
	(builtin_type_ieee_double_littlebyte_bigword, builtin_type_i960_ext)
	(builtin_type_m88110_ext, builtin_type_m88110_harris_ext)
	(builtin_type_arm_ext_big, builtin_type_arm_ext_littlebyte_bigword)
	(builtin_type_ia64_spill_big, builtin_type_ia64_spill_little)
	(builtin_type_ia64_quad_big, builtin_type_ia64_quad_little): Delete
	unused and endian-specific types.
	(recursive_dump_type): Update for floatformat pairs.
	(build_flt): Move higher.  Handle bit == -1.  Take a floatformat pair.
	(build_gdbtypes): Use build_flt.
	(_initialize_gdbtypes): Update set of initialized types.
	* gdbtypes.h: Update declarations to match gdbtypes.c.
	(struct main_type): Store a pointer to two floatformats.
	* arch-utils.c (default_float_format, default_double_format): Delete.
	* arch-utils.h (default_float_format, default_double_format): Delete.

	* arm-tdep.c, avr-tdep.c, hppa-tdep.c, hppabsd-tdep.c, i386-tdep.c,
	ia64-tdep.c,  iq2000-tdep.c, m68k-tdep.c, m88k-tdep.c,
	mips-linux-tdep.c, mips-tdep.c, mt-tdep.c, ppcobsd-tdep.c,
	sparc-linux-tdep.c, sparc-tdep.c, sparcnbsd-tdep.c, spu-tdep.c,
	vax-tdep.c, alpha-tdep.c, ppc-sysv-tdep.c: Update.

2007-01-29  Joel Brobecker  <brobecker@adacore.com>

	* target.c (maintenance_print_target_stack): New function.
	(initialize_targets): Add new "maintenance print target-stack"
	command.

2007-01-28  Mark Kettenis  <kettenis@gnu.org>

	* dwarf2read.c (new_symbol): Handle DW_AT_decl_file being zero.

2007-01-27  Daniel Jacobowitz  <dan@codesourcery.com>

	* dwarf2loc.h (struct dwarf2_locexpr_baton): Change size to a long.
	(struct dwarf2_loclist_baton): Likewise.

2007-01-27  Eli Zaretskii  <eliz@gnu.org>

	* cli/cli-script.c: Include breakpoint.h.
	(build_command_line): Require arguments only for if and while
	commands.
	(get_command_line, execute_user_command, execute_control_command):
	Fix wording of warning messages.
	(print_command_lines): Print breakpoint commands.
	(execute_control_command): Call commands_from_control_command to
	handle the `commands' command inside a body of a flow-control
	command.
	(read_next_line): Recognize the `commands' command and build a
	command line structure for it.
	(recurse_read_control_structure, read_command_lines): Handle
	`commands' similarly to `if' and `while'.

	* breakpoint.c (get_number_trailer): Document the special meaning
	of NULL as the first argument PP.
	(commands_from_control_command): New function.

	* breakpoint.h (commands_from_control_command): Add prototype.

	* defs.h (commands_control): New enumerated value for enum
	command_control_type.

2007-01-26  Joel Brobecker  <brobecker@adacore.com>

	* ada-lang.c (ada_exception_breakpoint_ops): Fix typo in function name.
	(ada_exception_sal): Update accordingly.

2007-01-26  Jan Kratochvil <jan.kratochvil@redhat.com>

	* c-valprint.c (c_val_print): Require strings to be of no-signed CHARs.
	* NEWS: Describe CHAR array vs. string identifcation rules.

2007-01-25  Paul Brook  <paul@codesourcery.com>

	* arm-tdep.c (arm_get_next_pc): Fix bitfield off-by-one error.

2007-01-24  Jim Blandy  <jimb@codesourcery.com>

	* dwarf2loc.c (dwarf2_evaluate_loc_desc): When the location
	expression is empty, bother to return the 'optimized out' value we
	construct.  (Thanks to Carl Burch.)

2007-01-24  Vladimir Prus  <vladimir@codesourcery.com>

	* varobj.c (c_value_of_root, c_value_of_child)
	(cplus_describe_child): Don't call release_value.

2007-01-24  Thiemo Seufer  <ths@mips.com>

	* mips-linux-tdep.c (mips_linux_n64_rt_sigframe): Fix struct
	initialization.

2007-01-24  Vladimir Prus  <vladimir@codesourcery.com>

	Refactor getting children name, value and type access 
	for varobjs in C++.
	* varobj.c (get_type_deref): Remove.
	(adjust_value_for_child_access): New.
	(c_number_of_children): Use the above.
	(c_describe_child): Likewise.
	(enum accessibility): New.
	(match_accessibility): New function.
	(cplus_describe_child): New function.
	(cplus_name_of_child, cplus_value_of_child)
	(cplus_type_of_child): Reimplement in terms
	of cplus_describe_child.
	(cplus_number_of_children): Use 
	adjust_value_for_child_access.
	
2007-01-24  Vladimir Prus  <vladimir@codesourcery.com>

	Fix computation of the 'editable' attribute and
	value changeability for for references.
	* varobj.c (get_value_type): New function.
	(c_variable_editable): Use get_value_type.
	(varobj_value_is_changeable): Likewise.
		
2007-01-24  Joel Brobecker  <brobecker@adacore.com>

	* source.c (find_and_open_source): Try rewriting the source
	path inside filename if dirname is NULL.

2007-01-24  Joel Brobecker  <brobecker@adacore.com>

	* dwarf2read.c (add_partial_symbol): Create an extra partial
	symbol in the VAR_DOMAIN for Ada structures, unions or enums.
	(new_symbol): Likewise for symbols.

2007-01-24  Nick Roberts  <nickrob@snap.net.nz>

	* mi/mi-main.c (mi_cmd_execute): Call free_all_values.

2007-01-23  Vladimir Prus  <vladimir@codesourcery.com>
	
	* value.c (value_primitive_field): Copy the full 'location' 
	contents, instead of assuming that copying ADDRESS will 
	bring over everything in the union.  Remove obsolete comment.
	
2007-01-23  Masaki Muranaka  <monaka@monami-software.com>

	* m32c-tdep.c (make_regs, m32c_analyze_prologue)
	(m32c_skip_trampoline_code, m32c_m16c_address_to_pointer)
	(m32c_m16c_pointer_to_address): Separate code from declarations.

2007-01-23  Nick Hudson  <nick.hudson@dsl.pipex.com>

	* target.c (update_current_target): Correct typo.

2007-01-22  Masaki Muranaka  <monaka@monami-software.com>

	* xstormy16-tdep.c (xstormy16_skip_prologue): Separate code from a
	declaration.

2007-01-11  Andrew Cagney  <cagney@redhat.com>
	    Daniel Jacobowitz  <dan@codesourcery.com>
	    Jan Kratochvil  <jan.kratochvil@redhat.com>

	* dwarf2-frame.c (execute_cfa_program): New support of
	`DW_CFA_GNU_negative_offset_extended'.

2007-01-21  Daniel Jacobowitz  <dan@codesourcery.com>

	* NEWS: Mention flash support for "load" and new remote packets.

2007-01-21  Markus Deuling  <deuling@de.ibm.com>

	* breakpoint.c (delete_command): Skip redundant loop iterations.

2007-01-21  Daniel Jacobowitz  <dan@codesourcery.com>

	* gdbarch.sh (register_type): Update comment.
	* gdbarch.h: Regenerated.
	* arch-utils.c (generic_register_size): Call register_type.
	* ia64-tdep.c (ia64_extract_return_value): Likewise.
	* m32c-tdep.c (check_for_saved): Likewise.
	* mips-tdep.c (mips_print_register, print_gp_register_row)
	(mips_print_registers_info): Likewise.
	* sh-tdep.c (sh_pseudo_register_read, sh_pseudo_register_write):
	Likewise.
	* sh64-tdep.c (sh64_pseudo_register_read, sh64_pseudo_register_write)
	(sh64_do_register, sh64_print_register)
	(sh64_media_print_registers_info): Likewise.
	* tui/tui-regs.c (tui_register_format): Likewise.

2007-01-21  Daniel Jacobowitz  <dan@codesourcery.com>

	* objfiles.h (ALL_PRIMARY_SYMTABS): Define.

	* ada-lang.c (symtab_for_sym, ada_lookup_symbol_list)
	(ada_lookup_symbol): Use ALL_PRIMARY_SYMTABS.
	* cp-support.c (make_symbol_overload_list_qualified): Likewise.
	* symtab.c (lookup_symbol_aux_block, lookup_symbol_aux_symtabs)
	(basic_lookup_transparent_type, find_pc_sect_symtab, search_symbols)
	(make_symbol_completion_list): Likewise.

2007-01-21  Jan Kratochvil  <jan.kratochvil@redhat.com>
	    Daniel Jacobowitz  <dan@codesourcery.com>

	* buildsym.c (end_symtab): Use preallocated symtab if available.
	Fill in SYMBOL_SYMTAB.
	* buildsym.h (struct subfile): Add symtab member.
	* dwarf2read.c (struct dwarf2_cu): Add line_header.
	(struct file_entry): Add symtab.
	(free_cu_line_header): New function.
	(read_file_scope): Use it.  Save line_header in the cu.  Process
	lines before DIEs.
	(add_file_name): Initialize new symtab member.
	(dwarf_decode_lines): Create symtabs for included files.
	(new_symbol): Set SYMBOL_SYMTAB.
	* symtab.c (lookup_symbol): Use SYMBOL_SYMTAB.
	(search_symbols): Likewise.
	* symtab.h (struct symbol): Add symtab member.
	(SYMBOL_SYMTAB): Define.

2007-01-20  Daniel Jacobowitz  <dan@codesourcery.com>

	* symfile.c (allocate_symtab): Remove INIT_EXTRA_SYMTAB_INFO.

2007-01-20  Daniel Jacobowitz  <dan@codesourcery.com>

	* arch-utils.c (show_endian): Correct reversed condition.

2007-01-19  Jan Kratochvil  <jan.kratochvil@redhat.com>

	* MAINTAINERS (Write After Approval): Add myself.

2007-01-16  Daniel Jacobowitz  <dan@codesourcery.com>
	    Vladimir Prus  <vladimir@codesourcery.com>

	Fix 'selected frame' varobjs.
	* varobj.c (struct varobj): Remove the error field.
	(varobj_set_value): Don't check var->error.
	(install_new_value): Don't set var->error.
	(varobj_update): Always pass the new value
	of the root via install_new_value.
	(create_child): Don't set error field.
	(new_variable): Likewise.
	(c_value_of_root): Always reevaluate the value
	of selected frame varobjs in the selected frame.
	Don't call reinit_frame_cache.

2007-01-15  Joel Brobecker  <brobecker@adacore.com>

	* source.c (_initialize_source): Improve the help text of
	the substitute-path commands.

2007-01-14  Mark Kettenis  <kettenis@gnu.org>

	* frv-tdep.c (frv_gdbarch_init, frv_register_name)
	(frv_breakpoint_from_pc, frv_gdbarch_adjust_breakpoint_address)
	(frv_skip_prologue): Remove prototypes.
	(frv_adjust_breakpoint_address): Renamed from
	frv_gdbarch_adjust_breakpoint_address.
	(frv_gdbarch_init): Adjust.

2007-01-13  Mark Kettenis  <kettenis@gnu.org>

	* gdbarch.sh (deprecated_extract_return_value)
	(deprecated_store_return_value): Remove.
	(extract_return_value, store_return_value): Remove default values.
	* gdbarch.c, gdbarch.h: Regenerate.
	* arch-utils.c, arch-utils.h (legacy_extract_return_value)
	(legacy_store_return_value): Remove.
	* regcache.c, regcache.h (deprecated_grub_regcache_for_registers):
	Remove.

	* mi/mi-main.c: Remove obsolete comment.

	* regcache.c, regcache.h (deprecated_register_bytes)
	(deprecated_read_register_bytes)
	(deprecated_write_register_bytes): Remove.

	* frame.c (get_frame_register_bytes, put_frame_register_bytes):
	Don't forget to move destination pointer.

2007-01-01  Mark Kettenis  <kettenis@gnu.org>

	* config/i386/nm-i386gnu.h (CHILD_PREPARE_TO_STORE): Remove.

2007-01-11  Ulrich Weigand  <uweigand@de.ibm.com>

	* spu-tdep.c (spu_analyze_prologue): Fix erroneous backtrace
	past entry function with recent newlib.

2007-01-11  Vladimir Prus  <vladimir@codesourcery.com>

	* gdb.texinfo (GDB/MI Variable Objects): Improve the 
	introduction.  Specify -var-update more exactly.

2007-01-11  Daniel Jacobowitz  <dan@codesourcery.com>

	* frame.c (get_prev_frame_1): Check PC_REGNUM before using it.

2007-01-10  Jim Blandy  <jimb@codesourcery.com>

	* MAINTAINERS (Global Maintainers): Ulrich Weigand has accepted
	the Global Maintainers' invitation to be a global maintainer.

2007-01-10  Daniel Jacobowitz  <dan@codesourcery.com>

	* infrun.c (singlestep_pc): New variable.
	(resume): Set singlestep_pc.
	(context_switch): Add a debugging message.  Flush the frame cache.
	(handle_inferior_event): Add debugging messages.  Handle thread
	hops when a software single step has completed.  Let context_switch
	handle flushing the frame cache.

2007-01-09  Daniel Jacobowitz  <dan@codesourcery.com>

	* NEWS: Mention target descriptions, "set tdesc filename",
	"unset tdesc filename", "show tdesc filename", and
	qXfer:features:read.
	* arch-utils.c (choose_architecture_for_target): New function.
	(gdbarch_info_fill): Call it.
	* target-descriptions.c (struct property): Make members non-const.
	(struct target_desc): Add arch member.
	(target_description_filename): New variable.
	(target_find_description): Try via XML first.
	(tdesc_architecture): New.
	(free_target_description, make_cleanup_free_target_description): New.
	(set_tdesc_property): Call xstrdup.
	(set_tdesc_architecture, tdesc_set_cmdlist, tdesc_show_cmdlist)
	(tdesc_unset_cmdlist, unset_tdesc_cmd, unset_tdesc_filename_cmd)
	(set_tdesc_cmd, show_tdesc_cmd, set_tdesc_filename_cmd)
	(show_tdesc_filename_cmd, _initialize_target_descriptions): New.
	* target-descriptions.h (tdesc_architecture)
	(make_cleanup_free_target_description, set_tdesc_architecture): New
	prototypes.
	* Makefile.in (SFILES): Add xml-tdesc.c.
	(COMMON_OBS): Add xml-tdesc.o.
	(target-descriptions.o): Update.
	(xml-tdesc.o): New rule.
	* xml-tdesc.c, xml-tdesc.h: New files.
	* remote.c (PACKET_qXfer_features): New enum.
	(remote_protocol_features): Add qXfer:features:read.
	(remote_xfer_partial): Handle TARGET_OBJECT_AVAILABLE_FEATURES.
	(_initialize_remote): Register qXfer:features:read.
	* target.h (enum target_object): Add TARGET_OBJECT_AVAILABLE_FEATURES.
	* features/gdb-target.dtd: New file.

2007-01-09  Daniel Jacobowitz  <dan@codesourcery.com>

	* copyright.sh: Clarify error.

2007-01-09  Jan Kratochvil  <jan.kratochvil@redhat.com>

	* symtab.c (matching_bfd_sections): Fix VMA matching for
	prelinked objects.

2007-01-09  Jan Kratochvil  <jan.kratochvil@redhat.com>

	* minsyms.c (lookup_minimal_symbol_by_pc_section): Handle
	nested symbols.

2007-01-09  Daniel Jacobowitz  <dan@codesourcery.com>

	Updated copyright notices for most files.

2007-01-09  Daniel Jacobowitz  <dan@codesourcery.com>

	* copyright.sh (prunes): Add step-line.inp and step-line.c.

2007-01-09  Daniel Jacobowitz  <dan@codesourcery.com>

	* configure.ac (DEBUGDIR_RELOCATABLE): Define for debugdir inside
	exec_prefix.
	(TARGET_SYSTEM_ROOT_RELOCATABLE): Allow for exec_prefix being
	'${prefix}'.
	* configure, config.in: Regenerate.
	* defs.h (debug_file_directory): Declare.
	* main.c (captured_main): Canonicalize gdb_sysroot.  Assume
	TARGET_SYSTEM_ROOT is defined.  Initialize debug_file_directory and
	relocate it if DEBUGDIR_RELOCATABLE.
	* symfile.c (debug_file_directory): Make non-static.
	(find_separate_debug_file): Look for debug info for SYSROOT/PATH
	in DEBUGDIR/PATH if DEBUGDIR is inside SYSROOT.
	(_initialize_symfile): Don't initialize debug_file_directory here.

2007-01-09  Jim Blandy  <jimb@codesourcery.com>

	* score-tdep.c (score_push_dummy_call): Don't mix declarations and
	statements.

2007-01-09  Daniel Jacobowitz  <dan@codesourcery.com>

	* alpha-mdebug-tdep.c (alpha_mdebug_frame_prev_register): Use
	frame_unwind_register to recurse.
	* alpha-tdep.c (alpha_sigtramp_frame_prev_register): Likewise.
	(alpha_heuristic_frame_prev_register): Likewise.
	* h8300-tdep.c (h8300_frame_prev_register): Likewise.
	* m32c-tdep.c (m32c_prev_register): Likewise.
	* frame.c (frame_register_unwind_location): Remove FIXME.

2007-01-09  Daniel Jacobowitz  <dan@codesourcery.com>
	    Eli Zaretskii  <eliz@gnu.org>

	* copyright.sh: New file.

2007-01-09  Daniel Jacobowitz  <dan@codesourcery.com>

	* configure.ac: Check for XML_StopParser.
	* xml-support.c (gdb_xml_body_text): Check for an error.
	(gdb_xml_start_element_wrapper): Conditionalize call to XML_StopParser.
	(gdb_xml_end_element_wrapper): Likewise.
	* config.in, configure: Regenerated.

2007-01-08  Daniel Jacobowitz  <dan@codesourcery.com>

	* varobj.c (install_new_value): Always update print_value.
	(value_get_print_value): Immediately return NULL for missing
	values.

2007-01-08  Jim Blandy  <jimb@codesourcery.com>

	* configure.ac: Tighten pattern for extracting value of
	DEPRECATED_TM_FILE from the target makefile fragment.
	* configure: Regenerated.

2007-01-08  Daniel Jacobowitz  <dan@codesourcery.com>

	* linux-nat.c (struct simple_pid_list): Add status.
	(add_to_pid_list): Record the PID's status.
	(linux_record_stopped_pid): Likewise.  Make static.
	(pull_pid_from_list): Return the saved status.
	(linux_nat_handle_extended): Deleted.
	(linux_handle_extended_wait): Combine with linux_nat_handle_extended.
	Make static.  Handle non-SIGSTOP for a new thread's first signal.
	(flush_callback): Handle unexpected pending signals.
	(linux_nat_wait): Update calls to changed functions.
	* linux-nat.h (linux_record_stopped_pid, linux_handle_extended_wait):
	Remove prototypes for newly static functions.

2007-01-08  Ulrich Weigand  <uweigand@de.ibm.com>

	* gdbarch.sh (value_from_register): New gdbarch function.
	* gdbarch.c, gdbarch.h: Regenerate.
	* findvar.c (default_value_from_register): New function.
	(value_from_register): Use gdbarch_value_from_register.
	* value.h (default_value_from_register): Declare.
	* spu-tdep.c (spu_convert_register_p, spu_register_to_value,
	spu_value_to_register): Remove.
	(spu_value_from_register): New function.
	(spu_gdbarch_init): Do not call set_gdbarch_convert_register_p,
	set_gdbarch_register_to_value, set_gdbarch_value_to_register.
	Call set_gdbarch_value_from_register.
	* s390-tdep.c (s390_convert_register_p, s390_register_to_value,
	s390_value_to_register): Remove.
	(s390_value_from_register): New function.
	(s390_gdbarch_init): Do not call set_gdbarch_convert_register_p,
	set_gdbarch_register_to_value, set_gdbarch_value_to_register.
	Call set_gdbarch_value_from_register.

2007-01-08  Daniel Jacobowitz  <dan@codesourcery.com>

	* NEWS: Add "set sysroot" and "show sysroot".
	* solib.c (solib_absolute_prefix): Delete.  Replace
	all uses with gdb_sysroot.
	(_initialize_solib): Add "set sysroot" and "show sysroot".
	Make "solib-absolute-prefix" an alias to it.

2007-01-08  Ulrich Weigand  <uweigand@de.ibm.com>

	* frame.c (get_frame_register_bytes): New function.
	(put_frame_register_bytes): Likewise.
	* frame.h (get_frame_register_bytes): Declare.
	(put_frame_register_bytes): Likewise.
	* findvar.c (value_from_register): Always construct lval_register
	values.  Use get_frame_register_bytes.
	* valops.c (value_assign): Use get_frame_register_bytes and
	put_frame_register_bytes.

2007-01-08  Jim Blandy  <jimb@codesourcery.com>

	* MAINTAINERS: Update Stan Shebs' email address.

2007-01-07  Joel Brobecker  <brobecker@adacore.com>

	* ada-lang.c (is_known_support_routine): Improve the implementation.

2007-01-06  Joel Brobecker  <brobecker@adacore.com>

	* ada-lang.c: Add include of source.h.
	(is_known_support_routine): Improve the check verifying that the file
	associated to this frame exists.
	* Makefile.in (ada-lang.o): Add dependency on source.h.

2007-01-07  Jim Blandy  <jimb@codesourcery.com>

	* ax-general.c (ax_const_l): Select proper opcode for the given
	value.

2007-01-04  Vladimir Prus  <vladimir@codesourcery.com>

	* varobj.c (c_value_of_root): Don't select frame if variable
	object is out of scope.

2007-01-06  Nick Roberts  <nickrob@snap.net.nz>

	* varobj.c (struct varobj): New member print_value.
	(install_new_value): Compare last printed value with current one
	instead of contents.
	(new_variable): Initialize var->print_value to NULL.
	(free_variable): Free var->print_value.
	(value_get_print_value): New function derived from
	c_value_of_variable.
	(c_value_of_variable): Use value_get_print_value.

2007-01-05  Joel Brobecker  <brobecker@adacore.com>

	* i386-tdep.c (i386_analyze_stack_align): Add comment.

2007-01-05  Joel Brobecker  <brobecker@adacore.com>

	* NEWS: Add entries for new catch commands.

2006-02-05  Joel Brobecker  <brobecker@adacore.com>

        * dwarf2read.c (partial_die_info): Add field has_byte_size.
        (add_partial_symbol): Correct identification of external references.
        (process_structure_scope): Likewise.
        (read_partial_die): Handle DW_AT_byte_size attribute.

2007-01-05  Daniel Jacobowitz  <dan@codesourcery.com>

	* xml-support.c (gdb_xml_end_element): Remove wrong backslashes.

2007-01-05  Nick Roberts  <nickrob@snap.net.nz>

	* varobj.c (get_type_deref): Fix variable objects for references to
	pointers.

2007-01-04  Daniel Jacobowitz  <dan@codesourcery.com>

	* symtab.c (find_pc_sect_psymtab): Add comments.  Handle psymtabs
	with no symbols.

2007-01-04  Daniel Jacobowitz  <dan@codesourcery.com>

	* memory-map.c (struct_memory_map_parsing_data): Remove most
	members.  Make property_name an array.
	(free_memory_map_parsing_data, memory_map_start_element)
	(memory_map_end_element, memory_map_character_data): Delete.
	(memory_map_start_memory, memory_map_end_memory)
	(memory_map_start_property, memory_map_end_property): New functions.
	(property_attributes, memory_children, memory_type_enum)
	(memory_attributes, memory_map_children, memory_map_elements): New.
	(parse_memory_map): Rewrite.
	* xml-support.c (debug_xml): New.
	(xml_get_required_attribute, xml_get_integer_attribute)
	(xml_get_enum_value, free_xml_parser, make_cleanup_free_xml_parser):
	Delete.
	(struct scope_level, struct gdb_xml_parser, gdb_xml_body_text)
	(gdb_xml_debug, gdb_xml_error, gdb_xml_values_cleanup)
	(gdb_xml_start_element, gdb_xml_start_element_wrapper)
	(gdb_xml_end_element, gdb_xml_end_element_wrapper, gdb_xml_cleanup)
	(gdb_xml_create_parser_and_cleanup, gdb_xml_parse)
	(gdb_xml_parse_ulongest, gdb_xml_parse_attr_ulongest)
	(gdb_xml_parse_attr_enum, show_debug_xml, _initialize_xml_support):
	New.
	* xml-support.h (struct gdb_xml_value, gdb_xml_attribute_handler)
	(enum gdb_xml_attribute_flag, struct gdb_xml_attribute)
	(enum gdb_xml_element_flag, struct gdb_xml_element)
	(gdb_xml_element_start_handler, gdb_xml_element_end_handler)
	(struct gdb_xml_enum): New.
	(gdb_xml_create_parser_and_cleanup, gdb_xml_parse, gdb_xml_debug)
	(gdb_xml_error, gdb_xml_parse_attr_ulongest)
	(gdb_xml_parse_attr_enum, gdb_xml_parse_ulongest): New prototypes.
	(xml_get_required_attribute, xml_get_integer_attribute)
	(xml_get_enum_value, make_cleanup_free_xml_parser): Delete prototypes.
	* Makefile.in (xml_support_h, xml-support.o): Update.

2007-01-04  Daniel Jacobowitz  <dan@codesourcery.com>

	* Makefile.in (eval.o): Update dependencies.
	* eval.c: Include "ui-out.h" and "exceptions.h".
	(evaluate_subexp_standard): Use TRY_CATCH around value_of_variable.
	Use value_zero if an error occurs when avoiding side effects.
	* varobj.c (c_value_of_root): Initialize new_val.

2007-01-04  Daniel Jacobowitz  <dan@codesourcery.com>

	* varobj.c (varobj_list_children): Stop if the number of children is
	unknown.
	(c_number_of_children):

2007-01-04  Mark Kettenis  <kettenis@gnu.org>

	* alpha-tdep.c (alpha_register_name): Use ARRAY_SIZE.
	(alpha_read_insn, alpha_skip_prologue, alpha_heuristic_proc_start)
	(alpha_heuristic_frame_unwind_cache, alpha_next_pc)
	(alpha_gdbarch_init): Use ALPHA_INSN_SIZE, ALPHA_REGISTER_SIZE and
	sizeof, instead of hardcoded constants.

2007-01-04  Daniel Jacobowitz  <dan@codesourcery.com>

	* CONTRIBUTE: Use sourceware.org.

2007-01-04  Daniel Jacobowitz  <dan@codesourcery.com>

	* buildsym.c (start_subfile): Handle producer.
	(record_producer): New function.
	* buildsym.h (struct subfile): Include producer.
	(record_producer): New prototype.
	* dwarf2-frame.c (struct dwarf2_cie): Add version and augmentation.
	(struct dwarf2_frame_state): Add armcc_cfa_offsets_sf and
	armcc_cfa_offsets_reversed.
	(execute_cfa_program): Handle armcc_cfa_offsets_sf.
	(dwarf2_frame_find_quirks): New function.
	(dwarf2_frame_cache): Call it.  Handle armcc_cfa_offsets_reversed.
	(decode_frame_entry_1): Record the CIE version.  Record the
	augmentation.  Skip armcc augmentations.
	* dwarf2read.c (read_file_scope): Save the producer.
	* symtab.h (struct symtab): Rename unused version member to
	producer.

2007-01-04  Daniel Jacobowitz  <dan@codesourcery.com>

	* configure.ac (build_warnings): Use -Wall and
	-Wdeclaration-after-statement.
	* configure: Regenerated.

2007-01-04  Vladimir Prus  <vladimir@codesourcery.com>

	Simplify access to variours properties of child
	variable objects in C.
	* varobj.c (value_struct_element_index): New function.
	(c_describe_child): New function.
	(c_name_of_child, c_value_of_child)
	(c_type_of_child): Rewrite to use c_describe_child.

2007-01-04  Vladimir Prus  <vladimir@codesourcery.com>

	gdb/
	* varobj.c: Include "vec.h". 
	(varobj_p): New typedef, declare vector of those.
	(struct varobj): Use vector for the 'children' member.
	(child_exists): Remove.
	(save_child_in_parent): Remove.
	(remove_child_from_parent): Remove.
	(struct varobj_child): Remove.
	(struct vstack): Remove.
	(vpush, vpop): Remove.
	(varobj_list_children): Adjust to work work vector.
	(varobj_update): Likewise. Use vectors for
	working stack and result.
	(delete_variable_1): Likewise.
	* Makefile.in (varobj.o): Update dependencies.

2007-01-04  Vladimir Prus  <vladimir@codesourcery.com>

	Port from Apple's version.
	gdb/
	* varobj.c (type_changeable): Rename to...
	(varobj_value_is_changeable_p): ...this. Adjust all callers.
	(is_root_p): New function. Use it everywhere.

2007-01-04  Jim Blandy  <jimb@codesourcery.com>

	* glibc-tdep.c (glibc_skip_solib_resolver): Look for '_dl_fixup',
	then plain 'fixup'.

2007-01-04  Joel Brobecker  <brobecker@adacore.com>

	* hpread.c (hpread_start_psymtab): Remove unnecessary extern.

2007-01-04  Joel Brobecker  <brobecker@adacore.com>

	* hpread.c (hpread_type_lookup): Fix compilation failure.

2007-01-04  Qinwei  <qinwei@sunnorth.com.cn>

	* NEWS: New port to S+core.
	* MAINTAINERS (Write After Approval, Responsible Maintainers):
	Add myself.

	* Makefile.in: Add dependencies for S+core files.
	* configure.tgt (score*, score-*-*): Add S+core target.
	* config/score/embed.mt: New file.
	* score-tdep.c: New file.
	* score-tdep.h: New file.

2007-01-04  Joel Brobecker  <brobecker@adacore.com>

	* ada-lang.c (ada_evaluate_subexp) [OP_TYPE]: Return a value with
	the appropriate type rather than a bogus void type.

2007-01-04  Joel Brobecker  <brobecker@adacore.com>

	* ada-lang.h (ada_find_printable_frame): Remove.
	(ada_exception_catchpoint_p, ada_decode_exception_location)
	(ada_decode_assert_location): Add declaration.
	* ada-lang.c: Add include of annotate.h and valprint.h.
	(exception_catchpoint_kind): New enum.
	(function_name_from_pc, is_known_support_routine)
	(ada_find_printable_frame, ada_unhandled_exception_name_addr)
	(ada_exception_name_addr_1, ada_exception_name_addr)
	(print_it_exception, print_one_exception, print_mention_exception)
	(print_it_catch_exception, print_one_catch_exception)
	(print_mention_catch_exception, catch_exception_breakpoint_ops)
	(print_it_catch_exception_unhandled)
	(print_one_catch_exception_unhandled)
	(print_mention_catch_exception_unhandled, print_it_catch_assert)
	(print_one_catch_assert, print_mention_catch_assert)
	(ada_exception_catchpoint_p, error_breakpoint_runtime_sym_not_found)
	(ada_get_next_arg, catch_ada_exception_command_split)
	(ada_exception_sym_name, ada_exception_sym_name)
	(ada_exception_breakption_ops, ada_exception_catchpoint_cond_string)
	(ada_parse_catchpoint_condition, ada_exception_sal)
	(ada_decode_exception_location)
	(ada_decode_assert_location): New function.
	(catch_exception_unhandled_breakpoint_ops): New global variable.
	(catch_assert_breakpoint_ops): New global variable.
	* breakpoint.c: Add include of ada-lang.h.
	(print_one_breakpoint): Do not print the condition for Ada
	exception catchpoints.
	(create_ada_exception_breakpoint): New function.
	(catch_ada_exception_command, catch_assert_command): New function.
	(catch_command_1): Add support for the new "catch exception" and
	"catch assert" commands.
	(_initialize_breakpoint): Add help description for the new catch
	commands.
	* Makefile.in (ada-lang.o): Add dependency on annotate.h and
	valprint.h.
	(breakpoint.o): Add dependency on ada-lang.h.

2007-01-03  Pedro Alves  <pedro_alves@portugalmail.pt>

	* coffread.c (cs_to_section): If bfd_section is found, always
	return its section index.
	(coff_symtab_read): Determine the minimal_symbol_type using the
	bfd_section flags.

2007-01-03  Jan Kratochvil  <jan.kratochvil@redhat.com>
	    Daniel Jacobowitz  <dan@codesourcery.com>

	* Makefile.in (top.o): Update.
	* top.c (gdb_readline_wrapper_done, gdb_readline_wrapper_result)
	(saved_after_char_processing_hook, gdb_readline_wrapper_line)
	(struct gdb_readline_wrapper_cleanup, gdb_readline_wrapper_cleanup):
	New.
	(gdb_readline_wrapper): Rewrite to use asynchronous readline.

2007-01-03  Mark Kettenis  <kettenis@gnu.org>

	* arm-linux-tdep.c (arm_linux_extract_return_value): Remove.
	(arm_linux_init_abi): Don't set deprecated_extract_return_value.

2007-01-03  Daniel Jacobowitz  <dan@codesourcery.com>

	* ada-lang.c (find_struct_field): Initialize *byte_offset_p.
	* breakpoint.c (do_enable_breakpoint): Ignore both mem_cnt and i.
	* c-typeprint.c (c_type_print_varspec_suffix): Don't test length
	greater than or equal to zero.
	* m2-typeprint.c (m2_array): Likewise.
	* p-typeprint.c (pascal_type_print_varspec_prefix): Likewise.
	* gdbtypes.c (copy_type_recursive): Correct == typo.
	* i386-tdep.c (i386_skip_prologue): Remove stray semicolon.
	* linux-nat.c (linux_nat_info_proc_cmd): Don't compare a pointer
	greater than zero.
	* macroscope.c (sal_macro_scope): Don't name a local variable "main".
	(default_macro_scope): Remove unused variable.
	* prologue-value.h (pv_area_find_reg): Don't name an argument
	"register".
	* remote-fileio.c (remote_fio_func_map): Add missing braces.
	* remote.c (sigint_remote_twice_token, sigint_remote_token): Change
	type.
	(cleanup_sigint_signal_handler): Remove casts.
	* valprint.c (val_print): Use a volatile local for the modified
	argument.
	* varobj.c (languages): Remove extra array dimension.
	(varobj_create): Correct access to languages array.
	* mi/mi-cmd-break.c (mi_cmd_break_insert, mi_cmd_break_watch): Add
	missing braces.
	* mi/mi-cmd-disas.c (mi_cmd_disassemble): Likewise.
	* mi/mi-cmd-env.c (mi_cmd_env_path, mi_cmd_env_dir): Likewise.
	* mi/mi-getopt.c (mi_valid_noargs): Likewise.
	* mi/mi-main.c (mi_cmd_data_read_memory): Likewise.
	(mi_cmd_data_write_memory): Likewise.
	* signals/signals.c (target_signal_to_string): Cast to int before
	comparing.
	* tui/tui-layout.c (init_and_make_win): Take and return a void *.
	Update all callers.

2007-01-03  Daniel Jacobowitz  <dan@codesourcery.com>

	* NEWS: Mention pointer to member improvements.
	* Makefile.in (gnu-v3-abi.o): Delete special rule.
	(eval.o, gnu-v3-abi.o, ia64-tdep.o): Update.
	* ada-valprint.c (ada_print_scalar): Update for new type codes.
	* c-typeprint.c (c_print_type): Update for new type codes.
	(c_type_print_varspec_prefix, c_type_print_varspec_suffix)
	(c_type_print_base): Likewise.
	(c_type_print_args): Rewrite.
	* c-valprint.c (c_val_print): Update for new type codes.  Remove
	support for references to members.  Treat methods like functions.
	* cp-abi.c (cplus_print_method_ptr, cplus_method_ptr_size)
	(cplus_make_method_ptr, cplus_method_ptr_to_value): New.
	* cp-abi.h (cplus_print_method_ptr, cplus_method_ptr_size)
	(cplus_make_method_ptr, cplus_method_ptr_to_value): New prototypes.
	(struct cp_abi_ops): Add corresponding members.
	* cp-valprint.c (cp_print_class_method): Delete.
	(cp_find_class_member): New function.
	(cp_print_class_member): Use it.  Simplify support for bogus
	member pointers.
	* dwarf2read.c (quirk_gcc_member_function_pointer): Use
	lookup_methodptr_type.
	(read_tag_ptr_to_member_type): Likewise, and lookup_memberptr_type.
	* eval.c (evaluate_subexp_standard): Implement EVAL_SKIP for
	OP_SCOPE.  Update call to value_aggregate_elt.  Rewrite member
	pointer support.
	(evaluate_subexp_for_address): Handle OP_SCOPE explicitly.  Handle
	references returned by user defined operators.
	* f-typeprint.c (f_print_type, f_type_print_varspec_prefix)
	(f_type_print_varspec_suffix): Remove support for member pointers.
	* gdbtypes.c (lookup_memberptr_type): Renamed from lookup_member_type
	and adjusted.
	(smash_to_memberptr_type): Likewise, from smash_to_member_type.
	(lookup_methodptr_type): New.
	(rank_one_type): Adjust for TYPE_CODE_MEMBERPTR.
	(recursive_dump_type): Update for new types.
	* gdbtypes.h (enum type_code): Replace TYPE_CODE_MEMBER with
	TYPE_CODE_MEMBERPTR and TYPE_CODE_METHODPTR.
	(lookup_memberptr_type, lookup_methodptr_type)
	(smash_to_memberptr_type): New prototypes.
	(smash_to_method_type): Formatting fix.
	(lookup_member_type, smash_to_member_type): Delete prototypes.
	* gnu-v3-abi.c (gnuv3_get_vtable, gnuv3_get_virtual_fn): New.
	Do not rely on debug information for the vptr or the method's
	enclosing type.  Handle function descriptors for IA64.
	(gnuv3_virtual_fn_field): Rewrite using the new functions.
	(gnuv3_find_method_in, gnuv3_print_method_ptr)
	(gnuv3_method_ptr_size, gnuv3_make_method_ptr)
	(gnuv3_method_ptr_to_value): New.
	(init_gnuv3_ops): Set new members of gnu_v3_abi_ops.
	* hpread.c (hpread_type_lookup): Update for new types.
	* infcall.c (value_arg_coerce): Likewise.
	* m2-typeprint.c (m2_print_type): Remove explicit support
	for member pointers.
	* m2-valprint.c (m2_val_print): Likewise.
	* p-typeprint.c (pascal_type_print_varspec_prefix)
	(pascal_type_print_varspec_suffix, pascal_type_print_base): Likewise.
	* p-valprint.c (pascal_val_print): Likewise.
	(pascal_object_print_class_method, pascal_object_print_class_member):
	Delete.
	* p-lang.h (pascal_object_print_class_method)
	(pascal_object_print_class_member): Delete prototypes.
	* stabsread.c (read_type): Update for new types.
	* typeprint.c (print_type_scalar): Likewise.
	* valops.c (value_struct_elt_for_reference, value_namespace_elt)
	(value_maybe_namespace_elt, value_aggregate_elt): Add want_address
	argument.  Construct a pointer to member if the address of a
	function or data member is requested.
	(value_cast_pointers): Don't modify the input value.
	(value_cast): Adjust pointer to member handling for new types.
	Allow null pointer to member constants.  Don't modify the input
	value.
	(value_ind): Remove pointer to member check.  Handle function
	descriptors for function pointers.
	(value_struct_elt, value_find_oload_method_list, check_field):
	Remove pointer to member checks.
	* value.c (unpack_long): Allow pointers to data members.
	(value_from_longest): Allow member pointers.
	* value.h (value_aggregate_elt): Add want_address.
	* varobj.c (c_variable_editable): Remove check for members.
	* gdbarch.sh: Add vtable_function_descriptors and vbit_in_delta.
	* ia64-tdep.c (ia64_convert_from_func_ptr_addr): Handle descriptors
	in virtual tables.
	(ia64_gdbarch_init): Call set_gdbarch_vtable_function_descriptors.
	* c-lang.h (cp_print_class_method): Delete prototype.
	* arm-tdep.c (arm_gdbarch_init): Call set_gdbarch_vbit_in_delta.
	* mips-tdep.c (mips_gdbarch_init): Likewise.
	* gdbarch.c, gdbarch.h: Regenerated.

2007-01-01  Mark Kettenis  <kettenis@gnu.org>

	* rs6000-tdep.c (rs6000_use_struct_convention)
	(rs6000_extract_return_value, rs6000_store_return_value)
	(rs6000_extract_struct_value_address): Remove.
	(rs6000_return_value): New function.
	(rs6000_gdbarch_init): Don't set deprecated_extract_return_value,
	store_return_value, deprecated_extract_struct_value_address and
	deprecated_use_struct_convention.  Use rs6000_return_value
	instead.

2007-01-02  Nick Roberts  <nickrob@snap.net.nz>

	* mi/mi-cmds.c (mi_cmds): Remove entries for -display-delete,
	-display-disable, -display-enable, -display-insert and
	-display-list.

2006-01-01  Joel Brobecker  <brobecker@adacore.com>

	* breakpoint.c (remove_breakpoint): Remove dead code.

2007-01-01  Nick Roberts  <nickrob@snap.net.nz>

	* varobj.c: Include block.h.
	(c_value_of_root): Check scope within nested statements.

2007-01-01  Mark Kettenis  <kettenis@gnu.org>

	* mi/mi-main.c (mi_cmd_data_write_register_values): Use
	regcache_cooked_write_signed instead of
	deprecated_write_register_bytes.

2007-01-01  Joel Brobecker  <brobecker@adacore.com>

	* config/djgpp/fnchange.lst: Add entry for ChangeLog-2006.

2007-01-01  Joel Brobecker  <brobecker@adacore.com>

	Followed the Start of New Year Procedure:
	* ChangeLog-2006: New file, containing all the entries for 2006.
	* ChangeLog: Removed all 2006 entries, and changed the reference
	to the previous ChangeLog to point to ChangeLog 2006.
	* top.c (print_gdb_version): Update copyright year.

2007-01-01  Mark Kettenis  <kettenis@gnu.org>

	* Makefile.in (remote-sds.o): Remove.
	* remote-sds.c: Delete.

For older changes see ChangeLog-2006.

Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
End:
