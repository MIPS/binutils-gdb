.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
''' Revision 1.1  2001/03/25 20:32:25  nickc
''' Automate generate on man pages
'''
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH WINDRES.1 1 "binutils-2.11.90" "23/Mar/101" "GNU"
.UC
.if n .hy 0
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
windres \- manipulate Windows resources.
.SH "SYNOPSIS"
windres [options] [input-file] [output-file]
.SH "DESCRIPTION"
\f(CWwindres\fR reads resources from an input file and copies them into
an output file.  Either file may be in one of three formats:
.Ip "\f(CWrc\fR" 4
A text format read by the Resource Compiler.
.Ip "\f(CWres\fR" 4
A binary format generated by the Resource Compiler.
.Ip "\f(CWcoff\fR" 4
A \s-1COFF\s0 object or executable.
.PP
The exact description of these different formats is available in
documentation from Microsoft.
.PP
When \f(CWwindres\fR converts from the \f(CWrc\fR format to the \f(CWres\fR
format, it is acting like the Windows Resource Compiler.  When
\f(CWwindres\fR converts from the \f(CWres\fR format to the \f(CWcoff\fR
format, it is acting like the Windows \f(CWCVTRES\fR program.
.PP
When \f(CWwindres\fR generates an \f(CWrc\fR file, the output is similar
but not identical to the format expected for the input.  When an input
\f(CWrc\fR file refers to an external filename, an output \f(CWrc\fR file
will instead include the file contents.
.PP
If the input or output format is not specified, \f(CWwindres\fR will
guess based on the file name, or, for the input file, the file contents.
A file with an extension of \fI.rc\fR will be treated as an \f(CWrc\fR
file, a file with an extension of \fI.res\fR will be treated as a
\f(CWres\fR file, and a file with an extension of \fI.o\fR or
\&\fI.exe\fR will be treated as a \f(CWcoff\fR file.
.PP
If no output file is specified, \f(CWwindres\fR will print the resources
in \f(CWrc\fR format to standard output.
.PP
The normal use is for you to write an \f(CWrc\fR file, use \f(CWwindres\fR
to convert it to a \s-1COFF\s0 object file, and then link the \s-1COFF\s0 file into
your application.  This will make the resources described in the
\f(CWrc\fR file available to Windows.
.SH "OPTIONS"
.Ip "\f(CW-i \fIfilename\fR\fR" 4
.Ip "\f(CW--input \fIfilename\fR\fR" 4
The name of the input file.  If this option is not used, then
\f(CWwindres\fR will use the first non-option argument as the input file
name.  If there are no non-option arguments, then \f(CWwindres\fR will
read from standard input.  \f(CWwindres\fR can not read a \s-1COFF\s0 file from
standard input.
.Ip "\f(CW-o \fIfilename\fR\fR" 4
.Ip "\f(CW--output \fIfilename\fR\fR" 4
The name of the output file.  If this option is not used, then
\f(CWwindres\fR will use the first non-option argument, after any used
for the input file name, as the output file name.  If there is no
non-option argument, then \f(CWwindres\fR will write to standard output.
\f(CWwindres\fR can not write a \s-1COFF\s0 file to standard output.
.Ip "\f(CW-I \fIformat\fR\fR" 4
.Ip "\f(CW--input-format \fIformat\fR\fR" 4
The input format to read.  \fIformat\fR may be \fBres\fR, \fBrc\fR, or
\fBcoff\fR.  If no input format is specified, \f(CWwindres\fR will
guess, as described above.
.Ip "\f(CW-O \fIformat\fR\fR" 4
.Ip "\f(CW--output-format \fIformat\fR\fR" 4
The output format to generate.  \fIformat\fR may be \fBres\fR,
\fBrc\fR, or \fBcoff\fR.  If no output format is specified,
\f(CWwindres\fR will guess, as described above.
.Ip "\f(CW-F \fItarget\fR\fR" 4
.Ip "\f(CW--target \fItarget\fR\fR" 4
Specify the \s-1BFD\s0 format to use for a \s-1COFF\s0 file as input or output.  This
is a \s-1BFD\s0 target name; you can use the \f(CW--help\fR option to see a list
of supported targets.  Normally \f(CWwindres\fR will use the default
format, which is the first one listed by the \f(CW--help\fR option.
\f(CW@ref\fR{Target Selection}.
.Ip "\f(CW--preprocessor \fIprogram\fR\fR" 4
When \f(CWwindres\fR reads an \f(CWrc\fR file, it runs it through the C
preprocessor first.  This option may be used to specify the preprocessor
to use, including any leading arguments.  The default preprocessor
argument is \f(CWgcc -E -xc-header -DRC_INVOKED\fR.
.Ip "\f(CW--include-dir \fIdirectory\fR\fR" 4
Specify an include directory to use when reading an \f(CWrc\fR file.
\f(CWwindres\fR will pass this to the preprocessor as an \f(CW-I\fR
option.  \f(CWwindres\fR will also search this directory when looking for
files named in the \f(CWrc\fR file.
.Ip "\f(CW-D \fItarget\fR\fR" 4
.Ip "\f(CW--define \fIsym\fR[=\fIval\fR]\fR" 4
Specify a \f(CW-D\fR option to pass to the preprocessor when reading an
\f(CWrc\fR file.
.Ip "\f(CW-v\fR" 4
Enable verbose mode.  This tells you what the preprocessor is if you
didn't specify one.
.Ip "\f(CW--language \fIval\fR\fR" 4
Specify the default language to use when reading an \f(CWrc\fR file.
\fIval\fR should be a hexadecimal language code.  The low eight bits are
the language, and the high eight bits are the sublanguage.
.Ip "\f(CW--use-temp-file\fR" 4
Use a temporary file to instead of using popen to read the output of
the preprocessor. Use this option if the popen implementation is buggy 
on the host (eg., certain non-English language versions of Windows 95 and 
Windows 98 are known to have buggy popen where the output will instead
go the console).
.Ip "\f(CW--no-use-temp-file\fR" 4
Use popen, not a temporary file, to read the output of the preprocessor.
This is the default behaviour.
.Ip "\f(CW--help\fR" 4
Prints a usage summary.
.Ip "\f(CW--version\fR" 4
Prints the version number for \f(CWwindres\fR.
.Ip "\f(CW--yydebug\fR" 4
If \f(CWwindres\fR is compiled with \f(CWYYDEBUG\fR defined as \f(CW1\fR,
this will turn on parser debugging.
.SH "SEE ALSO"
the Info entries for \fIbinutils\fR.
.SH "COPYRIGHT"
Copyright (c) 1991, 92, 93, 94, 95, 96, 97, 98, 99, 2000, 2001 Free Software Foundation, Inc.
.PP
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front-Cover Texts, and with no
Back-Cover Texts.  A copy of the license is included in the
section entitled \*(L"GNU Free Documentation License\*(R".

.rn }` ''
.IX Title "WINDRES.1 1"
.IX Name "windres - manipulate Windows resources."

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Item "\f(CWrc\fR"

.IX Item "\f(CWres\fR"

.IX Item "\f(CWcoff\fR"

.IX Header "OPTIONS"

.IX Item "\f(CW-i \fIfilename\fR\fR"

.IX Item "\f(CW--input \fIfilename\fR\fR"

.IX Item "\f(CW-o \fIfilename\fR\fR"

.IX Item "\f(CW--output \fIfilename\fR\fR"

.IX Item "\f(CW-I \fIformat\fR\fR"

.IX Item "\f(CW--input-format \fIformat\fR\fR"

.IX Item "\f(CW-O \fIformat\fR\fR"

.IX Item "\f(CW--output-format \fIformat\fR\fR"

.IX Item "\f(CW-F \fItarget\fR\fR"

.IX Item "\f(CW--target \fItarget\fR\fR"

.IX Item "\f(CW--preprocessor \fIprogram\fR\fR"

.IX Item "\f(CW--include-dir \fIdirectory\fR\fR"

.IX Item "\f(CW-D \fItarget\fR\fR"

.IX Item "\f(CW--define \fIsym\fR[=\fIval\fR]\fR"

.IX Item "\f(CW-v\fR"

.IX Item "\f(CW--language \fIval\fR\fR"

.IX Item "\f(CW--use-temp-file\fR"

.IX Item "\f(CW--no-use-temp-file\fR"

.IX Item "\f(CW--help\fR"

.IX Item "\f(CW--version\fR"

.IX Item "\f(CW--yydebug\fR"

.IX Header "SEE ALSO"

.IX Header "COPYRIGHT"

