; File is autogenerated from allopcodes.S - do not edit
; Please use ./rebuild.sh to rebuild this file

;;; 
;;;  Test all opcodes and argument permuation
;;;  To make our job a lot simpler, we define a couple of
;;;  insn classes, that we use to generate the proper
;;;  test output.
;;;  
;;;  To rebuild this file you must use
;;;    ./rebuild.sh
;;; 
 


















































 










 









 








 








 







 







 








 








 









 









 








 









 








 








 








 










 









 











 











 

















 













 












 














 







 







 










 











 









 










 











 









 









        
            .text
start:        absf_B:                         &   absf    R1, R0            &   absf    R0                &   absf    @start, R0        &   absf    *+AR0(5), R0      &   absf    3.5, R0 
              absf_stf_P:                                            &   absf   *+AR0(1), R0  &||    stf    R1, *+AR1(1)     &   stf    R1, *+AR1(1)  &||    absf   *+AR0(1), R0 
              absi_A:                         &   absi    AR1, AR0          &   absi    AR0               &   absi    @start, AR0       &   absi    *+AR0(5), AR0     &   absi    -5, AR0 
              absi_sti_P:                                            &   absi   *+AR0(1), R0  &||    sti    R1, *+AR1(1)     &   sti    R1, *+AR1(1)  &||    absi   *+AR0(1), R0 
              addc_A:                         &   addc    AR1, AR0          &   addc    AR0               &   addc    @start, AR0       &   addc    *+AR0(5), AR0     &   addc    -5, AR0 
              addc_TC:                                       &   addc       AR2, AR1, AR0               &   addc       AR1, AR0                    &   addc       AR1, *+AR0(1), AR0          &   addc       *+AR0(1), AR1, AR0          &   addc       *+AR0(1), AR0               &   addc       *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   addc       5, AR1, AR0                 &   addc       5, AR0                      &   addc       AR1, -5, AR0                &   addc       *+AR0(5), AR1, AR0          &   addc       *+AR0(5), AR0               &   addc       AR1, *+AR0(5), AR0          &   addc       5, *+AR0(5), AR0            &   addc       *+AR0(5), -5, AR0           &   addc       *+AR0(5), *+AR1(5), AR0     & .endif                                         &  addc3_TC:                                      &   addc3  AR2, AR1, AR0               &   addc3  AR1, AR0                    &   addc3  AR1, *+AR0(1), AR0          &   addc3  *+AR0(1), AR1, AR0          &   addc3  *+AR0(1), AR0               &   addc3  *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   addc3  -5, AR1, AR0                &   addc3  -5, AR0                     &   addc3  AR1, -5, AR0                &   addc3  *+AR0(5), AR1, AR0          &   addc3  *+AR0(5), AR0               &   addc3  AR1, *+AR0(5), AR0          &   addc3  -5, *+AR0(5), AR0           &   addc3  *+AR0(5), -5, AR0           &   addc3  *+AR0(5), *+AR1(5), AR0     & .endif 
              addf_B:                         &   addf    R1, R0            &   addf    R0                &   addf    @start, R0        &   addf    *+AR0(5), R0      &   addf    3.5, R0 
              addf_SC:                                      &   addf       R2, R1, R0                 &   addf       R1, R0                     &   addf       R1, *+AR0(1), R0           &   addf       *+AR0(1), R1, R0           &   addf       *+AR0(1), R0               &   addf       *+AR0(1), *+AR1(1), R0     & .ifdef TEST_C4X                               &   addf       *+AR0(5), R1, R0           &   addf       *+AR0(5), R0               &   addf       R1, *+AR0(5), R0           &   addf       *+AR0(5), *+AR1(5), R0     & .endif                                        &  addf3_SC:                                     &   addf3  R2, R1, R0                 &   addf3  R1, R0                     &   addf3  R1, *+AR0(1), R0           &   addf3  *+AR0(1), R1, R0           &   addf3  *+AR0(1), R0               &   addf3  *+AR0(1), *+AR1(1), R0     & .ifdef TEST_C4X                               &   addf3  *+AR0(5), R1, R0           &   addf3  *+AR0(5), R0               &   addf3  R1, *+AR0(5), R0           &   addf3  *+AR0(5), *+AR1(5), R0     & .endif 
              addf_stf_QC:                                                           &   addf      *+AR0(1), R1, R0  &||    stf       R1, *+AR1(1)         &   addf      *+AR0(1), R0      &||    stf       R1, *+AR1(1)         &   addf      R0, *+AR0(1), R0  &||    stf       R1, *+AR1(1)         &   stf       R1, *+AR1(1)      &||    addf      *+AR0(1), R1, R0     &   stf       R1, *+AR1(1)      &||    addf      *+AR0(1), R0         &   stf       R1, *+AR1(1)      &||    addf      R0, *+AR0(1), R0     &  addf3_stf_QC:                                                          &   addf3  *+AR0(1), R1, R0  &||    stf       R1, *+AR1(1)         &   addf3  *+AR0(1), R0      &||    stf       R1, *+AR1(1)         &   addf3  R0, *+AR0(1), R0  &||    stf       R1, *+AR1(1)         &   stf       R1, *+AR1(1)      &||    addf3  *+AR0(1), R1, R0     &   stf       R1, *+AR1(1)      &||    addf3  *+AR0(1), R0         &   stf       R1, *+AR1(1)      &||    addf3  R0, *+AR0(1), R0 
              addi_A:                         &   addi    AR1, AR0          &   addi    AR0               &   addi    @start, AR0       &   addi    *+AR0(5), AR0     &   addi    -5, AR0 
              addi_TC:                                       &   addi       AR2, AR1, AR0               &   addi       AR1, AR0                    &   addi       AR1, *+AR0(1), AR0          &   addi       *+AR0(1), AR1, AR0          &   addi       *+AR0(1), AR0               &   addi       *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   addi       5, AR1, AR0                 &   addi       5, AR0                      &   addi       AR1, -5, AR0                &   addi       *+AR0(5), AR1, AR0          &   addi       *+AR0(5), AR0               &   addi       AR1, *+AR0(5), AR0          &   addi       5, *+AR0(5), AR0            &   addi       *+AR0(5), -5, AR0           &   addi       *+AR0(5), *+AR1(5), AR0     & .endif                                         &  addi3_TC:                                      &   addi3  AR2, AR1, AR0               &   addi3  AR1, AR0                    &   addi3  AR1, *+AR0(1), AR0          &   addi3  *+AR0(1), AR1, AR0          &   addi3  *+AR0(1), AR0               &   addi3  *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   addi3  -5, AR1, AR0                &   addi3  -5, AR0                     &   addi3  AR1, -5, AR0                &   addi3  *+AR0(5), AR1, AR0          &   addi3  *+AR0(5), AR0               &   addi3  AR1, *+AR0(5), AR0          &   addi3  -5, *+AR0(5), AR0           &   addi3  *+AR0(5), -5, AR0           &   addi3  *+AR0(5), *+AR1(5), AR0     & .endif 
              addi_sti_QC:                                                           &   addi      *+AR0(1), R1, R0  &||    sti       R1, *+AR1(1)         &   addi      *+AR0(1), R0      &||    sti       R1, *+AR1(1)         &   addi      R0, *+AR0(1), R0  &||    sti       R1, *+AR1(1)         &   sti       R1, *+AR1(1)      &||    addi      *+AR0(1), R1, R0     &   sti       R1, *+AR1(1)      &||    addi      *+AR0(1), R0         &   sti       R1, *+AR1(1)      &||    addi      R0, *+AR0(1), R0     &  addi3_sti_QC:                                                          &   addi3  *+AR0(1), R1, R0  &||    sti       R1, *+AR1(1)         &   addi3  *+AR0(1), R0      &||    sti       R1, *+AR1(1)         &   addi3  R0, *+AR0(1), R0  &||    sti       R1, *+AR1(1)         &   sti       R1, *+AR1(1)      &||    addi3  *+AR0(1), R1, R0     &   sti       R1, *+AR1(1)      &||    addi3  *+AR0(1), R0         &   sti       R1, *+AR1(1)      &||    addi3  R0, *+AR0(1), R0 
              and_AU:                        &   and    AR1, AR0          &   and    AR0               &   and    @start, AR0       &   and    *+AR0(5), AR0     &   and    5, AR0 
              and_TC:                                       &   and       AR2, AR1, AR0               &   and       AR1, AR0                    &   and       AR1, *+AR0(1), AR0          &   and       *+AR0(1), AR1, AR0          &   and       *+AR0(1), AR0               &   and       *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   and       5, AR1, AR0                 &   and       5, AR0                      &   and       AR1, -5, AR0                &   and       *+AR0(5), AR1, AR0          &   and       *+AR0(5), AR0               &   and       AR1, *+AR0(5), AR0          &   and       5, *+AR0(5), AR0            &   and       *+AR0(5), -5, AR0           &   and       *+AR0(5), *+AR1(5), AR0     & .endif                                         &  and3_TC:                                      &   and3  AR2, AR1, AR0               &   and3  AR1, AR0                    &   and3  AR1, *+AR0(1), AR0          &   and3  *+AR0(1), AR1, AR0          &   and3  *+AR0(1), AR0               &   and3  *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   and3  -5, AR1, AR0                &   and3  -5, AR0                     &   and3  AR1, -5, AR0                &   and3  *+AR0(5), AR1, AR0          &   and3  *+AR0(5), AR0               &   and3  AR1, *+AR0(5), AR0          &   and3  -5, *+AR0(5), AR0           &   and3  *+AR0(5), -5, AR0           &   and3  *+AR0(5), *+AR1(5), AR0     & .endif 
              and_sti_QC:                                                           &   and      *+AR0(1), R1, R0  &||    sti       R1, *+AR1(1)         &   and      *+AR0(1), R0      &||    sti       R1, *+AR1(1)         &   and      R0, *+AR0(1), R0  &||    sti       R1, *+AR1(1)         &   sti       R1, *+AR1(1)      &||    and      *+AR0(1), R1, R0     &   sti       R1, *+AR1(1)      &||    and      *+AR0(1), R0         &   sti       R1, *+AR1(1)      &||    and      R0, *+AR0(1), R0     &  and3_sti_QC:                                                          &   and3  *+AR0(1), R1, R0  &||    sti       R1, *+AR1(1)         &   and3  *+AR0(1), R0      &||    sti       R1, *+AR1(1)         &   and3  R0, *+AR0(1), R0  &||    sti       R1, *+AR1(1)         &   sti       R1, *+AR1(1)      &||    and3  *+AR0(1), R1, R0     &   sti       R1, *+AR1(1)      &||    and3  *+AR0(1), R0         &   sti       R1, *+AR1(1)      &||    and3  R0, *+AR0(1), R0 
              andn_AU:                        &   andn    AR1, AR0          &   andn    AR0               &   andn    @start, AR0       &   andn    *+AR0(5), AR0     &   andn    5, AR0 
              andn_T:                                        &   andn       AR2, AR1, AR0               &   andn       AR1, AR0                    &   andn       AR1, *+AR0(1), AR0          &   andn       *+AR0(1), AR1, AR0          &   andn       *+AR0(1), AR0               &   andn       *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   andn       5, AR1, AR0                 &   andn       5, AR0                      &   andn       *+AR0(5), AR1, AR0          &   andn       *+AR0(5), AR0               &   andn       5, *+AR0(5), AR0            &   andn       *+AR0(5), *+AR1(5), AR0     & .endif                                         &  andn3_T:                                       &   andn3  AR2, AR1, AR0               &   andn3  AR1, AR0                    &   andn3  AR1, *+AR0(1), AR0          &   andn3  *+AR0(1), AR1, AR0          &   andn3  *+AR0(1), AR0               &   andn3  *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   andn3  -5, AR1, AR0                &   andn3  -5, AR0                     &   andn3  *+AR0(5), AR1, AR0          &   andn3  *+AR0(5), AR0               &   andn3  -5, *+AR0(5), AR0           &   andn3  *+AR0(5), *+AR1(5), AR0     & .endif 
              ash_A:                         &   ash    AR1, AR0          &   ash    AR0               &   ash    @start, AR0       &   ash    *+AR0(5), AR0     &   ash    -5, AR0 
              ash_T:                                        &   ash       AR2, AR1, AR0               &   ash       AR1, AR0                    &   ash       AR1, *+AR0(1), AR0          &   ash       *+AR0(1), AR1, AR0          &   ash       *+AR0(1), AR0               &   ash       *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   ash       5, AR1, AR0                 &   ash       5, AR0                      &   ash       *+AR0(5), AR1, AR0          &   ash       *+AR0(5), AR0               &   ash       5, *+AR0(5), AR0            &   ash       *+AR0(5), *+AR1(5), AR0     & .endif                                         &  ash3_T:                                       &   ash3  AR2, AR1, AR0               &   ash3  AR1, AR0                    &   ash3  AR1, *+AR0(1), AR0          &   ash3  *+AR0(1), AR1, AR0          &   ash3  *+AR0(1), AR0               &   ash3  *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   ash3  -5, AR1, AR0                &   ash3  -5, AR0                     &   ash3  *+AR0(5), AR1, AR0          &   ash3  *+AR0(5), AR0               &   ash3  -5, *+AR0(5), AR0           &   ash3  *+AR0(5), *+AR1(5), AR0     & .endif 
              ash_sti_Q:                                                            &   ash      R0, *+AR0(1), R0  &||    sti       R1, *+AR1(1)         &   sti       R1, *+AR1(1)      &||    ash      R0, *+AR0(1), R0     &  ash3_sti_Q:                                                           &   ash3  R0, *+AR0(1), R0  &||    sti       R1, *+AR1(1)         &   sti       R1, *+AR1(1)      &||    ash3  R0, *+AR0(1), R0 
              bC_J:                &   bC   R0         &   bC   start      &  b_J:                &   b    R0         &   b    start 
              bCd_J:                &   bCd   R0         &   bCd   start      &  bd_J:                &   bd    R0         &   bd    start 
br_I:       br      start
brd_I:      brd     start
call_I:     call    start
call_JS:    callc   R0
            callc   start
              cmpf_B:                         &   cmpf    R1, R0            &   cmpf    R0                &   cmpf    @start, R0        &   cmpf    *+AR0(5), R0      &   cmpf    3.5, R0 
              cmpf_S2:                                    &   cmpf       R2, R1                     &   cmpf       R1, *+AR0(1)               &   cmpf       *+AR0(1), R1               &   cmpf       *+AR0(1), *+AR1(1)         & .ifdef TEST_C4X                             &   cmpf       *+AR0(5), R1               &   cmpf       *+AR0(5), *+AR1(5)         & .endif                                      &  cmpf3_S2:                                   &   cmpf3  R2, R1                     &   cmpf3  R1, *+AR0(1)               &   cmpf3  *+AR0(1), R1               &   cmpf3  *+AR0(1), *+AR1(1)         & .ifdef TEST_C4X                             &   cmpf3  *+AR0(5), R1               &   cmpf3  *+AR0(5), *+AR1(5)         & .endif 
              cmpi_A:                         &   cmpi    AR1, AR0          &   cmpi    AR0               &   cmpi    @start, AR0       &   cmpi    *+AR0(5), AR0     &   cmpi    -5, AR0 
              cmpi_T2:                                     &   cmpi       AR2, AR1                    &   cmpi       AR1, *+AR0(1)               &   cmpi       *+AR0(1), AR1               &   cmpi       *+AR1(1), *+AR0(1)          & .ifdef   TEST_C4X                            &   cmpi       -5, AR1                     &   cmpi       *+AR0(5), AR1               &   cmpi       -5, *+AR0(5)                &   cmpi       *+AR0(5), *+AR1(5)          & .endif                                       &  cmpi3_T2:                                    &   cmpi3  AR2, AR1                    &   cmpi3  AR1, *+AR0(1)               &   cmpi3  *+AR0(1), AR1               &   cmpi3  *+AR1(1), *+AR0(1)          & .ifdef   TEST_C4X                            &   cmpi3  -5, AR1                     &   cmpi3  *+AR0(5), AR1               &   cmpi3  -5, *+AR0(5)                &   cmpi3  *+AR0(5), *+AR1(5)          & .endif 
              dbC_D:                      &   dbC   AR0, R0        &   dbC   AR0, start     &  db_D:                      &   db    AR0, R0        &   db    AR0, start 
              dbCd_D:                      &   dbCd   AR0, R0        &   dbCd   AR0, start     &  dbd_D:                      &   dbd    AR0, R0        &   dbd    AR0, start 
              fix_AF:                        &   fix    R1, R0            &   fix    R0                &   fix    @start, AR0       &   fix    *+AR0(5), AR0     &   fix    3.5, AR0 
              fix_sti_P:                                            &   fix   *+AR0(1), R0  &||    sti    R1, *+AR1(1)     &   sti    R1, *+AR1(1)  &||    fix   *+AR0(1), R0 
              float_BI:                        &   float    AR1, R0           &   float    R0                &   float    @start, R0        &   float    *+AR0(5), R0      &   float    -5, R0 
              float_stf_P:                                            &   float   *+AR0(1), R0  &||    stf    R1, *+AR1(1)     &   stf    R1, *+AR1(1)  &||    float   *+AR0(1), R0 
iack_Z:     iack    @start
            iack    *+AR0(1)
idle_Z:     idle
            .ifdef TEST_IDLE2
idle2_Z:    idle2
            .endif
              lde_B:                         &   lde    R1, R0            &   lde    R0                &   lde    @start, R0        &   lde    *+AR0(5), R0      &   lde    3.5, R0 
              ldf_B:                         &   ldf    R1, R0            &   ldf    R0                &   ldf    @start, R0        &   ldf    *+AR0(5), R0      &   ldf    3.5, R0 
              ldf_LL:                                                          &   ldf       *+AR0(1), R0  &||    ldf       *+AR1(1), R1     &   ldf2  *+AR0(1), R0  &||    ldf1  *+AR1(1), R1     &   ldf1  *+AR1(1), R1  &||    ldf2  *+AR0(1), R0 
              ldf_stf_P:                                            &   ldf   *+AR0(1), R0  &||    stf    R1, *+AR1(1)     &   stf    R1, *+AR1(1)  &||    ldf   *+AR0(1), R0 
              ldfC_BB:                        &   ldfC    R1, R0            &   ldfC    R0                &   ldfC    @start, R0        &   ldfC    *+AR0(5), R0      &   ldfC    3.5, R0 
              ldfi_B6:                        &   ldfi    @start, R0        &   ldfi    *+AR0(5), R0 
              ldi_A:                         &   ldi    AR1, AR0          &   ldi    AR0               &   ldi    @start, AR0       &   ldi    *+AR0(5), AR0     &   ldi    -5, AR0 
              ldi_LL:                                                          &   ldi       *+AR0(1), R0  &||    ldi       *+AR1(1), R1     &   ldi2  *+AR0(1), R0  &||    ldi1  *+AR1(1), R1     &   ldi1  *+AR1(1), R1  &||    ldi2  *+AR0(1), R0 
              ldi_sti_P:                                            &   ldi   *+AR0(1), R0  &||    sti    R1, *+AR1(1)     &   sti    R1, *+AR1(1)  &||    ldi   *+AR0(1), R0 
              ldiC_AB:                        &   ldiC    AR1, AR0          &   ldiC    AR0               &   ldiC    @start, AR0       &   ldiC    *+AR0(5), AR0     &   ldiC    -5, AR0 
              ldii_A6:                        &   ldii    @start, AR0       &   ldii    *+AR0(5), AR0 
ldp_Z:      ldp     start
              ldm_B:                         &   ldm    R1, R0            &   ldm    R0                &   ldm    @start, R0        &   ldm    *+AR0(5), R0      &   ldm    3.5, R0 
            .ifdef TEST_LPWR
lopower_Z:  lopower
            .endif
              lsh_A:                         &   lsh    AR1, AR0          &   lsh    AR0               &   lsh    @start, AR0       &   lsh    *+AR0(5), AR0     &   lsh    -5, AR0 
              lsh_T:                                        &   lsh       AR2, AR1, AR0               &   lsh       AR1, AR0                    &   lsh       AR1, *+AR0(1), AR0          &   lsh       *+AR0(1), AR1, AR0          &   lsh       *+AR0(1), AR0               &   lsh       *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   lsh       5, AR1, AR0                 &   lsh       5, AR0                      &   lsh       *+AR0(5), AR1, AR0          &   lsh       *+AR0(5), AR0               &   lsh       5, *+AR0(5), AR0            &   lsh       *+AR0(5), *+AR1(5), AR0     & .endif                                         &  lsh3_T:                                       &   lsh3  AR2, AR1, AR0               &   lsh3  AR1, AR0                    &   lsh3  AR1, *+AR0(1), AR0          &   lsh3  *+AR0(1), AR1, AR0          &   lsh3  *+AR0(1), AR0               &   lsh3  *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   lsh3  -5, AR1, AR0                &   lsh3  -5, AR0                     &   lsh3  *+AR0(5), AR1, AR0          &   lsh3  *+AR0(5), AR0               &   lsh3  -5, *+AR0(5), AR0           &   lsh3  *+AR0(5), *+AR1(5), AR0     & .endif 
              lsh_sti_Q:                                                            &   lsh      R0, *+AR0(1), R0  &||    sti       R1, *+AR1(1)         &   sti       R1, *+AR1(1)      &||    lsh      R0, *+AR0(1), R0     &  lsh3_sti_Q:                                                           &   lsh3  R0, *+AR0(1), R0  &||    sti       R1, *+AR1(1)         &   sti       R1, *+AR1(1)      &||    lsh3  R0, *+AR0(1), R0 
            .ifdef TEST_LPWR
maxspeed_Z: maxspeed
            .endif
              mpyf_B:                         &   mpyf    R1, R0            &   mpyf    R0                &   mpyf    @start, R0        &   mpyf    *+AR0(5), R0      &   mpyf    3.5, R0 
              mpyf_SC:                                      &   mpyf       R2, R1, R0                 &   mpyf       R1, R0                     &   mpyf       R1, *+AR0(1), R0           &   mpyf       *+AR0(1), R1, R0           &   mpyf       *+AR0(1), R0               &   mpyf       *+AR0(1), *+AR1(1), R0     & .ifdef TEST_C4X                               &   mpyf       *+AR0(5), R1, R0           &   mpyf       *+AR0(5), R0               &   mpyf       R1, *+AR0(5), R0           &   mpyf       *+AR0(5), *+AR1(5), R0     & .endif                                        &  mpyf3_SC:                                     &   mpyf3  R2, R1, R0                 &   mpyf3  R1, R0                     &   mpyf3  R1, *+AR0(1), R0           &   mpyf3  *+AR0(1), R1, R0           &   mpyf3  *+AR0(1), R0               &   mpyf3  *+AR0(1), *+AR1(1), R0     & .ifdef TEST_C4X                               &   mpyf3  *+AR0(5), R1, R0           &   mpyf3  *+AR0(5), R0               &   mpyf3  R1, *+AR0(5), R0           &   mpyf3  *+AR0(5), *+AR1(5), R0     & .endif 
              mpyf_addf_M:                                                                          &   mpyf      *+AR0(1), *+AR1(1), R0  &||    addf       R0, R1, R2                 &   mpyf      *+AR0(1), *+AR1(1), R0  &||    addf       R0, R2                     &   mpyf      *+AR0(1), R0, R0        &||    addf       R0, *+AR1(1), R2           &   mpyf      *+AR0(1), R0            &||    addf       R0, *+AR1(1), R2           &   mpyf      R0, *+AR0(1), R0        &||    addf       R0, *+AR1(1), R2           &   mpyf      R2, R1, R0              &||    addf       *+AR0(1), *+AR1(1), R2     &   mpyf      R2, R0                  &||    addf       *+AR0(1), *+AR1(1), R2     &   mpyf      *+AR0(1), R1, R0        &||    addf       *+AR1(1), R3, R2           &   mpyf      *+AR0(1), R0            &||    addf       *+AR1(1), R3, R2           &   mpyf      *+AR0(1), R1, R0        &||    addf       *+AR1(1), R2               &   mpyf      *+AR0(1), R0            &||    addf       *+AR1(1), R2               &   mpyf      R0, *+AR0(1), R0        &||    addf       *+AR1(1), R0, R2           &   mpyf      R0, *+AR0(1), R0        &||    addf       *+AR1(1), R2               &  mpyf3_addf_M:                                                                         &   mpyf3  *+AR0(1), *+AR1(1), R0  &||    addf       R0, R1, R2                 &   mpyf3  *+AR0(1), *+AR1(1), R0  &||    addf       R0, R2                     &   mpyf3  *+AR0(1), R0, R0        &||    addf       R0, *+AR1(1), R2           &   mpyf3  *+AR0(1), R0            &||    addf       R0, *+AR1(1), R2           &   mpyf3  R0, *+AR0(1), R0        &||    addf       R0, *+AR1(1), R2           &   mpyf3  R2, R1, R0              &||    addf       *+AR0(1), *+AR1(1), R2     &   mpyf3  R2, R0                  &||    addf       *+AR0(1), *+AR1(1), R2     &   mpyf3  *+AR0(1), R1, R0        &||    addf       *+AR1(1), R3, R2           &   mpyf3  *+AR0(1), R0            &||    addf       *+AR1(1), R3, R2           &   mpyf3  *+AR0(1), R1, R0        &||    addf       *+AR1(1), R2               &   mpyf3  *+AR0(1), R0            &||    addf       *+AR1(1), R2               &   mpyf3  R0, *+AR0(1), R0        &||    addf       *+AR1(1), R0, R2           &   mpyf3  R0, *+AR0(1), R0        &||    addf       *+AR1(1), R2               &  mpyf_addf3_M:                                                                         &   mpyf      *+AR0(1), *+AR1(1), R0  &||    addf3  R0, R1, R2                 &   mpyf      *+AR0(1), *+AR1(1), R0  &||    addf3  R0, R2                     &   mpyf      *+AR0(1), R0, R0        &||    addf3  R0, *+AR1(1), R2           &   mpyf      *+AR0(1), R0            &||    addf3  R0, *+AR1(1), R2           &   mpyf      R0, *+AR0(1), R0        &||    addf3  R0, *+AR1(1), R2           &   mpyf      R2, R1, R0              &||    addf3  *+AR0(1), *+AR1(1), R2     &   mpyf      R2, R0                  &||    addf3  *+AR0(1), *+AR1(1), R2     &   mpyf      *+AR0(1), R1, R0        &||    addf3  *+AR1(1), R3, R2           &   mpyf      *+AR0(1), R0            &||    addf3  *+AR1(1), R3, R2           &   mpyf      *+AR0(1), R1, R0        &||    addf3  *+AR1(1), R2               &   mpyf      *+AR0(1), R0            &||    addf3  *+AR1(1), R2               &   mpyf      R0, *+AR0(1), R0        &||    addf3  *+AR1(1), R0, R2           &   mpyf      R0, *+AR0(1), R0        &||    addf3  *+AR1(1), R2               &  mpyf3_addf3_M:                                                                        &   mpyf3  *+AR0(1), *+AR1(1), R0  &||    addf3  R0, R1, R2                 &   mpyf3  *+AR0(1), *+AR1(1), R0  &||    addf3  R0, R2                     &   mpyf3  *+AR0(1), R0, R0        &||    addf3  R0, *+AR1(1), R2           &   mpyf3  *+AR0(1), R0            &||    addf3  R0, *+AR1(1), R2           &   mpyf3  R0, *+AR0(1), R0        &||    addf3  R0, *+AR1(1), R2           &   mpyf3  R2, R1, R0              &||    addf3  *+AR0(1), *+AR1(1), R2     &   mpyf3  R2, R0                  &||    addf3  *+AR0(1), *+AR1(1), R2     &   mpyf3  *+AR0(1), R1, R0        &||    addf3  *+AR1(1), R3, R2           &   mpyf3  *+AR0(1), R0            &||    addf3  *+AR1(1), R3, R2           &   mpyf3  *+AR0(1), R1, R0        &||    addf3  *+AR1(1), R2               &   mpyf3  *+AR0(1), R0            &||    addf3  *+AR1(1), R2               &   mpyf3  R0, *+AR0(1), R0        &||    addf3  *+AR1(1), R0, R2           &   mpyf3  R0, *+AR0(1), R0        &||    addf3  *+AR1(1), R2               &  addf_mpyf_M:                                                                          &   addf       R0, R1, R2              &||    mpyf      *+AR0(1), *+AR1(1), R0     &   addf       R0, R2                  &||    mpyf      *+AR0(1), *+AR1(1), R0     &   addf       R0, *+AR1(1), R2        &||    mpyf      *+AR0(1), R0, R0           &   addf       R0, *+AR1(1), R2        &||    mpyf      *+AR0(1), R0               &   addf       R0, *+AR1(1), R2        &||    mpyf      R0, *+AR0(1), R0           &   addf       *+AR0(1), *+AR1(1), R2  &||    mpyf      R2, R1, R0                 &   addf       *+AR0(1), *+AR1(1), R2  &||    mpyf      R2, R0                     &   addf       *+AR1(1), R3, R2        &||    mpyf      *+AR0(1), R1, R0           &   addf       *+AR1(1), R3, R2        &||    mpyf      *+AR0(1), R0               &   addf       *+AR1(1), R2            &||    mpyf      *+AR0(1), R1, R0           &   addf       *+AR1(1), R2            &||    mpyf      *+AR0(1), R0               &   addf       *+AR1(1), R0, R2        &||    mpyf      R0, *+AR0(1), R0           &   addf       *+AR1(1), R2            &||    mpyf      R0, *+AR0(1), R0           &  addf3_mpyf3_M:                                                                        &   addf3  R0, R1, R2              &||    mpyf3  *+AR0(1), *+AR1(1), R0     &   addf3  R0, R2                  &||    mpyf3  *+AR0(1), *+AR1(1), R0     &   addf3  R0, *+AR1(1), R2        &||    mpyf3  *+AR0(1), R0, R0           &   addf3  R0, *+AR1(1), R2        &||    mpyf3  *+AR0(1), R0               &   addf3  R0, *+AR1(1), R2        &||    mpyf3  R0, *+AR0(1), R0           &   addf3  *+AR0(1), *+AR1(1), R2  &||    mpyf3  R2, R1, R0                 &   addf3  *+AR0(1), *+AR1(1), R2  &||    mpyf3  R2, R0                     &   addf3  *+AR1(1), R3, R2        &||    mpyf3  *+AR0(1), R1, R0           &   addf3  *+AR1(1), R3, R2        &||    mpyf3  *+AR0(1), R0               &   addf3  *+AR1(1), R2            &||    mpyf3  *+AR0(1), R1, R0           &   addf3  *+AR1(1), R2            &||    mpyf3  *+AR0(1), R0               &   addf3  *+AR1(1), R0, R2        &||    mpyf3  R0, *+AR0(1), R0           &   addf3  *+AR1(1), R2            &||    mpyf3  R0, *+AR0(1), R0           &  addf_mpyf3_M:                                                                         &   addf       R0, R1, R2              &||    mpyf3  *+AR0(1), *+AR1(1), R0     &   addf       R0, R2                  &||    mpyf3  *+AR0(1), *+AR1(1), R0     &   addf       R0, *+AR1(1), R2        &||    mpyf3  *+AR0(1), R0, R0           &   addf       R0, *+AR1(1), R2        &||    mpyf3  *+AR0(1), R0               &   addf       R0, *+AR1(1), R2        &||    mpyf3  R0, *+AR0(1), R0           &   addf       *+AR0(1), *+AR1(1), R2  &||    mpyf3  R2, R1, R0                 &   addf       *+AR0(1), *+AR1(1), R2  &||    mpyf3  R2, R0                     &   addf       *+AR1(1), R3, R2        &||    mpyf3  *+AR0(1), R1, R0           &   addf       *+AR1(1), R3, R2        &||    mpyf3  *+AR0(1), R0               &   addf       *+AR1(1), R2            &||    mpyf3  *+AR0(1), R1, R0           &   addf       *+AR1(1), R2            &||    mpyf3  *+AR0(1), R0               &   addf       *+AR1(1), R0, R2        &||    mpyf3  R0, *+AR0(1), R0           &   addf       *+AR1(1), R2            &||    mpyf3  R0, *+AR0(1), R0           &  addf3_mpyf_M:                                                                         &   addf3  R0, R1, R2              &||    mpyf      *+AR0(1), *+AR1(1), R0     &   addf3  R0, R2                  &||    mpyf      *+AR0(1), *+AR1(1), R0     &   addf3  R0, *+AR1(1), R2        &||    mpyf      *+AR0(1), R0, R0           &   addf3  R0, *+AR1(1), R2        &||    mpyf      *+AR0(1), R0               &   addf3  R0, *+AR1(1), R2        &||    mpyf      R0, *+AR0(1), R0           &   addf3  *+AR0(1), *+AR1(1), R2  &||    mpyf      R2, R1, R0                 &   addf3  *+AR0(1), *+AR1(1), R2  &||    mpyf      R2, R0                     &   addf3  *+AR1(1), R3, R2        &||    mpyf      *+AR0(1), R1, R0           &   addf3  *+AR1(1), R3, R2        &||    mpyf      *+AR0(1), R0               &   addf3  *+AR1(1), R2            &||    mpyf      *+AR0(1), R1, R0           &   addf3  *+AR1(1), R2            &||    mpyf      *+AR0(1), R0               &   addf3  *+AR1(1), R0, R2        &||    mpyf      R0, *+AR0(1), R0           &   addf3  *+AR1(1), R2            &||    mpyf      R0, *+AR0(1), R0           & 
              mpyf_stf_QC:                                                           &   mpyf      *+AR0(1), R1, R0  &||    stf       R1, *+AR1(1)         &   mpyf      *+AR0(1), R0      &||    stf       R1, *+AR1(1)         &   mpyf      R0, *+AR0(1), R0  &||    stf       R1, *+AR1(1)         &   stf       R1, *+AR1(1)      &||    mpyf      *+AR0(1), R1, R0     &   stf       R1, *+AR1(1)      &||    mpyf      *+AR0(1), R0         &   stf       R1, *+AR1(1)      &||    mpyf      R0, *+AR0(1), R0     &  mpyf3_stf_QC:                                                          &   mpyf3  *+AR0(1), R1, R0  &||    stf       R1, *+AR1(1)         &   mpyf3  *+AR0(1), R0      &||    stf       R1, *+AR1(1)         &   mpyf3  R0, *+AR0(1), R0  &||    stf       R1, *+AR1(1)         &   stf       R1, *+AR1(1)      &||    mpyf3  *+AR0(1), R1, R0     &   stf       R1, *+AR1(1)      &||    mpyf3  *+AR0(1), R0         &   stf       R1, *+AR1(1)      &||    mpyf3  R0, *+AR0(1), R0 
              mpyf_subf_M:                                                                          &   mpyf      *+AR0(1), *+AR1(1), R0  &||    subf       R0, R1, R2                 &   mpyf      *+AR0(1), *+AR1(1), R0  &||    subf       R0, R2                     &   mpyf      *+AR0(1), R0, R0        &||    subf       R0, *+AR1(1), R2           &   mpyf      *+AR0(1), R0            &||    subf       R0, *+AR1(1), R2           &   mpyf      R0, *+AR0(1), R0        &||    subf       R0, *+AR1(1), R2           &   mpyf      R2, R1, R0              &||    subf       *+AR0(1), *+AR1(1), R2     &   mpyf      R2, R0                  &||    subf       *+AR0(1), *+AR1(1), R2     &   mpyf      *+AR0(1), R1, R0        &||    subf       *+AR1(1), R3, R2           &   mpyf      *+AR0(1), R0            &||    subf       *+AR1(1), R3, R2           &   mpyf      *+AR0(1), R1, R0        &||    subf       *+AR1(1), R2               &   mpyf      *+AR0(1), R0            &||    subf       *+AR1(1), R2               &   mpyf      R0, *+AR0(1), R0        &||    subf       *+AR1(1), R0, R2           &   mpyf      R0, *+AR0(1), R0        &||    subf       *+AR1(1), R2               &  mpyf3_subf_M:                                                                         &   mpyf3  *+AR0(1), *+AR1(1), R0  &||    subf       R0, R1, R2                 &   mpyf3  *+AR0(1), *+AR1(1), R0  &||    subf       R0, R2                     &   mpyf3  *+AR0(1), R0, R0        &||    subf       R0, *+AR1(1), R2           &   mpyf3  *+AR0(1), R0            &||    subf       R0, *+AR1(1), R2           &   mpyf3  R0, *+AR0(1), R0        &||    subf       R0, *+AR1(1), R2           &   mpyf3  R2, R1, R0              &||    subf       *+AR0(1), *+AR1(1), R2     &   mpyf3  R2, R0                  &||    subf       *+AR0(1), *+AR1(1), R2     &   mpyf3  *+AR0(1), R1, R0        &||    subf       *+AR1(1), R3, R2           &   mpyf3  *+AR0(1), R0            &||    subf       *+AR1(1), R3, R2           &   mpyf3  *+AR0(1), R1, R0        &||    subf       *+AR1(1), R2               &   mpyf3  *+AR0(1), R0            &||    subf       *+AR1(1), R2               &   mpyf3  R0, *+AR0(1), R0        &||    subf       *+AR1(1), R0, R2           &   mpyf3  R0, *+AR0(1), R0        &||    subf       *+AR1(1), R2               &  mpyf_subf3_M:                                                                         &   mpyf      *+AR0(1), *+AR1(1), R0  &||    subf3  R0, R1, R2                 &   mpyf      *+AR0(1), *+AR1(1), R0  &||    subf3  R0, R2                     &   mpyf      *+AR0(1), R0, R0        &||    subf3  R0, *+AR1(1), R2           &   mpyf      *+AR0(1), R0            &||    subf3  R0, *+AR1(1), R2           &   mpyf      R0, *+AR0(1), R0        &||    subf3  R0, *+AR1(1), R2           &   mpyf      R2, R1, R0              &||    subf3  *+AR0(1), *+AR1(1), R2     &   mpyf      R2, R0                  &||    subf3  *+AR0(1), *+AR1(1), R2     &   mpyf      *+AR0(1), R1, R0        &||    subf3  *+AR1(1), R3, R2           &   mpyf      *+AR0(1), R0            &||    subf3  *+AR1(1), R3, R2           &   mpyf      *+AR0(1), R1, R0        &||    subf3  *+AR1(1), R2               &   mpyf      *+AR0(1), R0            &||    subf3  *+AR1(1), R2               &   mpyf      R0, *+AR0(1), R0        &||    subf3  *+AR1(1), R0, R2           &   mpyf      R0, *+AR0(1), R0        &||    subf3  *+AR1(1), R2               &  mpyf3_subf3_M:                                                                        &   mpyf3  *+AR0(1), *+AR1(1), R0  &||    subf3  R0, R1, R2                 &   mpyf3  *+AR0(1), *+AR1(1), R0  &||    subf3  R0, R2                     &   mpyf3  *+AR0(1), R0, R0        &||    subf3  R0, *+AR1(1), R2           &   mpyf3  *+AR0(1), R0            &||    subf3  R0, *+AR1(1), R2           &   mpyf3  R0, *+AR0(1), R0        &||    subf3  R0, *+AR1(1), R2           &   mpyf3  R2, R1, R0              &||    subf3  *+AR0(1), *+AR1(1), R2     &   mpyf3  R2, R0                  &||    subf3  *+AR0(1), *+AR1(1), R2     &   mpyf3  *+AR0(1), R1, R0        &||    subf3  *+AR1(1), R3, R2           &   mpyf3  *+AR0(1), R0            &||    subf3  *+AR1(1), R3, R2           &   mpyf3  *+AR0(1), R1, R0        &||    subf3  *+AR1(1), R2               &   mpyf3  *+AR0(1), R0            &||    subf3  *+AR1(1), R2               &   mpyf3  R0, *+AR0(1), R0        &||    subf3  *+AR1(1), R0, R2           &   mpyf3  R0, *+AR0(1), R0        &||    subf3  *+AR1(1), R2               &  subf_mpyf_M:                                                                          &   subf       R0, R1, R2              &||    mpyf      *+AR0(1), *+AR1(1), R0     &   subf       R0, R2                  &||    mpyf      *+AR0(1), *+AR1(1), R0     &   subf       R0, *+AR1(1), R2        &||    mpyf      *+AR0(1), R0, R0           &   subf       R0, *+AR1(1), R2        &||    mpyf      *+AR0(1), R0               &   subf       R0, *+AR1(1), R2        &||    mpyf      R0, *+AR0(1), R0           &   subf       *+AR0(1), *+AR1(1), R2  &||    mpyf      R2, R1, R0                 &   subf       *+AR0(1), *+AR1(1), R2  &||    mpyf      R2, R0                     &   subf       *+AR1(1), R3, R2        &||    mpyf      *+AR0(1), R1, R0           &   subf       *+AR1(1), R3, R2        &||    mpyf      *+AR0(1), R0               &   subf       *+AR1(1), R2            &||    mpyf      *+AR0(1), R1, R0           &   subf       *+AR1(1), R2            &||    mpyf      *+AR0(1), R0               &   subf       *+AR1(1), R0, R2        &||    mpyf      R0, *+AR0(1), R0           &   subf       *+AR1(1), R2            &||    mpyf      R0, *+AR0(1), R0           &  subf3_mpyf3_M:                                                                        &   subf3  R0, R1, R2              &||    mpyf3  *+AR0(1), *+AR1(1), R0     &   subf3  R0, R2                  &||    mpyf3  *+AR0(1), *+AR1(1), R0     &   subf3  R0, *+AR1(1), R2        &||    mpyf3  *+AR0(1), R0, R0           &   subf3  R0, *+AR1(1), R2        &||    mpyf3  *+AR0(1), R0               &   subf3  R0, *+AR1(1), R2        &||    mpyf3  R0, *+AR0(1), R0           &   subf3  *+AR0(1), *+AR1(1), R2  &||    mpyf3  R2, R1, R0                 &   subf3  *+AR0(1), *+AR1(1), R2  &||    mpyf3  R2, R0                     &   subf3  *+AR1(1), R3, R2        &||    mpyf3  *+AR0(1), R1, R0           &   subf3  *+AR1(1), R3, R2        &||    mpyf3  *+AR0(1), R0               &   subf3  *+AR1(1), R2            &||    mpyf3  *+AR0(1), R1, R0           &   subf3  *+AR1(1), R2            &||    mpyf3  *+AR0(1), R0               &   subf3  *+AR1(1), R0, R2        &||    mpyf3  R0, *+AR0(1), R0           &   subf3  *+AR1(1), R2            &||    mpyf3  R0, *+AR0(1), R0           &  subf_mpyf3_M:                                                                         &   subf       R0, R1, R2              &||    mpyf3  *+AR0(1), *+AR1(1), R0     &   subf       R0, R2                  &||    mpyf3  *+AR0(1), *+AR1(1), R0     &   subf       R0, *+AR1(1), R2        &||    mpyf3  *+AR0(1), R0, R0           &   subf       R0, *+AR1(1), R2        &||    mpyf3  *+AR0(1), R0               &   subf       R0, *+AR1(1), R2        &||    mpyf3  R0, *+AR0(1), R0           &   subf       *+AR0(1), *+AR1(1), R2  &||    mpyf3  R2, R1, R0                 &   subf       *+AR0(1), *+AR1(1), R2  &||    mpyf3  R2, R0                     &   subf       *+AR1(1), R3, R2        &||    mpyf3  *+AR0(1), R1, R0           &   subf       *+AR1(1), R3, R2        &||    mpyf3  *+AR0(1), R0               &   subf       *+AR1(1), R2            &||    mpyf3  *+AR0(1), R1, R0           &   subf       *+AR1(1), R2            &||    mpyf3  *+AR0(1), R0               &   subf       *+AR1(1), R0, R2        &||    mpyf3  R0, *+AR0(1), R0           &   subf       *+AR1(1), R2            &||    mpyf3  R0, *+AR0(1), R0           &  subf3_mpyf_M:                                                                         &   subf3  R0, R1, R2              &||    mpyf      *+AR0(1), *+AR1(1), R0     &   subf3  R0, R2                  &||    mpyf      *+AR0(1), *+AR1(1), R0     &   subf3  R0, *+AR1(1), R2        &||    mpyf      *+AR0(1), R0, R0           &   subf3  R0, *+AR1(1), R2        &||    mpyf      *+AR0(1), R0               &   subf3  R0, *+AR1(1), R2        &||    mpyf      R0, *+AR0(1), R0           &   subf3  *+AR0(1), *+AR1(1), R2  &||    mpyf      R2, R1, R0                 &   subf3  *+AR0(1), *+AR1(1), R2  &||    mpyf      R2, R0                     &   subf3  *+AR1(1), R3, R2        &||    mpyf      *+AR0(1), R1, R0           &   subf3  *+AR1(1), R3, R2        &||    mpyf      *+AR0(1), R0               &   subf3  *+AR1(1), R2            &||    mpyf      *+AR0(1), R1, R0           &   subf3  *+AR1(1), R2            &||    mpyf      *+AR0(1), R0               &   subf3  *+AR1(1), R0, R2        &||    mpyf      R0, *+AR0(1), R0           &   subf3  *+AR1(1), R2            &||    mpyf      R0, *+AR0(1), R0           & 
              mpyi_A:                         &   mpyi    AR1, AR0          &   mpyi    AR0               &   mpyi    @start, AR0       &   mpyi    *+AR0(5), AR0     &   mpyi    -5, AR0 
              mpyi_TC:                                       &   mpyi       AR2, AR1, AR0               &   mpyi       AR1, AR0                    &   mpyi       AR1, *+AR0(1), AR0          &   mpyi       *+AR0(1), AR1, AR0          &   mpyi       *+AR0(1), AR0               &   mpyi       *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   mpyi       5, AR1, AR0                 &   mpyi       5, AR0                      &   mpyi       AR1, -5, AR0                &   mpyi       *+AR0(5), AR1, AR0          &   mpyi       *+AR0(5), AR0               &   mpyi       AR1, *+AR0(5), AR0          &   mpyi       5, *+AR0(5), AR0            &   mpyi       *+AR0(5), -5, AR0           &   mpyi       *+AR0(5), *+AR1(5), AR0     & .endif                                         &  mpyi3_TC:                                      &   mpyi3  AR2, AR1, AR0               &   mpyi3  AR1, AR0                    &   mpyi3  AR1, *+AR0(1), AR0          &   mpyi3  *+AR0(1), AR1, AR0          &   mpyi3  *+AR0(1), AR0               &   mpyi3  *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   mpyi3  -5, AR1, AR0                &   mpyi3  -5, AR0                     &   mpyi3  AR1, -5, AR0                &   mpyi3  *+AR0(5), AR1, AR0          &   mpyi3  *+AR0(5), AR0               &   mpyi3  AR1, *+AR0(5), AR0          &   mpyi3  -5, *+AR0(5), AR0           &   mpyi3  *+AR0(5), -5, AR0           &   mpyi3  *+AR0(5), *+AR1(5), AR0     & .endif 
              mpyi_addi_M:                                                                          &   mpyi      *+AR0(1), *+AR1(1), R0  &||    addi       R0, R1, R2                 &   mpyi      *+AR0(1), *+AR1(1), R0  &||    addi       R0, R2                     &   mpyi      *+AR0(1), R0, R0        &||    addi       R0, *+AR1(1), R2           &   mpyi      *+AR0(1), R0            &||    addi       R0, *+AR1(1), R2           &   mpyi      R0, *+AR0(1), R0        &||    addi       R0, *+AR1(1), R2           &   mpyi      R2, R1, R0              &||    addi       *+AR0(1), *+AR1(1), R2     &   mpyi      R2, R0                  &||    addi       *+AR0(1), *+AR1(1), R2     &   mpyi      *+AR0(1), R1, R0        &||    addi       *+AR1(1), R3, R2           &   mpyi      *+AR0(1), R0            &||    addi       *+AR1(1), R3, R2           &   mpyi      *+AR0(1), R1, R0        &||    addi       *+AR1(1), R2               &   mpyi      *+AR0(1), R0            &||    addi       *+AR1(1), R2               &   mpyi      R0, *+AR0(1), R0        &||    addi       *+AR1(1), R0, R2           &   mpyi      R0, *+AR0(1), R0        &||    addi       *+AR1(1), R2               &  mpyi3_addi_M:                                                                         &   mpyi3  *+AR0(1), *+AR1(1), R0  &||    addi       R0, R1, R2                 &   mpyi3  *+AR0(1), *+AR1(1), R0  &||    addi       R0, R2                     &   mpyi3  *+AR0(1), R0, R0        &||    addi       R0, *+AR1(1), R2           &   mpyi3  *+AR0(1), R0            &||    addi       R0, *+AR1(1), R2           &   mpyi3  R0, *+AR0(1), R0        &||    addi       R0, *+AR1(1), R2           &   mpyi3  R2, R1, R0              &||    addi       *+AR0(1), *+AR1(1), R2     &   mpyi3  R2, R0                  &||    addi       *+AR0(1), *+AR1(1), R2     &   mpyi3  *+AR0(1), R1, R0        &||    addi       *+AR1(1), R3, R2           &   mpyi3  *+AR0(1), R0            &||    addi       *+AR1(1), R3, R2           &   mpyi3  *+AR0(1), R1, R0        &||    addi       *+AR1(1), R2               &   mpyi3  *+AR0(1), R0            &||    addi       *+AR1(1), R2               &   mpyi3  R0, *+AR0(1), R0        &||    addi       *+AR1(1), R0, R2           &   mpyi3  R0, *+AR0(1), R0        &||    addi       *+AR1(1), R2               &  mpyi_addi3_M:                                                                         &   mpyi      *+AR0(1), *+AR1(1), R0  &||    addi3  R0, R1, R2                 &   mpyi      *+AR0(1), *+AR1(1), R0  &||    addi3  R0, R2                     &   mpyi      *+AR0(1), R0, R0        &||    addi3  R0, *+AR1(1), R2           &   mpyi      *+AR0(1), R0            &||    addi3  R0, *+AR1(1), R2           &   mpyi      R0, *+AR0(1), R0        &||    addi3  R0, *+AR1(1), R2           &   mpyi      R2, R1, R0              &||    addi3  *+AR0(1), *+AR1(1), R2     &   mpyi      R2, R0                  &||    addi3  *+AR0(1), *+AR1(1), R2     &   mpyi      *+AR0(1), R1, R0        &||    addi3  *+AR1(1), R3, R2           &   mpyi      *+AR0(1), R0            &||    addi3  *+AR1(1), R3, R2           &   mpyi      *+AR0(1), R1, R0        &||    addi3  *+AR1(1), R2               &   mpyi      *+AR0(1), R0            &||    addi3  *+AR1(1), R2               &   mpyi      R0, *+AR0(1), R0        &||    addi3  *+AR1(1), R0, R2           &   mpyi      R0, *+AR0(1), R0        &||    addi3  *+AR1(1), R2               &  mpyi3_addi3_M:                                                                        &   mpyi3  *+AR0(1), *+AR1(1), R0  &||    addi3  R0, R1, R2                 &   mpyi3  *+AR0(1), *+AR1(1), R0  &||    addi3  R0, R2                     &   mpyi3  *+AR0(1), R0, R0        &||    addi3  R0, *+AR1(1), R2           &   mpyi3  *+AR0(1), R0            &||    addi3  R0, *+AR1(1), R2           &   mpyi3  R0, *+AR0(1), R0        &||    addi3  R0, *+AR1(1), R2           &   mpyi3  R2, R1, R0              &||    addi3  *+AR0(1), *+AR1(1), R2     &   mpyi3  R2, R0                  &||    addi3  *+AR0(1), *+AR1(1), R2     &   mpyi3  *+AR0(1), R1, R0        &||    addi3  *+AR1(1), R3, R2           &   mpyi3  *+AR0(1), R0            &||    addi3  *+AR1(1), R3, R2           &   mpyi3  *+AR0(1), R1, R0        &||    addi3  *+AR1(1), R2               &   mpyi3  *+AR0(1), R0            &||    addi3  *+AR1(1), R2               &   mpyi3  R0, *+AR0(1), R0        &||    addi3  *+AR1(1), R0, R2           &   mpyi3  R0, *+AR0(1), R0        &||    addi3  *+AR1(1), R2               &  addi_mpyi_M:                                                                          &   addi       R0, R1, R2              &||    mpyi      *+AR0(1), *+AR1(1), R0     &   addi       R0, R2                  &||    mpyi      *+AR0(1), *+AR1(1), R0     &   addi       R0, *+AR1(1), R2        &||    mpyi      *+AR0(1), R0, R0           &   addi       R0, *+AR1(1), R2        &||    mpyi      *+AR0(1), R0               &   addi       R0, *+AR1(1), R2        &||    mpyi      R0, *+AR0(1), R0           &   addi       *+AR0(1), *+AR1(1), R2  &||    mpyi      R2, R1, R0                 &   addi       *+AR0(1), *+AR1(1), R2  &||    mpyi      R2, R0                     &   addi       *+AR1(1), R3, R2        &||    mpyi      *+AR0(1), R1, R0           &   addi       *+AR1(1), R3, R2        &||    mpyi      *+AR0(1), R0               &   addi       *+AR1(1), R2            &||    mpyi      *+AR0(1), R1, R0           &   addi       *+AR1(1), R2            &||    mpyi      *+AR0(1), R0               &   addi       *+AR1(1), R0, R2        &||    mpyi      R0, *+AR0(1), R0           &   addi       *+AR1(1), R2            &||    mpyi      R0, *+AR0(1), R0           &  addi3_mpyi3_M:                                                                        &   addi3  R0, R1, R2              &||    mpyi3  *+AR0(1), *+AR1(1), R0     &   addi3  R0, R2                  &||    mpyi3  *+AR0(1), *+AR1(1), R0     &   addi3  R0, *+AR1(1), R2        &||    mpyi3  *+AR0(1), R0, R0           &   addi3  R0, *+AR1(1), R2        &||    mpyi3  *+AR0(1), R0               &   addi3  R0, *+AR1(1), R2        &||    mpyi3  R0, *+AR0(1), R0           &   addi3  *+AR0(1), *+AR1(1), R2  &||    mpyi3  R2, R1, R0                 &   addi3  *+AR0(1), *+AR1(1), R2  &||    mpyi3  R2, R0                     &   addi3  *+AR1(1), R3, R2        &||    mpyi3  *+AR0(1), R1, R0           &   addi3  *+AR1(1), R3, R2        &||    mpyi3  *+AR0(1), R0               &   addi3  *+AR1(1), R2            &||    mpyi3  *+AR0(1), R1, R0           &   addi3  *+AR1(1), R2            &||    mpyi3  *+AR0(1), R0               &   addi3  *+AR1(1), R0, R2        &||    mpyi3  R0, *+AR0(1), R0           &   addi3  *+AR1(1), R2            &||    mpyi3  R0, *+AR0(1), R0           &  addi_mpyi3_M:                                                                         &   addi       R0, R1, R2              &||    mpyi3  *+AR0(1), *+AR1(1), R0     &   addi       R0, R2                  &||    mpyi3  *+AR0(1), *+AR1(1), R0     &   addi       R0, *+AR1(1), R2        &||    mpyi3  *+AR0(1), R0, R0           &   addi       R0, *+AR1(1), R2        &||    mpyi3  *+AR0(1), R0               &   addi       R0, *+AR1(1), R2        &||    mpyi3  R0, *+AR0(1), R0           &   addi       *+AR0(1), *+AR1(1), R2  &||    mpyi3  R2, R1, R0                 &   addi       *+AR0(1), *+AR1(1), R2  &||    mpyi3  R2, R0                     &   addi       *+AR1(1), R3, R2        &||    mpyi3  *+AR0(1), R1, R0           &   addi       *+AR1(1), R3, R2        &||    mpyi3  *+AR0(1), R0               &   addi       *+AR1(1), R2            &||    mpyi3  *+AR0(1), R1, R0           &   addi       *+AR1(1), R2            &||    mpyi3  *+AR0(1), R0               &   addi       *+AR1(1), R0, R2        &||    mpyi3  R0, *+AR0(1), R0           &   addi       *+AR1(1), R2            &||    mpyi3  R0, *+AR0(1), R0           &  addi3_mpyi_M:                                                                         &   addi3  R0, R1, R2              &||    mpyi      *+AR0(1), *+AR1(1), R0     &   addi3  R0, R2                  &||    mpyi      *+AR0(1), *+AR1(1), R0     &   addi3  R0, *+AR1(1), R2        &||    mpyi      *+AR0(1), R0, R0           &   addi3  R0, *+AR1(1), R2        &||    mpyi      *+AR0(1), R0               &   addi3  R0, *+AR1(1), R2        &||    mpyi      R0, *+AR0(1), R0           &   addi3  *+AR0(1), *+AR1(1), R2  &||    mpyi      R2, R1, R0                 &   addi3  *+AR0(1), *+AR1(1), R2  &||    mpyi      R2, R0                     &   addi3  *+AR1(1), R3, R2        &||    mpyi      *+AR0(1), R1, R0           &   addi3  *+AR1(1), R3, R2        &||    mpyi      *+AR0(1), R0               &   addi3  *+AR1(1), R2            &||    mpyi      *+AR0(1), R1, R0           &   addi3  *+AR1(1), R2            &||    mpyi      *+AR0(1), R0               &   addi3  *+AR1(1), R0, R2        &||    mpyi      R0, *+AR0(1), R0           &   addi3  *+AR1(1), R2            &||    mpyi      R0, *+AR0(1), R0           & 
              mpyi_sti_QC:                                                           &   mpyi      *+AR0(1), R1, R0  &||    sti       R1, *+AR1(1)         &   mpyi      *+AR0(1), R0      &||    sti       R1, *+AR1(1)         &   mpyi      R0, *+AR0(1), R0  &||    sti       R1, *+AR1(1)         &   sti       R1, *+AR1(1)      &||    mpyi      *+AR0(1), R1, R0     &   sti       R1, *+AR1(1)      &||    mpyi      *+AR0(1), R0         &   sti       R1, *+AR1(1)      &||    mpyi      R0, *+AR0(1), R0     &  mpyi3_sti_QC:                                                          &   mpyi3  *+AR0(1), R1, R0  &||    sti       R1, *+AR1(1)         &   mpyi3  *+AR0(1), R0      &||    sti       R1, *+AR1(1)         &   mpyi3  R0, *+AR0(1), R0  &||    sti       R1, *+AR1(1)         &   sti       R1, *+AR1(1)      &||    mpyi3  *+AR0(1), R1, R0     &   sti       R1, *+AR1(1)      &||    mpyi3  *+AR0(1), R0         &   sti       R1, *+AR1(1)      &||    mpyi3  R0, *+AR0(1), R0 
              mpyi_subi_M:                                                                          &   mpyi      *+AR0(1), *+AR1(1), R0  &||    subi       R0, R1, R2                 &   mpyi      *+AR0(1), *+AR1(1), R0  &||    subi       R0, R2                     &   mpyi      *+AR0(1), R0, R0        &||    subi       R0, *+AR1(1), R2           &   mpyi      *+AR0(1), R0            &||    subi       R0, *+AR1(1), R2           &   mpyi      R0, *+AR0(1), R0        &||    subi       R0, *+AR1(1), R2           &   mpyi      R2, R1, R0              &||    subi       *+AR0(1), *+AR1(1), R2     &   mpyi      R2, R0                  &||    subi       *+AR0(1), *+AR1(1), R2     &   mpyi      *+AR0(1), R1, R0        &||    subi       *+AR1(1), R3, R2           &   mpyi      *+AR0(1), R0            &||    subi       *+AR1(1), R3, R2           &   mpyi      *+AR0(1), R1, R0        &||    subi       *+AR1(1), R2               &   mpyi      *+AR0(1), R0            &||    subi       *+AR1(1), R2               &   mpyi      R0, *+AR0(1), R0        &||    subi       *+AR1(1), R0, R2           &   mpyi      R0, *+AR0(1), R0        &||    subi       *+AR1(1), R2               &  mpyi3_subi_M:                                                                         &   mpyi3  *+AR0(1), *+AR1(1), R0  &||    subi       R0, R1, R2                 &   mpyi3  *+AR0(1), *+AR1(1), R0  &||    subi       R0, R2                     &   mpyi3  *+AR0(1), R0, R0        &||    subi       R0, *+AR1(1), R2           &   mpyi3  *+AR0(1), R0            &||    subi       R0, *+AR1(1), R2           &   mpyi3  R0, *+AR0(1), R0        &||    subi       R0, *+AR1(1), R2           &   mpyi3  R2, R1, R0              &||    subi       *+AR0(1), *+AR1(1), R2     &   mpyi3  R2, R0                  &||    subi       *+AR0(1), *+AR1(1), R2     &   mpyi3  *+AR0(1), R1, R0        &||    subi       *+AR1(1), R3, R2           &   mpyi3  *+AR0(1), R0            &||    subi       *+AR1(1), R3, R2           &   mpyi3  *+AR0(1), R1, R0        &||    subi       *+AR1(1), R2               &   mpyi3  *+AR0(1), R0            &||    subi       *+AR1(1), R2               &   mpyi3  R0, *+AR0(1), R0        &||    subi       *+AR1(1), R0, R2           &   mpyi3  R0, *+AR0(1), R0        &||    subi       *+AR1(1), R2               &  mpyi_subi3_M:                                                                         &   mpyi      *+AR0(1), *+AR1(1), R0  &||    subi3  R0, R1, R2                 &   mpyi      *+AR0(1), *+AR1(1), R0  &||    subi3  R0, R2                     &   mpyi      *+AR0(1), R0, R0        &||    subi3  R0, *+AR1(1), R2           &   mpyi      *+AR0(1), R0            &||    subi3  R0, *+AR1(1), R2           &   mpyi      R0, *+AR0(1), R0        &||    subi3  R0, *+AR1(1), R2           &   mpyi      R2, R1, R0              &||    subi3  *+AR0(1), *+AR1(1), R2     &   mpyi      R2, R0                  &||    subi3  *+AR0(1), *+AR1(1), R2     &   mpyi      *+AR0(1), R1, R0        &||    subi3  *+AR1(1), R3, R2           &   mpyi      *+AR0(1), R0            &||    subi3  *+AR1(1), R3, R2           &   mpyi      *+AR0(1), R1, R0        &||    subi3  *+AR1(1), R2               &   mpyi      *+AR0(1), R0            &||    subi3  *+AR1(1), R2               &   mpyi      R0, *+AR0(1), R0        &||    subi3  *+AR1(1), R0, R2           &   mpyi      R0, *+AR0(1), R0        &||    subi3  *+AR1(1), R2               &  mpyi3_subi3_M:                                                                        &   mpyi3  *+AR0(1), *+AR1(1), R0  &||    subi3  R0, R1, R2                 &   mpyi3  *+AR0(1), *+AR1(1), R0  &||    subi3  R0, R2                     &   mpyi3  *+AR0(1), R0, R0        &||    subi3  R0, *+AR1(1), R2           &   mpyi3  *+AR0(1), R0            &||    subi3  R0, *+AR1(1), R2           &   mpyi3  R0, *+AR0(1), R0        &||    subi3  R0, *+AR1(1), R2           &   mpyi3  R2, R1, R0              &||    subi3  *+AR0(1), *+AR1(1), R2     &   mpyi3  R2, R0                  &||    subi3  *+AR0(1), *+AR1(1), R2     &   mpyi3  *+AR0(1), R1, R0        &||    subi3  *+AR1(1), R3, R2           &   mpyi3  *+AR0(1), R0            &||    subi3  *+AR1(1), R3, R2           &   mpyi3  *+AR0(1), R1, R0        &||    subi3  *+AR1(1), R2               &   mpyi3  *+AR0(1), R0            &||    subi3  *+AR1(1), R2               &   mpyi3  R0, *+AR0(1), R0        &||    subi3  *+AR1(1), R0, R2           &   mpyi3  R0, *+AR0(1), R0        &||    subi3  *+AR1(1), R2               &  subi_mpyi_M:                                                                          &   subi       R0, R1, R2              &||    mpyi      *+AR0(1), *+AR1(1), R0     &   subi       R0, R2                  &||    mpyi      *+AR0(1), *+AR1(1), R0     &   subi       R0, *+AR1(1), R2        &||    mpyi      *+AR0(1), R0, R0           &   subi       R0, *+AR1(1), R2        &||    mpyi      *+AR0(1), R0               &   subi       R0, *+AR1(1), R2        &||    mpyi      R0, *+AR0(1), R0           &   subi       *+AR0(1), *+AR1(1), R2  &||    mpyi      R2, R1, R0                 &   subi       *+AR0(1), *+AR1(1), R2  &||    mpyi      R2, R0                     &   subi       *+AR1(1), R3, R2        &||    mpyi      *+AR0(1), R1, R0           &   subi       *+AR1(1), R3, R2        &||    mpyi      *+AR0(1), R0               &   subi       *+AR1(1), R2            &||    mpyi      *+AR0(1), R1, R0           &   subi       *+AR1(1), R2            &||    mpyi      *+AR0(1), R0               &   subi       *+AR1(1), R0, R2        &||    mpyi      R0, *+AR0(1), R0           &   subi       *+AR1(1), R2            &||    mpyi      R0, *+AR0(1), R0           &  subi3_mpyi3_M:                                                                        &   subi3  R0, R1, R2              &||    mpyi3  *+AR0(1), *+AR1(1), R0     &   subi3  R0, R2                  &||    mpyi3  *+AR0(1), *+AR1(1), R0     &   subi3  R0, *+AR1(1), R2        &||    mpyi3  *+AR0(1), R0, R0           &   subi3  R0, *+AR1(1), R2        &||    mpyi3  *+AR0(1), R0               &   subi3  R0, *+AR1(1), R2        &||    mpyi3  R0, *+AR0(1), R0           &   subi3  *+AR0(1), *+AR1(1), R2  &||    mpyi3  R2, R1, R0                 &   subi3  *+AR0(1), *+AR1(1), R2  &||    mpyi3  R2, R0                     &   subi3  *+AR1(1), R3, R2        &||    mpyi3  *+AR0(1), R1, R0           &   subi3  *+AR1(1), R3, R2        &||    mpyi3  *+AR0(1), R0               &   subi3  *+AR1(1), R2            &||    mpyi3  *+AR0(1), R1, R0           &   subi3  *+AR1(1), R2            &||    mpyi3  *+AR0(1), R0               &   subi3  *+AR1(1), R0, R2        &||    mpyi3  R0, *+AR0(1), R0           &   subi3  *+AR1(1), R2            &||    mpyi3  R0, *+AR0(1), R0           &  subi_mpyi3_M:                                                                         &   subi       R0, R1, R2              &||    mpyi3  *+AR0(1), *+AR1(1), R0     &   subi       R0, R2                  &||    mpyi3  *+AR0(1), *+AR1(1), R0     &   subi       R0, *+AR1(1), R2        &||    mpyi3  *+AR0(1), R0, R0           &   subi       R0, *+AR1(1), R2        &||    mpyi3  *+AR0(1), R0               &   subi       R0, *+AR1(1), R2        &||    mpyi3  R0, *+AR0(1), R0           &   subi       *+AR0(1), *+AR1(1), R2  &||    mpyi3  R2, R1, R0                 &   subi       *+AR0(1), *+AR1(1), R2  &||    mpyi3  R2, R0                     &   subi       *+AR1(1), R3, R2        &||    mpyi3  *+AR0(1), R1, R0           &   subi       *+AR1(1), R3, R2        &||    mpyi3  *+AR0(1), R0               &   subi       *+AR1(1), R2            &||    mpyi3  *+AR0(1), R1, R0           &   subi       *+AR1(1), R2            &||    mpyi3  *+AR0(1), R0               &   subi       *+AR1(1), R0, R2        &||    mpyi3  R0, *+AR0(1), R0           &   subi       *+AR1(1), R2            &||    mpyi3  R0, *+AR0(1), R0           &  subi3_mpyi_M:                                                                         &   subi3  R0, R1, R2              &||    mpyi      *+AR0(1), *+AR1(1), R0     &   subi3  R0, R2                  &||    mpyi      *+AR0(1), *+AR1(1), R0     &   subi3  R0, *+AR1(1), R2        &||    mpyi      *+AR0(1), R0, R0           &   subi3  R0, *+AR1(1), R2        &||    mpyi      *+AR0(1), R0               &   subi3  R0, *+AR1(1), R2        &||    mpyi      R0, *+AR0(1), R0           &   subi3  *+AR0(1), *+AR1(1), R2  &||    mpyi      R2, R1, R0                 &   subi3  *+AR0(1), *+AR1(1), R2  &||    mpyi      R2, R0                     &   subi3  *+AR1(1), R3, R2        &||    mpyi      *+AR0(1), R1, R0           &   subi3  *+AR1(1), R3, R2        &||    mpyi      *+AR0(1), R0               &   subi3  *+AR1(1), R2            &||    mpyi      *+AR0(1), R1, R0           &   subi3  *+AR1(1), R2            &||    mpyi      *+AR0(1), R0               &   subi3  *+AR1(1), R0, R2        &||    mpyi      R0, *+AR0(1), R0           &   subi3  *+AR1(1), R2            &||    mpyi      R0, *+AR0(1), R0           & 
              negb_A:                         &   negb    AR1, AR0          &   negb    AR0               &   negb    @start, AR0       &   negb    *+AR0(5), AR0     &   negb    -5, AR0 
              negf_B:                         &   negf    R1, R0            &   negf    R0                &   negf    @start, R0        &   negf    *+AR0(5), R0      &   negf    3.5, R0 
              negf_stf_P:                                            &   negf   *+AR0(1), R0  &||    stf    R1, *+AR1(1)     &   stf    R1, *+AR1(1)  &||    negf   *+AR0(1), R0 
              negi_A:                         &   negi    AR1, AR0          &   negi    AR0               &   negi    @start, AR0       &   negi    *+AR0(5), AR0     &   negi    -5, AR0 
              negi_sti_P:                                            &   negi   *+AR0(1), R0  &||    sti    R1, *+AR1(1)     &   sti    R1, *+AR1(1)  &||    negi   *+AR0(1), R0 
              nop_A2:                        &   nop    AR0                 &   nop    *+AR0(5)            &   nop   
              norm_B:                         &   norm    R1, R0            &   norm    R0                &   norm    @start, R0        &   norm    *+AR0(5), R0      &   norm    3.5, R0 
              not_AU:                        &   not    AR1, AR0          &   not    AR0               &   not    @start, AR0       &   not    *+AR0(5), AR0     &   not    5, AR0 
              not_sti_P:                                            &   not   *+AR0(1), R0  &||    sti    R1, *+AR1(1)     &   sti    R1, *+AR1(1)  &||    not   *+AR0(1), R0 
              or_AU:                        &   or    AR1, AR0          &   or    AR0               &   or    @start, AR0       &   or    *+AR0(5), AR0     &   or    5, AR0 
              or_TC:                                       &   or       AR2, AR1, AR0               &   or       AR1, AR0                    &   or       AR1, *+AR0(1), AR0          &   or       *+AR0(1), AR1, AR0          &   or       *+AR0(1), AR0               &   or       *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   or       5, AR1, AR0                 &   or       5, AR0                      &   or       AR1, -5, AR0                &   or       *+AR0(5), AR1, AR0          &   or       *+AR0(5), AR0               &   or       AR1, *+AR0(5), AR0          &   or       5, *+AR0(5), AR0            &   or       *+AR0(5), -5, AR0           &   or       *+AR0(5), *+AR1(5), AR0     & .endif                                         &  or3_TC:                                      &   or3  AR2, AR1, AR0               &   or3  AR1, AR0                    &   or3  AR1, *+AR0(1), AR0          &   or3  *+AR0(1), AR1, AR0          &   or3  *+AR0(1), AR0               &   or3  *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   or3  -5, AR1, AR0                &   or3  -5, AR0                     &   or3  AR1, -5, AR0                &   or3  *+AR0(5), AR1, AR0          &   or3  *+AR0(5), AR0               &   or3  AR1, *+AR0(5), AR0          &   or3  -5, *+AR0(5), AR0           &   or3  *+AR0(5), -5, AR0           &   or3  *+AR0(5), *+AR1(5), AR0     & .endif 
              or_sti_QC:                                                           &   or      *+AR0(1), R1, R0  &||    sti       R1, *+AR1(1)         &   or      *+AR0(1), R0      &||    sti       R1, *+AR1(1)         &   or      R0, *+AR0(1), R0  &||    sti       R1, *+AR1(1)         &   sti       R1, *+AR1(1)      &||    or      *+AR0(1), R1, R0     &   sti       R1, *+AR1(1)      &||    or      *+AR0(1), R0         &   sti       R1, *+AR1(1)      &||    or      R0, *+AR0(1), R0     &  or3_sti_QC:                                                          &   or3  *+AR0(1), R1, R0  &||    sti       R1, *+AR1(1)         &   or3  *+AR0(1), R0      &||    sti       R1, *+AR1(1)         &   or3  R0, *+AR0(1), R0  &||    sti       R1, *+AR1(1)         &   sti       R1, *+AR1(1)      &||    or3  *+AR0(1), R1, R0     &   sti       R1, *+AR1(1)      &||    or3  *+AR0(1), R0         &   sti       R1, *+AR1(1)      &||    or3  R0, *+AR0(1), R0 
              pop_R:            &   pop    AR0 
              popf_RF:            &   popf    F0 
              push_R:            &   push    AR0 
              pushf_RF:            &   pushf    F0 
reti_Z:     retiC
            reti
rets_Z:     retsC
            rets
              rnd_B:                         &   rnd    R1, R0            &   rnd    R0                &   rnd    @start, R0        &   rnd    *+AR0(5), R0      &   rnd    3.5, R0 
              rol_R:            &   rol    AR0 
              rolc_R:            &   rolc    AR0 
              ror_R:            &   ror    AR0 
              rorc_R:            &   rorc    AR0 
rptb_I2:    rptb    start
              rpts_A3:                        &   rpts    AR1                 &   rpts    @start              &   rpts    *+AR0(5)            &   rpts    5 
sigi_Z:     sigi
              stf_B7:                        &   stf    R0, @start        &   stf    R0, *+AR0(5) 
              stf_LS:                                                          &   stf       R0, *+AR0(1)  &||    stf       R1, *+AR1(1)     &   stf2  R0, *+AR0(1)  &||    stf1  R1, *+AR1(1)     &   stf1  R1, *+AR1(1)  &||    stf2  R0, *+AR0(1) 
              stfi_B7:                        &   stfi    R0, @start        &   stfi    R0, *+AR0(5) 
              sti_A7:                        &   sti    AR0, @start       &   sti    AR0, *+AR0(5) 
              sti_LS:                                                          &   sti       R0, *+AR0(1)  &||    sti       R1, *+AR1(1)     &   sti2  R0, *+AR0(1)  &||    sti1  R1, *+AR1(1)     &   sti1  R1, *+AR1(1)  &||    sti2  R0, *+AR0(1) 
              stii_A7:                        &   stii    AR0, @start       &   stii    AR0, *+AR0(5) 
              subb_A:                         &   subb    AR1, AR0          &   subb    AR0               &   subb    @start, AR0       &   subb    *+AR0(5), AR0     &   subb    -5, AR0 
              subb_T:                                        &   subb       AR2, AR1, AR0               &   subb       AR1, AR0                    &   subb       AR1, *+AR0(1), AR0          &   subb       *+AR0(1), AR1, AR0          &   subb       *+AR0(1), AR0               &   subb       *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   subb       5, AR1, AR0                 &   subb       5, AR0                      &   subb       *+AR0(5), AR1, AR0          &   subb       *+AR0(5), AR0               &   subb       5, *+AR0(5), AR0            &   subb       *+AR0(5), *+AR1(5), AR0     & .endif                                         &  subb3_T:                                       &   subb3  AR2, AR1, AR0               &   subb3  AR1, AR0                    &   subb3  AR1, *+AR0(1), AR0          &   subb3  *+AR0(1), AR1, AR0          &   subb3  *+AR0(1), AR0               &   subb3  *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   subb3  -5, AR1, AR0                &   subb3  -5, AR0                     &   subb3  *+AR0(5), AR1, AR0          &   subb3  *+AR0(5), AR0               &   subb3  -5, *+AR0(5), AR0           &   subb3  *+AR0(5), *+AR1(5), AR0     & .endif 
              subc_A:                         &   subc    AR1, AR0          &   subc    AR0               &   subc    @start, AR0       &   subc    *+AR0(5), AR0     &   subc    -5, AR0 
              subf_B:                         &   subf    R1, R0            &   subf    R0                &   subf    @start, R0        &   subf    *+AR0(5), R0      &   subf    3.5, R0 
              subf_S:                                       &   subf       R2, R1, R0                 &   subf       R1, R0                     &   subf       R1, *+AR0(1), R0           &   subf       *+AR0(1), R1, R0           &   subf       *+AR0(1), R0               &   subf       *+AR0(1), *+AR1(1), R0     & .ifdef TEST_C4X                               &   subf       *+AR0(5), R1, R0           &   subf       *+AR0(5), R0               &   subf       *+AR0(5), *+AR1(5), R0     & .endif                                        &  subf3_S:                                      &   subf3  R2, R1, R0                 &   subf3  R1, R0                     &   subf3  R1, *+AR0(1), R0           &   subf3  *+AR0(1), R1, R0           &   subf3  *+AR0(1), R0               &   subf3  *+AR0(1), *+AR1(1), R0     & .ifdef TEST_C4X                               &   subf3  *+AR0(5), R1, R0           &   subf3  *+AR0(5), R0               &   subf3  *+AR0(5), *+AR1(5), R0     & .endif 
              subf_stf_Q:                                                            &   subf      R0, *+AR0(1), R0  &||    stf       R1, *+AR1(1)         &   stf       R1, *+AR1(1)      &||    subf      R0, *+AR0(1), R0     &  subf3_stf_Q:                                                           &   subf3  R0, *+AR0(1), R0  &||    stf       R1, *+AR1(1)         &   stf       R1, *+AR1(1)      &||    subf3  R0, *+AR0(1), R0 
              subi_A:                         &   subi    AR1, AR0          &   subi    AR0               &   subi    @start, AR0       &   subi    *+AR0(5), AR0     &   subi    -5, AR0 
              subi_T:                                        &   subi       AR2, AR1, AR0               &   subi       AR1, AR0                    &   subi       AR1, *+AR0(1), AR0          &   subi       *+AR0(1), AR1, AR0          &   subi       *+AR0(1), AR0               &   subi       *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   subi       5, AR1, AR0                 &   subi       5, AR0                      &   subi       *+AR0(5), AR1, AR0          &   subi       *+AR0(5), AR0               &   subi       5, *+AR0(5), AR0            &   subi       *+AR0(5), *+AR1(5), AR0     & .endif                                         &  subi3_T:                                       &   subi3  AR2, AR1, AR0               &   subi3  AR1, AR0                    &   subi3  AR1, *+AR0(1), AR0          &   subi3  *+AR0(1), AR1, AR0          &   subi3  *+AR0(1), AR0               &   subi3  *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   subi3  -5, AR1, AR0                &   subi3  -5, AR0                     &   subi3  *+AR0(5), AR1, AR0          &   subi3  *+AR0(5), AR0               &   subi3  -5, *+AR0(5), AR0           &   subi3  *+AR0(5), *+AR1(5), AR0     & .endif 
              subi_sti_Q:                                                            &   subi      R0, *+AR0(1), R0  &||    sti       R1, *+AR1(1)         &   sti       R1, *+AR1(1)      &||    subi      R0, *+AR0(1), R0     &  subi3_sti_Q:                                                           &   subi3  R0, *+AR0(1), R0  &||    sti       R1, *+AR1(1)         &   sti       R1, *+AR1(1)      &||    subi3  R0, *+AR0(1), R0 
              subrb_A:                         &   subrb    AR1, AR0          &   subrb    AR0               &   subrb    @start, AR0       &   subrb    *+AR0(5), AR0     &   subrb    -5, AR0 
              subrf_B:                         &   subrf    R1, R0            &   subrf    R0                &   subrf    @start, R0        &   subrf    *+AR0(5), R0      &   subrf    3.5, R0 
              subri_A:                         &   subri    AR1, AR0          &   subri    AR0               &   subri    @start, AR0       &   subri    *+AR0(5), AR0     &   subri    -5, AR0 
swi_Z:      swi
trap_Z:     trapC   10
            trap    10
              tstb_AU:                        &   tstb    AR1, AR0          &   tstb    AR0               &   tstb    @start, AR0       &   tstb    *+AR0(5), AR0     &   tstb    5, AR0 
              tstb_T2C:                                    &   tstb       AR2, AR1                    &   tstb       AR1, *+AR0(1)               &   tstb       *+AR0(1), AR1               &   tstb       *+AR1(1), *+AR0(1)          & .ifdef   TEST_C4X                            &   tstb       5, AR1                      &   tstb       AR1, -5                     &   tstb       *+AR0(5), AR1               &   tstb       AR1, *+AR0(5)               &   tstb       5, *+AR0(5)                 &   tstb       *+AR0(5), -5                &   tstb       *+AR0(5), *+AR1(5)          & .endif                                       &  tstb3_T2C:                                   &   tstb3  AR2, AR1                    &   tstb3  AR1, *+AR0(1)               &   tstb3  *+AR0(1), AR1               &   tstb3  *+AR1(1), *+AR0(1)          & .ifdef   TEST_C4X                            &   tstb3  -5, AR1                     &   tstb3  AR1, -5                     &   tstb3  *+AR0(5), AR1               &   tstb3  AR1, *+AR0(5)               &   tstb3  -5, *+AR0(5)                &   tstb3  *+AR0(5), -5                &   tstb3  *+AR0(5), *+AR1(5)          & .endif 
              xor_AU:                        &   xor    AR1, AR0          &   xor    AR0               &   xor    @start, AR0       &   xor    *+AR0(5), AR0     &   xor    5, AR0 
              xor_TC:                                       &   xor       AR2, AR1, AR0               &   xor       AR1, AR0                    &   xor       AR1, *+AR0(1), AR0          &   xor       *+AR0(1), AR1, AR0          &   xor       *+AR0(1), AR0               &   xor       *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   xor       5, AR1, AR0                 &   xor       5, AR0                      &   xor       AR1, -5, AR0                &   xor       *+AR0(5), AR1, AR0          &   xor       *+AR0(5), AR0               &   xor       AR1, *+AR0(5), AR0          &   xor       5, *+AR0(5), AR0            &   xor       *+AR0(5), -5, AR0           &   xor       *+AR0(5), *+AR1(5), AR0     & .endif                                         &  xor3_TC:                                      &   xor3  AR2, AR1, AR0               &   xor3  AR1, AR0                    &   xor3  AR1, *+AR0(1), AR0          &   xor3  *+AR0(1), AR1, AR0          &   xor3  *+AR0(1), AR0               &   xor3  *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   xor3  -5, AR1, AR0                &   xor3  -5, AR0                     &   xor3  AR1, -5, AR0                &   xor3  *+AR0(5), AR1, AR0          &   xor3  *+AR0(5), AR0               &   xor3  AR1, *+AR0(5), AR0          &   xor3  -5, *+AR0(5), AR0           &   xor3  *+AR0(5), -5, AR0           &   xor3  *+AR0(5), *+AR1(5), AR0     & .endif 
              xor_sti_QC:                                                           &   xor      *+AR0(1), R1, R0  &||    sti       R1, *+AR1(1)         &   xor      *+AR0(1), R0      &||    sti       R1, *+AR1(1)         &   xor      R0, *+AR0(1), R0  &||    sti       R1, *+AR1(1)         &   sti       R1, *+AR1(1)      &||    xor      *+AR0(1), R1, R0     &   sti       R1, *+AR1(1)      &||    xor      *+AR0(1), R0         &   sti       R1, *+AR1(1)      &||    xor      R0, *+AR0(1), R0     &  xor3_sti_QC:                                                          &   xor3  *+AR0(1), R1, R0  &||    sti       R1, *+AR1(1)         &   xor3  *+AR0(1), R0      &||    sti       R1, *+AR1(1)         &   xor3  R0, *+AR0(1), R0  &||    sti       R1, *+AR1(1)         &   sti       R1, *+AR1(1)      &||    xor3  *+AR0(1), R1, R0     &   sti       R1, *+AR1(1)      &||    xor3  *+AR0(1), R0         &   sti       R1, *+AR1(1)      &||    xor3  R0, *+AR0(1), R0 
    
            .ifdef  TEST_C4X
              bCaf_J:                &   bCaf   R0         &   bCaf   start      &  baf_J:                &   baf    R0         &   baf    start 
              bCat_J:                &   bCat   R0         &   bCat   start      &  bat_J:                &   bat    R0         &   bat    start 
              frieee_B6:                        &   frieee    @start, R0        &   frieee    *+AR0(5), R0 
              frieee_stf_P:                                            &   frieee   *+AR0(1), R0  &||    stf    R1, *+AR1(1)     &   stf    R1, *+AR1(1)  &||    frieee   *+AR0(1), R0 
laj_I:      laj     start
laj_JS:     lajc    R0
            lajc    start
lat_Z:      latC    10
              lb0_A:                         &   lb0    AR1, AR0          &   lb0    AR0               &   lb0    @start, AR0       &   lb0    *+AR0(5), AR0     &   lb0    -5, AR0 
              lb1_A:                         &   lb1    AR1, AR0          &   lb1    AR0               &   lb1    @start, AR0       &   lb1    *+AR0(5), AR0     &   lb1    -5, AR0 
              lb2_A:                         &   lb2    AR1, AR0          &   lb2    AR0               &   lb2    @start, AR0       &   lb2    *+AR0(5), AR0     &   lb2    -5, AR0 
              lb3_A:                         &   lb3    AR1, AR0          &   lb3    AR0               &   lb3    @start, AR0       &   lb3    *+AR0(5), AR0     &   lb3    -5, AR0 
              lbu0_AU:                        &   lbu0    AR1, AR0          &   lbu0    AR0               &   lbu0    @start, AR0       &   lbu0    *+AR0(5), AR0     &   lbu0    5, AR0 
              lbu1_AU:                        &   lbu1    AR1, AR0          &   lbu1    AR0               &   lbu1    @start, AR0       &   lbu1    *+AR0(5), AR0     &   lbu1    5, AR0 
              lbu2_AU:                        &   lbu2    AR1, AR0          &   lbu2    AR0               &   lbu2    @start, AR0       &   lbu2    *+AR0(5), AR0     &   lbu2    5, AR0 
              lbu3_AU:                        &   lbu3    AR1, AR0          &   lbu3    AR0               &   lbu3    @start, AR0       &   lbu3    *+AR0(5), AR0     &   lbu3    5, AR0 
              lda_AY:                        &   lda    AR1, AR0          &   lda    @start, AR0       &   lda    *+AR0(5), AR0     &   lda    -5, AR0 
ldep_Z:     ldep    IVTP, AR0
ldhi_Z:     ldhi    35, R0
            ldhi    start, R0
ldpe_Z:     ldpe    AR0, IVTP
ldpk_Z:     ldpk    start
              lh0_A:                         &   lh0    AR1, AR0          &   lh0    AR0               &   lh0    @start, AR0       &   lh0    *+AR0(5), AR0     &   lh0    -5, AR0 
              lh1_A:                         &   lh1    AR1, AR0          &   lh1    AR0               &   lh1    @start, AR0       &   lh1    *+AR0(5), AR0     &   lh1    -5, AR0 
              lhu0_AU:                        &   lhu0    AR1, AR0          &   lhu0    AR0               &   lhu0    @start, AR0       &   lhu0    *+AR0(5), AR0     &   lhu0    5, AR0 
              lhu1_AU:                        &   lhu1    AR1, AR0          &   lhu1    AR0               &   lhu1    @start, AR0       &   lhu1    *+AR0(5), AR0     &   lhu1    5, AR0 
              lwl0_A:                         &   lwl0    AR1, AR0          &   lwl0    AR0               &   lwl0    @start, AR0       &   lwl0    *+AR0(5), AR0     &   lwl0    -5, AR0 
              lwl1_A:                         &   lwl1    AR1, AR0          &   lwl1    AR0               &   lwl1    @start, AR0       &   lwl1    *+AR0(5), AR0     &   lwl1    -5, AR0 
              lwl2_A:                         &   lwl2    AR1, AR0          &   lwl2    AR0               &   lwl2    @start, AR0       &   lwl2    *+AR0(5), AR0     &   lwl2    -5, AR0 
              lwl3_A:                         &   lwl3    AR1, AR0          &   lwl3    AR0               &   lwl3    @start, AR0       &   lwl3    *+AR0(5), AR0     &   lwl3    -5, AR0 
              lwr0_A:                         &   lwr0    AR1, AR0          &   lwr0    AR0               &   lwr0    @start, AR0       &   lwr0    *+AR0(5), AR0     &   lwr0    -5, AR0 
              lwr1_A:                         &   lwr1    AR1, AR0          &   lwr1    AR0               &   lwr1    @start, AR0       &   lwr1    *+AR0(5), AR0     &   lwr1    -5, AR0 
              lwr2_A:                         &   lwr2    AR1, AR0          &   lwr2    AR0               &   lwr2    @start, AR0       &   lwr2    *+AR0(5), AR0     &   lwr2    -5, AR0 
              lwr3_A:                         &   lwr3    AR1, AR0          &   lwr3    AR0               &   lwr3    @start, AR0       &   lwr3    *+AR0(5), AR0     &   lwr3    -5, AR0 
              mb0_A:                         &   mb0    AR1, AR0          &   mb0    AR0               &   mb0    @start, AR0       &   mb0    *+AR0(5), AR0     &   mb0    -5, AR0 
              mb1_A:                         &   mb1    AR1, AR0          &   mb1    AR0               &   mb1    @start, AR0       &   mb1    *+AR0(5), AR0     &   mb1    -5, AR0 
              mb2_A:                         &   mb2    AR1, AR0          &   mb2    AR0               &   mb2    @start, AR0       &   mb2    *+AR0(5), AR0     &   mb2    -5, AR0 
              mb3_A:                         &   mb3    AR1, AR0          &   mb3    AR0               &   mb3    @start, AR0       &   mb3    *+AR0(5), AR0     &   mb3    -5, AR0 
              mh0_A:                         &   mh0    AR1, AR0          &   mh0    AR0               &   mh0    @start, AR0       &   mh0    *+AR0(5), AR0     &   mh0    -5, AR0 
              mh1_A:                         &   mh1    AR1, AR0          &   mh1    AR0               &   mh1    @start, AR0       &   mh1    *+AR0(5), AR0     &   mh1    -5, AR0 
              mh2_A:                         &   mh2    AR1, AR0          &   mh2    AR0               &   mh2    @start, AR0       &   mh2    *+AR0(5), AR0     &   mh2    -5, AR0 
              mh3_A:                         &   mh3    AR1, AR0          &   mh3    AR0               &   mh3    @start, AR0       &   mh3    *+AR0(5), AR0     &   mh3    -5, AR0 
              mpyshi_A:                         &   mpyshi    AR1, AR0          &   mpyshi    AR0               &   mpyshi    @start, AR0       &   mpyshi    *+AR0(5), AR0     &   mpyshi    -5, AR0 
              mpyshi_TC:                                       &   mpyshi       AR2, AR1, AR0               &   mpyshi       AR1, AR0                    &   mpyshi       AR1, *+AR0(1), AR0          &   mpyshi       *+AR0(1), AR1, AR0          &   mpyshi       *+AR0(1), AR0               &   mpyshi       *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   mpyshi       5, AR1, AR0                 &   mpyshi       5, AR0                      &   mpyshi       AR1, -5, AR0                &   mpyshi       *+AR0(5), AR1, AR0          &   mpyshi       *+AR0(5), AR0               &   mpyshi       AR1, *+AR0(5), AR0          &   mpyshi       5, *+AR0(5), AR0            &   mpyshi       *+AR0(5), -5, AR0           &   mpyshi       *+AR0(5), *+AR1(5), AR0     & .endif                                         &  mpyshi3_TC:                                      &   mpyshi3  AR2, AR1, AR0               &   mpyshi3  AR1, AR0                    &   mpyshi3  AR1, *+AR0(1), AR0          &   mpyshi3  *+AR0(1), AR1, AR0          &   mpyshi3  *+AR0(1), AR0               &   mpyshi3  *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   mpyshi3  -5, AR1, AR0                &   mpyshi3  -5, AR0                     &   mpyshi3  AR1, -5, AR0                &   mpyshi3  *+AR0(5), AR1, AR0          &   mpyshi3  *+AR0(5), AR0               &   mpyshi3  AR1, *+AR0(5), AR0          &   mpyshi3  -5, *+AR0(5), AR0           &   mpyshi3  *+AR0(5), -5, AR0           &   mpyshi3  *+AR0(5), *+AR1(5), AR0     & .endif 
              mpyuhi_A:                         &   mpyuhi    AR1, AR0          &   mpyuhi    AR0               &   mpyuhi    @start, AR0       &   mpyuhi    *+AR0(5), AR0     &   mpyuhi    -5, AR0 
              mpyuhi_TC:                                       &   mpyuhi       AR2, AR1, AR0               &   mpyuhi       AR1, AR0                    &   mpyuhi       AR1, *+AR0(1), AR0          &   mpyuhi       *+AR0(1), AR1, AR0          &   mpyuhi       *+AR0(1), AR0               &   mpyuhi       *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   mpyuhi       5, AR1, AR0                 &   mpyuhi       5, AR0                      &   mpyuhi       AR1, -5, AR0                &   mpyuhi       *+AR0(5), AR1, AR0          &   mpyuhi       *+AR0(5), AR0               &   mpyuhi       AR1, *+AR0(5), AR0          &   mpyuhi       5, *+AR0(5), AR0            &   mpyuhi       *+AR0(5), -5, AR0           &   mpyuhi       *+AR0(5), *+AR1(5), AR0     & .endif                                         &  mpyuhi3_TC:                                      &   mpyuhi3  AR2, AR1, AR0               &   mpyuhi3  AR1, AR0                    &   mpyuhi3  AR1, *+AR0(1), AR0          &   mpyuhi3  *+AR0(1), AR1, AR0          &   mpyuhi3  *+AR0(1), AR0               &   mpyuhi3  *+AR1(1), *+AR0(1), AR0     & .ifdef   TEST_C4X                              &   mpyuhi3  -5, AR1, AR0                &   mpyuhi3  -5, AR0                     &   mpyuhi3  AR1, -5, AR0                &   mpyuhi3  *+AR0(5), AR1, AR0          &   mpyuhi3  *+AR0(5), AR0               &   mpyuhi3  AR1, *+AR0(5), AR0          &   mpyuhi3  -5, *+AR0(5), AR0           &   mpyuhi3  *+AR0(5), -5, AR0           &   mpyuhi3  *+AR0(5), *+AR1(5), AR0     & .endif 
              rcpf_BA:                        &   rcpf    AR1, R0           &   rcpf    R0                &   rcpf    @start, R0        &   rcpf    *+AR0(5), R0      &   rcpf    3.5, R0 
retid_Z:    retiCd
            retid
rptb2_I2:   rptb    AR0
rptbd_I2:   rptbd  start
            rptbd   AR0
              rsqrf_B:                         &   rsqrf    R1, R0            &   rsqrf    R0                &   rsqrf    @start, R0        &   rsqrf    *+AR0(5), R0      &   rsqrf    3.5, R0 
              sigi_A6:                        &   sigi    @start, AR0       &   sigi    *+AR0(5), AR0 
sti2_A7:    sti     -5, @start
            sti     -5, *+AR0(5)
stik_Z:     stik    -5, @start
            stik    -5, *+AR0(5)
              toieee_B:                         &   toieee    R1, R0            &   toieee    R0                &   toieee    @start, R0        &   toieee    *+AR0(5), R0      &   toieee    3.5, R0 
              toieee_stf_P:                                            &   toieee   *+AR0(1), R0  &||    stf    R1, *+AR1(1)     &   stf    R1, *+AR1(1)  &||    toieee   *+AR0(1), R0 
            .endif
            .end
        
