@c Copyright (C) 2017 Free Software Foundation, Inc.
@c Contributed by MIPS Tech LLC
@c Written by Faraz Shahbazker <faraz.shahbazker@mips.com>
@c This is part of the GAS manual.
@c For copying conditions, see the file as.texinfo.
@page

@node nanoMIPS Macros
@section High-level Assembly Macros

MIPS assemblers have traditionally provided a wider range of
instructions than the MIPS architecture itself.  These extra
instructions are usually referred to as ``macro'' instructions
@footnote{The term ``macro'' is somewhat overloaded here, since
these macros have no relation to those defined by @code{.macro},
@pxref{Macro,, @code{.macro}}.}.  nanoMIPS assembler continues
support for many traditionally supported instructions.

Some nanoMIPS macro instructions extend an underlying architectural
instruction while others are entirely new.  An example of the former
type is @code{and}, which allows the third operand to be either a
register or an arbitrary immediate value.  Examples of the latter type
include @code{bgt}, which branches to the third operand when the
first operand is greater than the second operand.

One of the most common extensions provided by macros is to expand memory
offsets to the full address range (32 or 64 bits) and to allow symbolic
offsets such as @samp{my_data + 4} to be used in place of integer
constants.  For example, the architectural instruction @code{lbu} allows
only an unsigned 12-bit offset, whereas the macro @code{lbu} allows code
such as @samp{lbu $a0,array+32769}.  The implementation of these symbolic
offsets depends on several factors, such as whether the assembler is
generating SVR4-style PIC (selected by @option{-mpic}, @pxref{nanoMIPS
Options,, Assembler options}), the size of symbols,
and the small data limit (@pxref{nanoMIPS Small Data,, Controlling the
use of small data accesses}).

@table @code
@item gprel_p(label)
TRUE if label can be referenced relative to $gp
@item local_p(label)
TRUE if label is locally scoped
@end table

@table @code
@item @r{Instruction}
@multitable @columnfractions 0.3 0.4 0.3
@item Condition
@tab Expansion
@tab Remarks
@end multitable

@item abs rd,rt
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
rd <> rt
@end verbatim

@tab
@verbatim
move rd,rt
bgezc rt,0f
subu rd,0,rt
0:
@end verbatim
@tab

@item
@verbatim
rd == rt
@end verbatim

@tab
@verbatim
bgezc rd,0f
subu rd,0,rd
0:
@end verbatim

@tab
@end multitable
@item la rd,ofst(rs)
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
-4095 <= ofst <= 65535
@end verbatim

@tab
@verbatim
addiu rd,rs,ofst
@end verbatim

@tab
@item
@verbatim
rs == 0
@end verbatim

@tab
@verbatim
li rd,ofst
@end verbatim

@tab
@item
@verbatim
rs <> 0
&& rs <> rd
@end verbatim

@tab
@verbatim
li rd,ofst
addu rd,rd,rs
@end verbatim

@tab
@c FIXME: alternative expansion
@c move rd,rs
@c addiu48 rd,ofst8 bytes irrespective of rd/rs are gpr3 or gpr4
@item
@verbatim
rs <> 0
&& rs == rd
&& NMS
@end verbatim

@tab
@verbatim
li $at,ofst
addu rd,$at,rs
@end verbatim

@tab
@item
@verbatim
rs <> 0
&& rs == rd
@end verbatim

@tab
@verbatim
addiu[48] rd,rd,ofst
@end verbatim

@tab
@end multitable
@anchor{x_la_label}
@item la rd,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@tab
@item
@verbatim
(no-PIC
 || local_p(label))
&& gprel_p(label)
&& (cmodel=[medium|auto])
@end verbatim

@tab
@verbatim
addiu rd,gp,%gp_rel(label)
@end verbatim

@tab
@item
@verbatim
(no-PIC
 || local_p(label))
&& NMS
@end verbatim

@tab
@verbatim
aluipc rd,%pcrel_hi(label)
addiu rd,%pcrel_lo(label)
@end verbatim

@tab
@item
@verbatim
no-PIC
|| local_p(label)
@end verbatim

@tab
@verbatim
addiupc[48] rd,label
@end verbatim

@tab
@item
@verbatim
PIC
&& !local_p(label)
&& (cmodel=[medium|auto]
   || linkrelax)
@end verbatim

@tab
@verbatim
lw rd,%got_disp(label)($gp)
@end verbatim

@tab
@item
@verbatim
PIC
&& !local_p(label)
&& cmodel=large
@end verbatim

@tab
@verbatim
aluipc rd,%got_pcrel_hi(label)
lw rd,%got_lo(label)(rd)
@end verbatim

@tab
@item
@tab
@tab
@end multitable
@item jal label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
no-PIC
@end verbatim

@tab
@verbatim
balc label
@end verbatim

@tab
@item
@verbatim
PIC
@end verbatim

@tab
@verbatim
lw $at,%got_disp(label)($gp)
jalrc $at
@end verbatim

@tab
@end multitable
@item jraddiusp imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
-4095 <= imm <= 65535
&& (imm%16 != 0)
@end verbatim

@tab
@verbatim
addiu $sp,$sp,imm
jrc $ra
@end verbatim

@tab
@item else

@tab
@verbatim
li at,imm
addu sp,sp,at
jrc ra
@end verbatim

@tab
@end multitable
@anchor{x_macro_li}@item li rd,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
-1 <= imm <= 126
@end verbatim

@tab
@verbatim
li rd,imm
@end verbatim

@tab
@item
@verbatim
-4095 <= imm <= 65535
@end verbatim

@tab
@verbatim
addiu rd,$0,imm
@end verbatim

@tab
@item
@verbatim
NMS
&& (imm & 0xfff) == 0
@end verbatim

@tab
@verbatim
lui rd,%hi(imm)
@end verbatim

@tab
@item
@verbatim
NMS
@end verbatim

@tab
@verbatim
lui rd,%hi(imm)
addiu rd,%lo(imm)
@end verbatim

@tab
@item else

@tab
@verbatim
li[48] rd,imm
@end verbatim

@tab
@end multitable
@item li.s rd,immfloat
@multitable @columnfractions 0.3 0.4 0.3
@item
@xref{x_macro_li,,li}.
@end multitable
@item li.s fd,immfloat
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
li $at,immfloat
mtc1 $at,fd
@end verbatim
@tab
@xref{x_macro_li,,li}.
@end multitable
@item li.d rd,immdouble
@multitable @columnfractions 0.3 0.4 0.3
@item
not NMS
@tab
@verbatim
li48 rd+1,%hi32(immdouble)
li48 rd,%lo32(immdouble)
@end verbatim
@tab
@item
-Gx, x >=8
@tab
@verbatim
  ld rd, label
  .sdata:
label:
  .dword immdouble
@end verbatim
@tab
@xref{x_ld_label,,ld from label}.
@item
-Gx, x < 8
@tab
@verbatim
  ld rd, label
  .rodata:
label:
  .dword immdouble
@end verbatim
@tab
@xref{x_ld_label,,ld from label}.
@end multitable
@item li.d fd,immdouble
@multitable @columnfractions 0.3 0.4 0.3
@item
-Gx, x >= 8
@tab
@verbatim
  ldc1 fd,label
  .sdata
label: 
  .dword immdouble
@end verbatim

@tab @xref{x_ldc1_label,,ldc1 from label}.
@item
-Gx, x < 8
@tab
@verbatim
  ldc1 fd,label
  .rodata
label: 
  .dword immdouble
@end verbatim

@tab @xref{x_ldc1_label,,ldc1 from label}.
@end multitable
@item nor rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
li $at,imm
nor rt,rs,$at
@end verbatim

@tab
@end multitable
@item rol rd,rs,rt
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
rs == rt
@end verbatim

@tab
@verbatim
negu $at,rt
rorv rd,rs,$at
@end verbatim

@tab
@item
@verbatim
rs <> rt
@end verbatim

@tab
@verbatim
negu rd,rt
rorv rd,rs,rd
@end verbatim

@tab
@end multitable
@item rol rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
ror rd,rs,rot5
@end verbatim

@tab
imm5 = imm & 0x1f@*
rot5 = (32 - imm5) & 0x1f
@end multitable
@item ror rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
ror rd,rs,imm5
@end verbatim

@tab
imm5 = imm & 0x1f
@end multitable
@item rotl rd,rs,rt
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
rs == rt
@end verbatim

@tab
@verbatim
negu $at,rt
rorv rd,rs,$at
@end verbatim

@tab
@item
@verbatim
rs <> rt
@end verbatim

@tab
@verbatim
negu rd,rt
rorv rd,rs,rd
@end verbatim

@tab
@end multitable
@item rotl rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
ror rd,rs,rot5
@end verbatim

@tab
imm5 = imm & 0x1f@*
rot5 = (32 - imm5) & 0x1f
@end multitable
@item sge rd,rs,rt
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
slt rd,rs,rt
xori rd,rd,1
@end verbatim

@tab
@end multitable
@item sge rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
0 <= imm <= 4095
@end verbatim

@tab
@verbatim
slti rd,rs,imm
xori rd,rd,1
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm
slt rd,rs,rt
xori rd,rd,1
@end verbatim

@tab
@end multitable
@item sgeu rd,rs,rt
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
sltu rd,rs,rt
xori rd,rd,1
@end verbatim

@tab
@end multitable
@item sgeu rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
0 <= imm <= 4095
@end verbatim

@tab
@verbatim
sltiu rd,rs,imm
xori rd,rd,1
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm
sltu rd,rs,rt
xori rd,rd,1
@end verbatim

@tab
@end multitable
@item sgt rd,rs,rt
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
slt rd,rt,rs
@end verbatim

@tab
@end multitable
@item sgt rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
li $at,imm
slt rd,$at,rs
@end verbatim

@tab
@end multitable
@item sgtu rd,rs,rt
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
sltu rd,rt,rs
@end verbatim

@tab
@end multitable
@item sgtu rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
li $at,imm
sltu rd,$at,rs
@end verbatim

@tab
@end multitable
@item sle rd,rs,rt
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
slt rd,rt,rs
xori rd,rd,1
@end verbatim

@tab
@end multitable
@item sle rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
li $at,imm
slt rd,$at,rs
xori rd,rd,1
@end verbatim

@tab
@end multitable
@item sleu rd,rs,rt
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
sltu rd,rt,rs
xori rd,rd,1
@end verbatim

@tab
@end multitable
@item sleu rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
li $at,imm
sltu rd,$at,rs
xori rd,rd,1
@end verbatim

@tab
@end multitable
@item seq rd,rs,rt
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
rs == 0
@end verbatim

@tab
@verbatim
sltiu rd,rt,1
@end verbatim

@tab
@item
@verbatim
rt == 0
@end verbatim

@tab
@verbatim
sltiu rd,rs,1
@end verbatim

@tab
@item else

@tab
@verbatim
xor rd,rs,rt
sltiu rd,rd,1
@end verbatim

@tab
@end multitable
@item seq rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
imm == 0
@end verbatim

@tab
@verbatim
sltiu rd,rs,1
@end verbatim

@tab
@item
@verbatim
rs == 0
@end verbatim

@tab
@verbatim
move rd,$0
@end verbatim

@tab
Always CLEAR
@item
@verbatim
imm < 4096
@end verbatim

@tab
@verbatim
xori rd,rs,imm
sltiu rd,rd,1
@end verbatim

@tab
@item
@verbatim
-8192 < imm < 0
@end verbatim

@tab
@verbatim
addiu rd,rs,-imm
sltiu rd,rd,1
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm
xor rd,rs,$at
sltiu rd,rd,1
@end verbatim

@tab
@end multitable
@item sne rd,rs,rt
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
rs == 0
@end verbatim

@tab
@verbatim
sltu,rd,$0,rt
@end verbatim

@tab
@item
@verbatim
rt == 0
@end verbatim

@tab
@verbatim
sltu rd,$0,rs
@end verbatim

@tab
@item else

@tab
@verbatim
xor rd,rs,rt
sltu rd,$0,rd
@end verbatim

@tab
@end multitable
@item sne rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
imm == 0
@end verbatim

@tab
@verbatim
sltu rd,$0,rs
@end verbatim

@tab
@item
@verbatim
rs == 0
@end verbatim

@tab
@verbatim
addiu rd,$0,1
@end verbatim

@tab
Always SET
@item
@verbatim
imm < 4096
@end verbatim

@tab
@verbatim
xori rd,rs,imm
sltu rd,$0,rd
@end verbatim

@tab
@item
@verbatim
-8192 < imm < 0
@end verbatim

@tab
@verbatim
addiu rd,rs,-imm
sltu rd,$0,rd
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm
xor rd,rs,$at
sltu rd,$0,rd
@end verbatim

@tab
@end multitable
@item slt rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
0 < imm < 4096
@end verbatim

@tab
@verbatim
slti rd,rs,imm
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm
slt rd,rs,$at
@end verbatim

@tab
@end multitable
@item sltu rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
imm < 4096
@end verbatim

@tab
@verbatim
sltiu rd,rs,imm
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm
slt rd,rs,$at
@end verbatim

@tab
@end multitable
@item bgt rs,rt,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
rt == 0
@end verbatim

@tab
@verbatim
bgtzc rs,label
@end verbatim

@tab
@item
@verbatim
rs == 0
@end verbatim

@tab
@verbatim
bltzc rt,label
@end verbatim

@tab
@item else

@tab
@verbatim
slt $i,rs,rt
bnezc $at,label
@end verbatim

@tab
@end multitable
@item bgt rs,imm,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
imm == -1
@end verbatim

@tab
@verbatim
beqzc rs,label
@end verbatim

@tab
@item
@verbatim
imm == 0
@end verbatim

@tab
@verbatim
bgtzc rs,label
@end verbatim

@tab
@item
@verbatim
imm > GPR_SMAX
@end verbatim

@tab
@verbatim
nop
@end verbatim

@tab
Always FALSE
@item
@verbatim
imm == GPR_SMIN
@end verbatim

@tab
@verbatim
bc label
@end verbatim

@tab
Always TRUE
@item
@verbatim
0 < imm < 127
@end verbatim

@tab
@verbatim
bgeic rs,imm+1,label
@end verbatim

@tab
@item
@verbatim
imm < 4095
@end verbatim

@tab
@verbatim
slti $at,rs,imm+1
beqzc $at,label
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm+1
slt $at,rs,$at
beqzc $at,label
@end verbatim

@tab
@end multitable
@item bgtu rs,rt,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
rt == 0
@end verbatim

@tab
@verbatim
bnezc $rs,label
@end verbatim

@tab
@item
@verbatim
rs == 0
@end verbatim

@tab
@verbatim
nop
@end verbatim

@tab
Always FALSE
@item else

@tab
@verbatim
sltu $at,rs,rs
bnezc $at,label
@end verbatim

@tab
@end multitable
@item bgtu rs,imm,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
rs == 0
@end verbatim

@tab
@verbatim
nop
@end verbatim

@tab
Always FALSE
@item
@verbatim
imm == -1
&& 32-bit
@end verbatim

@tab
@verbatim
nop
@end verbatim

@tab
Always FALSE
@item
@verbatim
imm == 0
@end verbatim

@tab
@verbatim
bnezc $rs,label
@end verbatim

@tab
@item
@verbatim
0 < imm < 127
@end verbatim

@tab
@verbatim
bgeiuc rs,imm+1,label
@end verbatim

@tab
@item
@verbatim
imm < 4095
@end verbatim

@tab
@verbatim
sltiu $at,rs,imm+1
beqzc $at,label
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm+1
sltu $at,rs,$at
beqzc $at,label
@end verbatim

@tab
@end multitable
@item ble rs,rt,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
rt == 0
@end verbatim

@tab
@verbatim
blezc rs,label
@end verbatim

@tab
@item
@verbatim
rs == 0
@end verbatim

@tab
@verbatim
bgezc rt,label
@end verbatim

@tab
@item else

@tab
@verbatim
slt $at,rs,rs
beqzc $at,label
@end verbatim

@tab
@end multitable
@item ble rs,imm,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
imm > GPR_SMAX
@end verbatim

@tab
@verbatim
bc label
@end verbatim

@tab
Always TRUE
@item
@verbatim
imm == -1
@end verbatim

@tab
@verbatim
bltzc rs,label
@end verbatim

@tab
@item
@verbatim
imm == 0
@end verbatim

@tab
@verbatim
blezc rs,label
@end verbatim

@tab
@item
@verbatim
0 < imm < 127
@end verbatim

@tab
@verbatim
bltic rs,imm+1,label
@end verbatim

@tab
@item
@verbatim
imm < 4095
@end verbatim

@tab
@verbatim
slti $at,rs,imm+1
bnezc $at,label
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm+1
slt $at,rs,$at
bnezc $at,label
@end verbatim

@tab
@end multitable
@item bleu rs,rt,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
rt == 0
@end verbatim

@tab
@verbatim
beqzc rs,label
@end verbatim

@tab
@item
@verbatim
rs == 0
@end verbatim

@tab
@verbatim
bc label
@end verbatim

@tab
Always TRUE
@item else

@tab
@verbatim
sltu $at,rs,rt
beqzc $at,label
@end verbatim

@tab
@end multitable
@item bleu rs,imm,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
imm == -1
&& 32-bit
@end verbatim

@tab
@verbatim
bc label
@end verbatim

@tab
Always TRUE
@item
@verbatim
rs == 0
@end verbatim

@tab
@verbatim
bc label
@end verbatim

@tab
Always TRUE
@item
@verbatim
imm == 0
@end verbatim

@tab
@verbatim
beqzc rs,label
@end verbatim

@tab
@item
@verbatim
0 < imm < 127
@end verbatim

@tab
@verbatim
bltiuc rs,imm+1,label
@end verbatim

@tab
@item
@verbatim
imm < 4095
@end verbatim

@tab
@verbatim
slti $at,rs,imm+1
bnezc $at,label
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm+1
slt $at,rs,$at
bnezc $at,label
@end verbatim

@tab
@end multitable
@item bgezal rs,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
 bltzc rs,0fbalc label
0:
@end verbatim

@tab
@end multitable
@item bltzal rs,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
bgezc rs,0fbalc label
0:
@end verbatim

@tab
@end multitable
@item Immediate supported - if immediate doesn't fit, load to register
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@tab
@end multitable
@item add rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
non-NMS
@end verbatim

@tab
@verbatim
li $at,imm
add rd,rs,$at
@end verbatim

@tab
@end multitable
@item addu rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
-4095 <= imm <= 65535
@end verbatim

@tab
@verbatim
addiu rd,rs,imm
@end verbatim

@tab
@item
@verbatim
non-NMS
&& rd == rs
@end verbatim

@tab
@verbatim
addiu[48] rd,rd,imm
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm
addu rd,rs,$at
@end verbatim

@tab
@end multitable
@item and rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
0 <= imm < 4096
@end verbatim

@tab
@verbatim
andi rd,rs,imm
@end verbatim

@tab
@item
@verbatim
imm < 0
|| imm >= 4096
@end verbatim

@tab
@verbatim
li $at,imm
and rd,rs,$at
@end verbatim

@tab
@end multitable
@item sub rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
non-NMS
@end verbatim

@tab
@verbatim
li $at,imm
sub rt,rs,$at
@end verbatim

@tab
@end multitable
@item subu rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
-4095 <= imm <= 65535
@end verbatim

@tab
@verbatim
addiu rt,rs,-imm
@end verbatim

@tab
@item
@verbatim
non-NMS
&& rd == rs
@end verbatim

@tab
@verbatim
addiu[48] rt,rs,-imm
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm
subu rt,rs,$at
@end verbatim

@tab
@end multitable
@item beq rs,imm,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
0 < imm <= 127
@end verbatim

@tab
@verbatim
beqic rs,imm,label
@end verbatim

@tab
@item
@verbatim
else
@end verbatim

@tab
@verbatim
li $at,imm
beq rs,$at,label
@end verbatim

@tab
@end multitable
@item bge rs,imm,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
0 < imm <= 127
@end verbatim

@tab
@verbatim
bgeic rs,imm,label
@end verbatim

@tab
@item
@verbatim
imm < 4096
@end verbatim

@tab
@verbatim
slti $at,rs,imm
beqzc $at,label
@end verbatim

@tab
@item
@verbatim
imm < 0
|| imm >= 4096
@end verbatim

@tab
@verbatim
li $at,imm
slt $at,rs,$at
beqzc $at,label
@end verbatim

@tab
@end multitable
@item bgeu rs,imm,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
imm <= 127
@end verbatim

@tab
@verbatim
bgeiuc rs,imm,label
@end verbatim

@tab
@item
@verbatim
imm < 4096
@end verbatim

@tab
@verbatim
sltiu $at,rs,imm
beqzc $at,label
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm
sltu $at,rs,$at
beqzc $at,label
@end verbatim

@tab
@end multitable
@item blt rs,imm,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
imm == 0
@end verbatim

@tab
@verbatim
bltzc rs,label
@end verbatim

@tab
@item
@verbatim
imm == 1
@end verbatim

@tab
@verbatim
blezc rs,label
@end verbatim

@tab
@item
@verbatim
0 < imm <= 127
@end verbatim

@tab
@verbatim
bltic rs,imm,label
@end verbatim

@tab
@item
@verbatim
imm < 4096
@end verbatim

@tab
@verbatim
slti $at,rs,imm
bnezc $at,label
@end verbatim

@tab
@item else
@verbatim
imm < 0
|| imm >= 4096
@end verbatim

@tab
@verbatim
li $at,imm
slt $at,rs,$at
bnezc $at,label
@end verbatim

@tab
@end multitable
@item bltu rs,imm,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
imm <= 127
@end verbatim

@tab
@verbatim
bltiuc rs,imm,label
@end verbatim

@tab
@item
@verbatim
imm < 4096
@end verbatim

@tab
@verbatim
sltiu $at,rs,imm
bnezc $at,label
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm
sltu $at,rs,$at
bnezc $at,label
@end verbatim

@tab
@end multitable
@item bne rs,imm,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
0 < imm <= 127
@end verbatim

@tab
@verbatim
bneic rs,imm,label
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm
bnec rs,$at,label
@end verbatim

@tab
@end multitable
@item or rt,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
0 <= imm < 4096
@end verbatim

@tab
@verbatim
ori rt,rs,imm
@end verbatim

@tab
@item
@verbatim
imm < 0
|| imm >= 4096
@end verbatim

@tab
@verbatim
li $at,imm
or rt,rs,$at
@end verbatim

@tab
@end multitable
@item slt rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
0 <= imm < 4096
@end verbatim

@tab
@verbatim
slti rd,rs,imm
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm
slt rd,rs,$at
@end verbatim

@tab
@end multitable
@item sltu rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
imm < 4096
@end verbatim

@tab
@verbatim
sltiu rd,rs,imm
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm
slt rd,rs,$at
@end verbatim

@tab
@end multitable
@item xor rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
0 <= imm < 4096
@end verbatim

@tab
@verbatim
xori rt,rs,imm
@end verbatim

@tab
@item
@verbatim
imm < 0
|| imm >= 4096
@end verbatim

@tab
@verbatim
li $at,imm
xor rt,rs,$at
@end verbatim

@tab
@end multitable
@item teq rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
non-NMS
@end verbatim

@tab
@verbatim
li $at,imm
teq rs,$at
@end verbatim

@tab
@end multitable
@item tne rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
non-NMS
@end verbatim

@tab
@verbatim
li $at,imm
tne rs,$at
@end verbatim

@tab
@item
@tab
@tab
@end multitable
@anchor{x_aclr_ofst}@item aclr bit,ofst(rs)
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
-256 <= ofst <= 256
@end verbatim

@tab
@verbatim
aclr bit,ofst(rs)
@end verbatim

@tab
@item
@verbatim
-4095 <= ofst <= 65535
@end verbatim

@tab
@verbatim
addiu $at,rs,ofst
aclr bit,0($at)
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,ofst
addu $at,$at,rs
aclr bit,0(rs)
@end verbatim

@tab
@end multitable
@item aset bit,ofst(rs)
@multitable @columnfractions 0.3 0.4 0.3
@item
@xref{x_aclr_ofst,,aclr at offset}.
@end multitable
@anchor{x_cache_ofst}@item cache hint,ofst(rs)
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
-256 <= ofst <= 255
@end verbatim

@tab
@verbatim
cache op,ofst(rs)
@end verbatim

@tab
@item
@verbatim
-4095 <= ofst <= 65535
@end verbatim

@tab
@verbatim
addiu $at,rs,ofst
cache op,0($at)
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,ofst
addu $at,$at,rs
cache op,0(rs)
@end verbatim

@tab
@end multitable
@item cachee hint,ofst(rs)
@multitable @columnfractions 1 0 0
@item @xref{x_cache_ofst,,cache operation at offset}.
@end multitable
@anchor{x_pref_ofst}@item pref hint,ofst(rs)
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
-256 <= ofst <= 4095
@end verbatim

@tab
@verbatim
pref op,ofst(rs)
@end verbatim

@tab
@item
@verbatim
-4095 <= ofst <= 65535
@end verbatim

@tab
@verbatim
addiu $at,rs,ofst
pref op,0($at)
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,ofst
addu $at,$at,rs
pref op,0(rs)
@end verbatim

@tab
@item
@tab
@tab
@end multitable
@item prefe hint,ofst(rs)
@multitable @columnfractions 1
@item @xref{x_pref_ofst,,pre-fetch operation at offset}.
@end multitable
@anchor{x_lw_ofst}@item lw rd,ofst(rs)
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
-255 <= ofst <= 4095
@end verbatim

@tab
@verbatim
lw rd,ofst(rs)
@end verbatim

@tab
@item
@verbatim
-4095 <= ofst <= 65535
&& rd <> rs
@end verbatim

@tab
@verbatim
addiu rd,rs,ofst
lw rd,0(rd)
@end verbatim

@tab
@item
@verbatim
-4095 <= ofst <= 65535
&& rd == rs
@end verbatim

@tab
@verbatim
addiu rd,rd,ofst
lw rd,0(rd)
@end verbatim

@tab
@item
@verbatim
rd == rs
@end verbatim
@tab
@verbatim
addiu[48] rs,rs,ofst
lw rd,0(rs)
@end verbatim
@tab
@item
@verbatim
rd <> rs
&& NMS
@end verbatim

@tab
@verbatim
lui rd,%hi(ofst)
addu rd,rd,rs
lw rd,%lo(ofst)(rd)
@end verbatim
@tab
@item
@verbatim
else
@end verbatim

@tab
@verbatim
lui $at,%hi(ofst)
addu $at,$at,rs
lw rd,%lo(ofst)($at)
@end verbatim

@tab
@end multitable
@anchor{x_lw_label}@item lw rd,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
(no-PIC
 || local_p(label))
&& gprel_p(label)
&& (cmodel=[medium|auto])
@end verbatim

@tab
@verbatim
lw rd,%gprel(label)($gp)
@end verbatim

@tab
@item
@verbatim
(no-PIC
 || local_p(label))
&& rd == 0
&& NMS
@end verbatim

@tab
@verbatim
aluipc $at,%pcrel_hi(label)
lw rd,%lo(label)($at)
@end verbatim

@tab
@item
@verbatim
(no-PIC
 || local_p(label))
&& rd <> 0
&& NMS
@end verbatim

@tab
@verbatim
aluipc rd,%pcrel_hi(label)
lw rd,%lo(label)(rd)
@end verbatim

@tab
@item
@verbatim
no-PIC
|| local_p(label)
@end verbatim

@tab
@verbatim
lwpc rd,label
@end verbatim

@tab
LW only, not applicable for sub-word loads
@item
@verbatim
PIC
&& !local_p(label)
&& rd == 0
&& (cmodel=[auto|medium]
   || linkrelax)
@end verbatim

@tab
@verbatim
lw $at,%got_disp(label)($gp)
lw rd,0($at)
@end verbatim

@tab
@item
@verbatim
PIC
&& rd == 0
&& !local_p(label)
&& cmodel=large
&& NMS
@end verbatim

@tab
@verbatim
aluipc $at,%got_pcrel_hi(label)
lw at,%got_lo(label)($at)
lw rd,0($at)
@end verbatim

@tab
@item
@verbatim
PIC
&& !local_p(label)
&& rd == 0
&& cmodel=large
@end verbatim

@tab
@verbatim
lwpc $at,%got_pcrel32(label)
lw rd,0($at)
@end verbatim

@tab
@item
@verbatim
PIC
&& !local_p(label)
&& rd <> 0
&& (cmodel=[auto|medium]
   || linkrelax)
@end verbatim

@tab
@verbatim
lw rd,%got_disp(label)($gp)
lw rd,0(rd)
@end verbatim

@tab
@item
@verbatim
PIC
&& !local_p(label)
&& rd <> 0
&& cmodel=large
&& NMS
@end verbatim

@tab
@verbatim
aluipc rd,%got_pcrel_hi(label)
lw rd,%got_lo(label)(rd)
lw rd,0(rd)
@end verbatim

@tab
@item
@verbatim
PIC
&& !local_p(label)
&& rd <> 0
&& cmodel=large
@end verbatim

@tab
@verbatim
lwpc rd,%got_pcrel32(label)
lw rd,0(rd)
@end verbatim

@tab
@end multitable
@anchor{x_lwx_label}@item lw rd,label(rs)
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
rd != 0 &&
rd != rs
@end verbatim
@tab
@verbatim
la rd,label
lwx rd,rd(rs)
@end verbatim
@tab
@xref{x_la_label,,la of label}.
@item
else
@tab
@verbatim
la $at,label
lwx rd,$at(rs)
@end verbatim
@tab
@xref{x_la_label,,la of label}.
@end multitable
@item lb rd,label(rs)
@itemx lbu rd,label(rs)
@itemx lh rd,label(rs)
@itemx lhu rd,label(rs)
@multitable @columnfractions 1
@item @xref{x_lwx_label,,lw from label with index}.
@end multitable

@anchor{x_ldx32_label}@item ld rd,label(rs)
@multitable @columnfractions 0.3 0.4 0.3
@item
rd != rs
@tab
@verbatim
la $at,label
lwx rd,$at(rs)
addiu $at,$at,4
lwx rd+1,$at(rs)
@end verbatim
@tab
@xref{x_la_label,,la of label}.
@end multitable
@item sd rd,label(rs)
@multitable @columnfractions 1
@item @xref{x_ldx32_label,,ld from label with index}.
@end multitable

@item lwu rd,ofst(rs)
@itemx lb rd,ofst(rs)
@itemx lbu rd,ofst(rs)
@itemx lh rd,ofst(rs)
@itemx lhu rd,ofst(rs)
@itemx ulh rd,ofst(rs)
@itemx ulhu rd,ofst(rs)
@itemx ulw rd,ofst(rs)
@multitable @columnfractions 1
@item @xref{x_lw_ofst,,lw from ofst}.
@end multitable
@item lwu rd,label
@itemx lb rd,label
@itemx lbu rd,label
@itemx lh rd,label
@itemx lhu rd,label
@itemx ulh rd,label
@itemx ulhu rd,label
@itemx ulw rd,label
@multitable @columnfractions 1
@item @xref{x_lw_label,,lw from label}.
@end multitable
@item ld rd,ofst(rs)
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
-252 <= ofst < 4092
&& rd == rs
@end verbatim

@tab
@verbatim
lw rd+1,ofst+4(rs)
lw rd,ofst(rs)
@end verbatim

@tab
@item
@verbatim
-252 <= ofst < 4092
&& rd <> rs
@end verbatim

@tab
@verbatim
lw rd,ofst(rs)
lw rd+1,ofst+4(rs)
@end verbatim

@tab
@item
@verbatim
-4095 <= ofst <= 65535
@end verbatim

@tab
@verbatim
addiu $at,rs,ofst
lw rd,0($at)
lw rd+1,4($at)
@end verbatim

@tab
@item
@verbatim
%hi(ofst) == %hi(ofst+4)
&& rs == 0
@end verbatim

@tab
@verbatim
lui $at,%hi(ofst)
lw rd,%lo(ofst)($at)
lw rd+1,%lo(ofst+4)($at)
@end verbatim

@tab
@item
@verbatim
%hi(ofst) == %hi(ofst+4)
&& rs <> 0
@end verbatim

@tab
@verbatim
lui $at,%hi(ofst)
addu $at,$at,rs
lw rd,%lo(ofst)($at)
lw rd+1,%lo(ofst+4)($at)
@end verbatim

@tab
@item
@verbatim
rs == 0
@end verbatim

@tab
@verbatim
li $at,ofst
lw rd,0($at)
lw rd+1,4($at)
@end verbatim

@tab
@item
@verbatim
rs <> 0
@end verbatim

@tab
@verbatim
li $at,ofst
addu $at,$at,rs
lw rd,0($at)
lw rd+1,4($at)
@end verbatim

@tab
@end multitable
@anchor{x_ld_label}@item ld rd,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
(non-PIC
 || local_p(label))
&& gprel_p(label)
&& cmodel=[medium|auto]
@end verbatim

@tab
@verbatim
lw rd,%gprel(label)($gp)
lw rd+1,%gprel(label+4)($gp)
@end verbatim

@tab
@item
@verbatim
(non-PIC
 || local_p(label))
&& NMS
@end verbatim

@tab
@verbatim
aluipc $at,%pcrel_hi(label)
lw rd,%lo(label)($at)
lw rd+1,%lo(label+4)($at)
@end verbatim

@tab
@item
@verbatim
(non-PIC
 || local_p(label))
@end verbatim

@tab
@verbatim
lwpc rd,label
lwpc rd+1,label+4
@end verbatim

@tab
@item
@verbatim
PIC
&& !local_p(label)
&& (cmodel=[auto|medium]
   || linkrelax)
@end verbatim

@tab
@verbatim
lw $at,%got_disp(label)($gp)
lw rd,0($at)
lw rd+1,4($at)
@end verbatim

@tab
@item
@verbatim
PIC
&& !local_p(label)
&& cmodel=large
&& NMS
@end verbatim

@tab
@verbatim
lui $at,%got_pcrel_hi(label)
lw rd,%got_lo(label)($at)
lw rd+1,%got_lo(label+4)($at)
@end verbatim

@tab
@item
@verbatim
PIC
&& !local_p(label)
&& cmodel=large
@end verbatim

@tab
@verbatim
lwpc rd,%got_pcrel32(label)($at)
lwpc rd+1,%got_pcrel32(label+4)($at)
@end verbatim

@tab
@item
@tab
@tab
@end multitable
@anchor{x_ll_ofst}@item ll rd,ofst(rs)
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
-256 <= ofst < 255
@end verbatim

@tab
@verbatim
ll rd,ofst(rs)
@end verbatim

@tab
@item
@verbatim
-4095 <= ofst <= 65535
&& rd <> rs
@end verbatim

@tab
@verbatim
addiu rd,rs,ofst
ll rd,0(rd)
@end verbatim

@tab
@item
@verbatim
-4095 <= ofst <= 65535
&& rd == rs
@end verbatim

@tab
@verbatim
addiu rd,rd,ofst
ll rd,0(rd)
@end verbatim

@tab
@item
@verbatim
rd <> rs
@end verbatim

@tab
@verbatim
li rd,ofst
addu rd,rd,rs
ll rd,0(rd)
@end verbatim

@tab
@item
@verbatim
rd == rs
@end verbatim

@tab
@verbatim
li $at,ofst
addu $at,$at,rs
ll rd,0($at)
@end verbatim

@tab
@end multitable
@anchor{x_ll_label}@item ll rd,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
rd == 0
@end verbatim

@tab
@verbatim
la $at,label
ll rd,0($at)
@end verbatim

@tab
@xref{x_la_label,,la of label}.
@item
@verbatim
rd <> 0
@end verbatim

@tab
@verbatim
la rd,label
ll rd,0(rd)
@end verbatim
@tab
@xref{x_la_label,,la of label}.
@end multitable
@item lle rd,ofst(rs)
@multitable @columnfractions 1
@item @xref{x_ll_ofst,,ll from offset}.
@end multitable
@item lle rd,label
@multitable @columnfractions 1
@item @xref{x_ll_label,,ll from label}.
@end multitable
@anchor{x_llwp_ofst}@item llwp rd,ru,ofst(rs)
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
rs == 0 && rd != 0
@end verbatim
@tab
@verbatim
li rd,ofst
llwp rd,ru,(rd)
@end verbatim
@tab
@item
@verbatim
rs == 0 && ru != 0
@end verbatim
@tab
@verbatim
li ru,ofst
llwp rd,ru,(ru)
@end verbatim
@tab
@item
@verbatim
-4095 <= ofst <= 65535
&& rd != 0
@end verbatim
@tab
@verbatim
addiu rd,rs,ofst
llwp rd,ru,(rd)
@end verbatim
@tab
@item
@verbatim
-4095 <= ofst <= 65535
&& ru != 0
@end verbatim
@tab
@verbatim
addiu ru,rs,ofst
llwp rd,ru,(ru)
@end verbatim
@tab
@item
@verbatim
rd != 0
@end verbatim
@tab
@verbatim
li rd,ofst
addiu rd,rd,rs
llwp rd,ru,(rd)
@end verbatim
@tab
@item
@verbatim
ru != 0
@end verbatim
@tab
@verbatim
li ru,ofst
addiu ru,ru,rs
llwp rd,ru,(ru)
@end verbatim
@tab
@end multitable
@anchor{x_llwp_label}@item llwp rd,ru,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
rd != 0
@end verbatim
@tab
@verbatim
la rd,label
llwp rd,ru,(rd)
@end verbatim
@tab
@xref{x_la_label,,la of label}.
@item
@verbatim
ru != 0
@end verbatim
@tab
@verbatim
la ru,label
llwp rd,ru,(ru)
@end verbatim
@tab
@xref{x_la_label,,la of label}.
@end multitable
@item llwpe rd,ru,ofst(rs)
@itemx lldp rd,ru,ofst(rs)
@multitable @columnfractions 1
@item @xref{x_llwp_ofst,,llwp from offset}.
@item
@end multitable
@item llwpe rd,ru,label
@itemx lldp rd,ru,label
@multitable @columnfractions 1
@item @xref{x_llwp_label,,llwp from label}.
@item
@end multitable
@anchor{x_sw_ofst}@item sw rd,ofst(rs)
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
-256 <= ofst < 4095
@end verbatim

@tab
@verbatim
sw rd,ofst(rs)
@end verbatim

@tab
@item
@verbatim
-4095 <= ofst <= 65535
&& rd <> rs
@end verbatim

@tab
@verbatim
addiu $at,rs,ofst
sw rd,0($at)
@end verbatim

@tab
@item
@tab
@verbatim
li $at,%hi(ofst)
addu $at,$at,rs
sw rd,%lo(ofst)($at)
@end verbatim

@tab
@item
@tab
@verbatim
li $at,%hi(ofst)
addu $at,$at,rs
sw rd,%lo(ofst)($at)
@end verbatim

@tab
@end multitable
@anchor{x_sw_label}@item sw rd,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
(no-PIC
 || local_p(label))
&& gprel_p(label)
&& cmodel=[medium|auto]
@end verbatim

@tab
@verbatim
sw rd,%gprel(label)($gp)
@end verbatim

@tab
@item
@verbatim
(no-PIC
 || local_p(label))
&& NMS
@end verbatim

@tab
@verbatim
aluipc $at,%pcrel_hi(label)($gp)
sw rd,%lo(label)($at)
@end verbatim

@tab
@item
@verbatim
(no-PIC
 || local_p(label))
@end verbatim

@tab
@verbatim
swpc rd,label
@end verbatim

@tab
SW only, not applicable for sub-word stores
@item
@verbatim
PIC
&& !local_p(label)
&& (cmodel=[auto|medium]
   || linkrelax)
@end verbatim

@tab
@verbatim
lw $at,%got_disp(label)($gp)
sw rd,0($at)
@end verbatim

@tab
@item
@verbatim
PIC
&& !local_p(label)
&& cmodel=large
&& NMS
@end verbatim

@tab
@verbatim
aluipc $at,%got_pcrel_hi(label)
lw $at,%got_lo(label)($at)
lw rd,0($at)
@end verbatim

@tab
@item
@verbatim
PIC
&& !local_p(label)
&& cmodel=large
@end verbatim

@tab
@verbatim
lwpc $at,label
lw rd,0($at)
@end verbatim

@tab
@end multitable
@item sb rd,ofst(rs)
@itemx sh rd,ofst(rs)
@itemx ush rd,ofst(rs)
@itemx usw rd,ofst(rs)
@multitable @columnfractions 1
@item @xref{x_sw_ofst,,sw to offset}.
@item
@end multitable
@anchor{x_sd_ofst}@item sd rd,ofst(rs)
@multitable @columnfractions 1
@item @xref{x_sd_ofst,,sd to offset}.
@end multitable
@item sc rd,ofst(rs)
@itemx sce rd,ofst(rs)
@multitable @columnfractions 1
@item @xref{x_ll_ofst,,ll from offset}.
@end multitable
@item sb rd,label
@itemx sh rd,label
@itemx ush rd,label
@itemx usw rd,label
@multitable @columnfractions 1
@item @xref{x_sw_label,,sw to label}.
@item
@end multitable
@item sd rd,label
@itemx uld rd,label
@itemx usd rd,label
@multitable @columnfractions 1
@item @xref{x_ld_label,,ld from label}.
@end multitable
@item sc rd,label
@itemx sce rd,label
@multitable @columnfractions 1
@item @xref{x_ll_label,,ll from label}.
@end multitable
@anchor{x_scwp_ofst}@item scwp rd,ru,ofst(rs)
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
rs == 0
@end verbatim
@tab
@verbatim
li $at,ofst
scwp rd,ru,($at)
@end verbatim
@tab
@item
@verbatim
-4095 <= ofst <= 65535
@end verbatim
@tab
@verbatim
addiu $at,rs,ofst
scwp rd,ru,($at)
@end verbatim
@tab
@item else
@tab
@verbatim
li $at,ofst
addiu $at,$at,rs
scwp rd,ru,($at)
@end verbatim
@tab
@end multitable
@anchor{x_scwp_label}@item scwp rd,ru,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
la $at,label
scwp rd,ru,($at)
@end verbatim
@tab
@xref{x_la_label,,la of label}.
@end multitable
@item scwpe rd,ru,ofst(rs)
@itemx scdp rd,ru,ofst(rs)
@multitable @columnfractions 1
@item @xref{x_scwp_ofst,,scwp to offset}.
@item
@end multitable
@item scwpe rd,ru,label
@itemx scdp rd,ru,label
@multitable @columnfractions 1
@item @xref{x_scwp_label,,scwp to label}.
@end multitable
@item lwc1 rd,ofst(rs)
@itemx ldc1 rd,ofst(rs)
@itemx swc1 rd,ofst rs)
@itemx sdc1 rd,ofst(rs)
@itemx l.s rd,ofst(rs)
@itemx l.d rd,ofst(rs)
@itemx s.s rd,ofst rs)
@itemx s.d rd,ofst(rs)
@multitable @columnfractions 1
@item @xref{x_sw_ofst,,sw to offset}.
@end multitable
@item lwc1 rd,label
@anchor{x_ldc1_label}@itemx ldc1 rd,label
@itemx swc1 rd,label
@itemx sdc1 rd,label
@itemx l.s rd,label
@itemx l.d rd,label
@itemx s.s rd,label rs)
@itemx s.d rd,label
@multitable @columnfractions 1
@item @xref{x_sw_label,,sw to label}.
@end multitable
@item lwc2 rd,ofst(rs)
@itemx ldc2 rd,ofst(rs)
@itemx swc2 rd,ofst(rs)
@itemx sdc2 rd,ofst(rs)
@multitable @columnfractions 1
@item @xref{x_ll_ofst,,ll from offset}.
@end multitable
@item lwc2 rd,label
@itemx ldc2 rd,label
@itemx swc2 rd,label
@itemx sdc2 rd,label
@multitable @columnfractions 1
@item @xref{x_ll_label,,ll from label}.
@item
@end multitable
@anchor{x_swx_label}@item sw rd,label(rs)
@multitable @columnfractions 0.3 0.4 0.3
@item
not NMS
@tab
@verbatim
la $at,label
swx rd,$at(rs)
@end verbatim
@tab
@xref{x_la_label,,la of label}.
@end multitable
@item sb rd,label(rs)

@itemx sbu rd,label(rs)
@itemx sh rd,label(rs)
@itemx shu rd,label(rs)
@multitable @columnfractions 1
@item @xref{x_swx_label,,sw to label with index}.
@end multitable

@anchor{x_lwc1x_label}@item lwc1 rd,label(rs)
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
la $at,label
lwc1x rd,$at(rs)
@end verbatim
@tab
@xref{x_la_label,,la of label}.
@end multitable
@item swc1 rd,label(rs)
@itemx ldc1 rd,label(rs)
@itemx sdc1 rd,label(rs)
@multitable @columnfractions 1
@item @xref{x_lwc1x_label,,lwc1 from label with index}.
@end multitable

@item Division & Multiplication
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@tab
@end multitable
@item div rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
imm == 0
@end verbatim

@tab
@verbatim
break
@end verbatim

@tab
@item
@verbatim
imm == 1
@end verbatim

@tab
@verbatim
move rd,rs
@end verbatim

@tab
@item
@verbatim
imm == -1
@end verbatim

@tab
@verbatim
negu rd,rs
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm
div rd,rs,$at
@end verbatim

@tab
@end multitable
@item divu rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
imm == 0
@end verbatim

@tab
@verbatim
break
@end verbatim

@tab
@item
@verbatim
imm == 1
@end verbatim

@tab
@verbatim
move rd,rs
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm
divu rd,rs,$at
@end verbatim

@tab
@end multitable
@item rem rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
imm == 0
@end verbatim

@tab
@verbatim
break
@end verbatim

@tab
@item
@verbatim
imm == 1
@end verbatim

@tab
@verbatim
move rd,$0
@end verbatim

@tab
@item
@verbatim
imm == -1
@end verbatim

@tab
@verbatim
move rd,$0
@end verbatim

@tab
@item else

@tab
@verbatim
li $at,imm
mod rd,rs,$at
@end verbatim

@tab
@end multitable
@item mul rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
li $at,imm
mul rd,rs,$at
@end verbatim

@tab
@end multitable
@item dabs rd,rt
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@verbatim
move rd,rt
bgezc rt,0f
dsubu rd,0,rt
0:
@end verbatim

@tab
@end multitable
@item dla rd,ofst(rs)
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
-4095 <= ofst < 65536
@end verbatim

@tab
@verbatim
addiu rd,rs,ofst
@end verbatim

@tab
@item
@verbatim
rs == 0
@end verbatim

@tab
@verbatim
li rd,ofst
@end verbatim

@tab
@item
@verbatim
rs <> 0
&& rs <> rd
@end verbatim

@tab
@verbatim
li rd,ofst
addu rd,rd,rs
@end verbatim

@tab
@item
@verbatim
rs <> 0
&& rs == rd
@end verbatim

@tab
@verbatim
li $at,ofst
addu rd,$at,rs
@end verbatim

@tab
@end multitable
@item dla rd,label
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
(no-PIC
 || local_p(label))
&& gprel_p(label)
@end verbatim

@tab
@verbatim
addiu rd,gp,%gp_rel(label)
@end verbatim

@tab
@item
@verbatim
no-PIC
|| local_p(label)
@end verbatim

@tab
@verbatim
lapc rd,label
@end verbatim

@tab
@item
@verbatim
PIC
&& local_p(label)
&& cmodel=[auto|medium]
@end verbatim

@tab
@verbatim
lw rd,%got_disp(label)($gp)
@end verbatim

@tab
@end multitable
@item dli rd,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
-1 <= imm <= 126
@end verbatim

@tab
@verbatim
li rd,imm
@end verbatim

@tab
@item
@verbatim
-4095 <= ofst < 65536
@end verbatim

@tab
@verbatim
addiu rd,$0,imm
@end verbatim

@tab
@item
@verbatim
(imm % 4096) == 0
@end verbatim

@tab
@verbatim
lui rd,%hi(imm)
@end verbatim

@tab
@item
@verbatim
imm < 2^32
@end verbatim

@tab
@verbatim
li[48] rd,imm
@end verbatim

@tab
@item else

@tab
@verbatim
dlui rd,%hi32(imm)
addiu rd,rd,%lo32(imm)
@end verbatim

@tab
hi32(X) = (X >> 32) & 0xffffffff@*
lo32(X) = (X & 0xffffffff)
@end multitable

@item dadd rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@tab
@end multitable
@item daddu rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
-4095 <= ofst < 65536
@end verbatim

@tab
@verbatim
daddiu rt,rs,imm
@end verbatim

@tab
@c FIXME: TEST
@item
else

@tab
@verbatim
li $at,imm
daddu rt,rs,$at
@end verbatim

@tab
@c FIXME: TEST
@end multitable
@item dsub rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@tab
@end multitable
@item dsubu rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
-4095 <= ofst < 65536
@end verbatim

@tab
@verbatim
daddiu rt,rs,-imm
@end verbatim

@tab
@c FIXME: TEST
@item
else

@tab
@verbatim
li $at,imm
dsubu rt,rs,$at
@end verbatim

@tab
@c FIXME: TEST
@end multitable
@item drol rd,rs,rt
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
rs == rt
@end verbatim

@tab
@verbatim
dnegu $at,rt
drorv rd,rs,$at
@end verbatim

@tab
@item
@verbatim
rs <> rt
@end verbatim

@tab
@verbatim
dnegu rd,rt
drorv rd,rs,rd
@end verbatim

@tab
@end multitable
@item drol rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
((64 - (imm & 0x1f)) & 0x3f) >= 32
@tab
@verbatim
dror32 rd,rs,(32 - rot6)
@end verbatim

@tab
imm5 = imm & 0x1f@*
rot6 = (64 - imm5) & 0x3f
@item
else

@tab
@verbatim
dror rd,rs,rot
@end verbatim

@tab
@end multitable
@item drotl rd,rs,rt
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
rs == rt
@end verbatim

@tab
@verbatim
dnegu $at,rt
drorv rd,rs,$at
@end verbatim

@tab
@item
@verbatim
rs <> rt
@end verbatim

@tab
@verbatim
dnegu rd,rt
drorv rd,rs,rd
@end verbatim

@tab
@end multitable
@item drotl rd,rs,imm
@multitable @columnfractions 0.3 0.4 0.3
@item
((64 - (imm & 0x1f)) & 0x3f) >= 32
@tab
@verbatim
dror32 rd,rs,(32 - rot6)
@end verbatim

@tab
imm5 = imm & 0x1f@*
rot6 = (64 - imm5) & 0x3f
@item
else

@tab
@verbatim
dror rd,rs,rot6
@end verbatim

@tab
imm5 = imm & 0x1f@*
rot6 = (64 - imm5) & 0x3f
@item
@tab
@tab
@end multitable
@item ofst operations
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@tab
@end multitable
@item ld rd,ofst(rs)
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
0 <= ofst < 4092
&& rd == rs
@end verbatim

@tab
@verbatim
lw rd+1,ofst+4(rs)
lw rd,ofst(rs)
@end verbatim

@tab
@item
@verbatim
0 <= ofst < 4092
&& rd <> rs
@end verbatim

@tab
@verbatim
lw rd,ofst(rs)
lw rd+1,ofst+4(rs)
@end verbatim

@tab
@item
@verbatim
-4095 <= ofst < 65536
@end verbatim

@tab
@verbatim
addiu $at,rs,ofst
lw rd,0($at)
lw rd+1,4($at)
@end verbatim

@tab
@item
@verbatim
%hi(ofst) == %hi(ofst+4)
&& rs == 0
@end verbatim

@tab
@verbatim
lui $at,%hi(ofst)
lw rd,%lo(ofst)($at)
lw rd+1,%lo(ofst+4)($at)
@end verbatim

@tab
@item
@verbatim
%hi(ofst) == %hi(ofst+4)
&& rs <> 0
@end verbatim

@tab
@verbatim
lui $at,%hi(ofst)
addu $at,$at,rs
lw rd,%lo(ofst)($at)
lw rd+1,%lo(ofst+4)($at)
@end verbatim

@tab
@item
@verbatim
rs == 0
@end verbatim

@tab
@verbatim
li $at,ofst
lw rd,0($at)
lw rd+1,4($at)
@end verbatim

@tab
@item
@verbatim
rs == 0
@end verbatim

@tab
@verbatim
li $at,ofst
addu $at,$at,rs
lw rd,0($at)
lw rd+1,4($at)
@end verbatim

@tab
@end multitable
@item ld rd,label
@multitable @columnfractions 0.3 0.4 0.3
@item
no-PIC
&& gprel_p(label)

@tab
@verbatim
lw rd,%gprel(label)($gp)
lw rd+1,%gprel(label+4)($gp)
@end verbatim

@tab
@item
@verbatim
no-PIC
@end verbatim

@tab
@verbatim
lui $at,%hi(label)
lw rd,%lo(label)($at)
lw rd+1,%lo(labe+4)($at)
@end verbatim

@tab
@item
@verbatim
PIC
&& local_p(label)
@end verbatim

@tab
@verbatim
lw $at,%got_page(label)($gp)
lw rd,%got_ofst(label)($at)
lw rd+1,%got_ofst(label+4)($at)
@end verbatim

@tab
@item
@verbatim
PIC
&& !local_p(label)
@end verbatim

@tab
@verbatim
lw $at,%got_disp(label)($gp)
lw rd,0($at)
lw rd+1,4($at)
@end verbatim

@tab
@end multitable
@c @item lld rd,ofst(rs)
@c @multitable @columnfractions 0.3 0.4 0.3
@c @item
@c @tab
@c @tab
@c TODO[64]
@c @end multitable
@c @item lld rd,label
@c @multitable @columnfractions 0.3 0.4 0.3
@c @item
@c @tab
@c @tab
@c TODO[64]
@c @end multitable
@c @item lldp rd,ofst(rs)
@c @multitable @columnfractions 0.3 0.4 0.3
@c @item
@c @tab
@c @tab
@c TODO[64]
@c @end multitable
@c @item lldp rd,label
@c @multitable @columnfractions 0.3 0.4 0.3
@c @item
@c @tab
@c @tab
@c TODO[64]
@c @end multitable
@c @item ld rd,ofst(rs)
@c @multitable @columnfractions 0.3 0.4 0.3
@c @item
@c @tab
@c @tab
@c TODO[64]
@c @end multitable
@c @item ld rd,label
@c @multitable @columnfractions 0.3 0.4 0.3
@c @item
@c @tab
@c @tab
@c TODO[64]
@c @end multitable
@c @item sd rd,ofst(rs)
@c @multitable @columnfractions 1
@c @item @xref{x_ld_ofst,,ld from offset}.
@c @end multitable
@c @item sd rd,label
@c @itemx uld rd,label
@c @itemx usd rd,label
@c @multitable @columnfractions 1
@c @item @xref{x_ld_label,,ld from label}.
@c @end multitable
@c @item scd rd,ofst(rs)
@c @multitable @columnfractions 0.3 0.4 0.3
@c @item
@c @tab
@c @tab
@c TODO[64]
@c @end multitable
@c @item scd rd,label
@c @multitable @columnfractions 0.3 0.4 0.3
@c @item
@c @tab
@c @tab
@c TODO[64]
@c @end multitable
@c @item scdp rd,ofst(rs)
@c @multitable @columnfractions 0.3 0.4 0.3
@c @item
@c @tab
@c @tab
@c TODO[64]
@c @end multitable
@c @item scdp rd,label
@c @multitable @columnfractions 0.3 0.4 0.3
@c @item
@c @tab
@c @tab
@c TODO[64]
@c @end multitable
@c @item sc rd,ofst(rs)
@c @multitable @columnfractions 0.3 0.4 0.3
@c @item
@c @tab
@c @tab
@c TODO[64]
@c @end multitable
@c @item sc rd,label
@c @multitable @columnfractions 0.3 0.4 0.3
@c @item
@c @tab
@c @tab
@c TODO[64]
@c @item
@c @tab
@c @tab
@c @end multitable
@item NMS expansions
@multitable @columnfractions 0.3 0.4 0.3
@item
@tab
@tab
@end multitable
@item Instruction
@multitable @columnfractions 0.3 0.4 0.3
@item
@verbatim
Conditions
@end verbatim

@tab
@verbatim
Expansion
@end verbatim

@tab
Remarks and supplementary calculations
@end multitable
@item ext rt,rs,pos,size
@multitable @columnfractions 0.3 0.4 0.3
@item (pos + size) > 31
@tab
@verbatim
srl rt,rs,pos
@end verbatim
@tab
@item else
@tab
@verbatim
sll rt,rs,(31-pos-size)
srl rt,rt,(31-size)
@end verbatim
@tab
@end multitable
@item ins rt,rs,pos,size
@multitable @columnfractions 0.3 0.4 0.3
@item rt == rs
@tab
@verbatim
extw $at,rt,rs,pos
extw rt,$at,rt,(1+size-pos)
extw rt,rt,rt,(31-size)
@end verbatim
@tab
@item pos == 0 && size == 31
@tab
@verbatim
move rt,rs
@end verbatim
@tab
@item pos != 0
@tab
@verbatim
extw rt,rt,rt,pos
extw rt,rt,rs,(1+size-pos)
extw rt,rt,rt,(31-size)
@end verbatim
@tab
@item else
@tab
@verbatim
extw rt,rt,rs,(1+size-pos)
extw rt,rt,rt,(31-size)
@end verbatim
@tab
@end multitable
@end table

Note that while the assembler provides these macros for
compatibility, it does not make any attempt to optimize them with the
surrounding code.
